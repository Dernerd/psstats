###############
# Device Detector - The Universal Device Detection library for parsing User Agents
#
# @link https://n3rds.work
# @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
###############

# Ace or ACE France (www.acemobile.fr)
Ace:
  regex: '(?:BUZZ [12]|BUZZ 2|CLEVER 1|URBAN 1(?: Pro)?)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'BUZZ ([12]) Lite'
      model: 'Buzz $1 Lite'
    - regex: 'BUZZ ([12]) Plus'
      model: 'Buzz $1 Plus'
    - regex: 'BUZZ ([12])'
      model: 'Buzz $1'
    - regex: 'CLEVER 1'
      model: 'Clever 1'
    - regex: 'URBAN 1 Pro'
      model: 'Urban 1 Pro'
    - regex: 'URBAN 1'
      model: 'Urban 1'

'Tunisie Telecom':
  regex: 'StarTrail TT(?:[);/ ]|$)'
  device: 'smartphone'
  model: 'StarTrail by TT'

# SFR
SFR:
  regex: 'StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab'
  device: 'smartphone'
  models:
    - regex: 'StarXtrem II(?:[);/ ]|$)'
      model: 'StarXtrem 2'
    - regex: 'StarXtrem ?([3-6])(?:[);/ ]|$)'
      model: 'StarXtrem $1'
    - regex: 'StarXtrem(?:[);/ ]|$)'
      model: 'StarXtrem' # ZTE
    - regex: 'StarTrail III(?:[);/ ]|$)'
      model: 'StarTrail 3'
    - regex: 'StarTrail II(?:[);/ ]|$)'
      model: 'StarTrail 2' # Huawei Ascend Y200
    - regex: 'StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)' # ZTE
      model: 'StarTrail $1 $2G'
    - regex: 'StarTrail[ _]?([1-9])(?:[);/ ]|$)'
      model: 'StarTrail $1'
    - regex: 'StarTrail(?:[);/ ]|$)'
      model: 'StarTrail' # ZTE

    - regex: 'StarShine II(?:[);/ ]|$)'
      model: 'StarShine 2' # ZTE
    - regex: 'StarShine(?:[);/ ]|$)'
      model: 'StarShine' # Huawei U8180
    - regex: 'STARADDICT 4(?:[);/ ]|$)'
      model: 'Staraddict 4'
    - regex: 'STARADDICT III(?:[);/ ]|$)'
      model: 'Staraddict 3' # Coolpad 8861U
    - regex: 'STARADDICT II Plus(?:[);/ ]|$)'
      model: 'Staraddict 2 Plus' # ZTE Grand X
    - regex: 'STARADDICT II(?:[);/ ]|$)'
      model: 'Staraddict 2' # Alcatel One Touch 995
    - regex: 'STARADDICT(?:[);/ ]|$)'
      model: 'Staraddict' # ZTE
    - regex: 'StarText II(?:[);/ ]|$)'
      model: 'StarText 2' # ZTE
    - regex: 'StarText(?:[);/ ]|$)'
      model: 'StarText' # ZTE
    - regex: 'StarNaute II(?:[);/ ]|$)'
      model: 'StarNaute 2' # ZTE
    - regex: 'StarNaute(?:[);/ ]|$)'
      model: 'StarNaute' # ZTE Amigo
    - regex: 'StarTab'
      model: 'StarTab'
      device: 'tablet'

    - regex: '((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build'
      model: '$1'

# HTC (htc.com)
HTC:
  regex: 'HTC|Sprint (?:APA|ATP)|ADR(?!910L)[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))|(Amaze[ _]4G|(?<!BLU LIFE )One ?[XELSV\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: '2PZC5(?:[);/ ]|$)'
      model: 'U11'
    - regex: 'XV6975(?:[);/ ]|$)'
      model: 'Imagio'
    - regex: 'PG86100(?:[);/ ]|$)'
      model: 'Evo 3G'
    - regex: 'PC36100(?:[);/ ]|$)'
      model: 'Evo 4G'
    - regex: '(?:HTV33|601HT)(?:[);/ ]|$)'
      model: 'U11'
    - regex: '(?:801e|802[wdt])'
      model: 'One'
    - regex: 'PJ83100(?:[);/ ]|$)'
      model: 'One X'
    - regex: 'One Mini 2(?:[);/ ]|$)'
      model: 'One Mini 2'
    - regex: 'X2-HT(?:[);/ ]|$)'
      model: 'One X2'
    - regex: 'ISW13HT(?:[);/ ]|$)'
      model: 'J'
    - regex: 'HTL22(?:[);/ ]|$)'
      model: 'J One'
    - regex: 'HTL23(?:[);/ ]|$)'
      model: 'J Butterfly'
    - regex: '(?:0PJA2|0PJA10)(?:[);/ ]|$)'
      model: 'One M9'
    - regex: 'X525a(?:[);/ ]|$)'
      model: 'One X+'
    - regex: '2PQ93(?:[);/ ]|$)'
      model: 'One A9'
    - regex: 'ADR6300'
      model: 'Droid Incredible'
    - regex: 'ADR6400L'
      model: 'ThunderBolt'
    - regex: 'ADR6410LRA'
      model: 'Droid Incredible 3'
    - regex: 'SPV E600'
      model: 'Excalibur'
    - regex: 'SPV E650'
      model: 'Vox'
    - regex: '2PYB2'
      model: 'Bolt'
    - regex: '2PS64'
      model: '10'
    - regex: '0PM92(?:[);/ ]|$)'
      model: 'Desire 626S'
    - regex: '0PCV1(?:[);/ ]|$)'
      model: 'Desire 510'
    - regex: '608t(?:[);/ ]|$)'
      model: 'Desire 608t'
    - regex: 'EXODUS 1(?:[);/ ]|$)'
      model: 'Exodus 1'

    - regex: 'NexusHD2' # custom rom for hd2
      model: 'HD2'
    - regex: 'HTC[ _\-]P715a'
      device: 'tablet'
      model: 'P715a'
    - regex: 'HTC[ _\-]Flyer Build'
      device: 'tablet'
      model: 'Flyer'
    - regex: 'HTC[ _\-]Flyer[ _\-]([\w]{1,5})'
      device: 'tablet'
      model: 'Flyer $1'
    - regex: 'HTC[ _\-]One[ _\-]max(?:[);/ ]|$)'
      device: 'phablet'
      model: 'One max'
    - regex: 'HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build'
      model: '$1'
    - regex: 'HTC[ _]([^/;]+) Build'
      model: '$1'
    - regex: 'HTC[ _]([a-z0-9]+[ _\-]?(?:[a-z0-9_+\-])*)'
      model: '$1'
    - regex: 'USCCHTC(\d+)'
      model: '$1'
    - regex: 'Sprint (ATP.*) Build'
      device: 'tablet'
      model: '$1 (Sprint)'
    - regex: 'Sprint (APA.*) Build'
      model: '$1 (Sprint)'
    - regex: '(?:HTC-)?HTC(?:[\-/ ])?([a-z0-9\-_]+)'
      model: '$1'
    - regex: 'HTC;(?: )?([a-z0-9 ]+)'
      model: '$1'
    - regex: '(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))'
      model: '$1 $2'
    - regex: '(Amaze[ _]4G|One ?[XELSV\+]*) Build'
      model: '$1'
    - regex: '(ADR[^;/]+) Build'
      model: '$1'
    - regex: '(ADR[a-z0-9]+)'
      model: '$1'
    - regex: '(One M8)'
      model: '$1'
    - regex: '0PAJ5(?:[);/ ]|$)'
      model: 'One E8'
    - regex: 'HTV32(?:[);/ ]|$)'
      model: '10'
    - regex: 'HTV31(?:[);/ ]|$)'
      model: 'J Butterfly'

# microsoft
Microsoft:
  regex: 'KIN\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface'
  device: 'smartphone'
  models:
    - regex: 'KIN\.(One|Two)'
      device: 'feature phone'
      model: 'Kin $1'

    - regex: 'RM-1099|Lumia 430'
      model: 'Lumia 430'
    - regex: 'RM-1114|Lumia 435'
      model: 'Lumia 435'
    - regex: 'RM-1031|Lumia 532'
      model: 'Lumia 532'
    - regex: 'Lumia 535 Dual SIM'
      model: 'Lumia 535 Dual SIM'
    - regex: 'RM-109[02]|RM-1089|Lumia 535'
      model: 'Lumia 535'
    - regex: 'RM-1141|Lumia 540'
      model: 'Lumia 540'
    - regex: 'RM-1127|Lumia 550'
      model: 'Lumia 550'
    - regex: 'RM-1010'
      model: 'Lumia 638'
    - regex: 'Lumia 640 XL LTE'
      model: 'Lumia 640 XL LTE'
      device: 'phablet'
    - regex: 'RM-106[57]|RM-1096|Lumia 640 XL'
      model: 'Lumia 640 XL'
      device: 'phablet'
    - regex: 'Lumia 640 LTE Dual SIM'
      model: 'Lumia 640 LTE Dual SIM'
    - regex: 'Lumia 640 LTE'
      model: 'Lumia 640 LTE'
    - regex: 'Lumia 640 Dual SIM'
      model: 'Lumia 640 Dual SIM'
    - regex: 'RM-1109|RM-1113|RM-107[23467]|Lumia 640'
      model: 'Lumia 640'
    - regex: 'RM-1154|Lumia 650'
      model: 'Lumia 650'
    - regex: 'RM-1152'
      model: 'Lumia 650 SS'
    - regex: 'Lumia 850'
      model: 'Lumia 850'
    - regex: 'Lumia 950 XL Dual SIM'
      model: 'Lumia 950 XL Dual SIM'
      device: 'phablet'
    - regex: 'Lumia 950 XL'
      model: 'Lumia 950 XL'
      device: 'phablet'
    - regex: 'Lumia 950 Dual SIM'
      model: 'Lumia 950 Dual SIM'
    - regex: 'Lumia 950|RM-1118'
      model: 'Lumia 950'
    - regex: 'RM-994|Lumia 1320'
      model: 'Lumia 1320'
    - regex: 'Lumia 1530'
      model: 'Lumia 1530'
    - regex: 'Surface Book 3'
      device: 'desktop'
      model: 'Surface Book 3'
    - regex: 'Surface Pro( [34])?'
      device: 'desktop'
      model: 'Surface Pro$1'

    - regex: 'Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)'
      model: 'Lumia $1'

# NOKIA
Nokia:
  regex: 'Nokia(?!Browser|Webview|; GT-I8750)|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|ARM; 909'
  device: 'smartphone'
  models:
    # Nokia branded phones by HMD Global
    # 2017 Models
    - regex: 'TA-10(07|23|29|35)'
      model: '2'
    - regex: 'TA-10(20|28|32|38)'
      model: '3'
    - regex: 'TA-10(24|27|44|53)'
      model: '5'
    - regex: 'TA-10(00|03|21|25|33|39|54)'
      model: '6'
    - regex: 'TA-1041'
      model: '7'
    - regex: 'TA-10(04|12|52)'
      model: '8'
    # 2018 Models
    - regex: 'Nokia 8\.1'
      model: '8.1'
    - regex: 'Nokia 8 Sirocco'
      model: '8 Sirocco'
    - regex: 'Nokia 7\.1'
      model: '7.1'
    - regex: 'Nokia 7 plus'
      model: '7 plus'
    - regex: 'Nokia 6\.1 Plus'
      model: '6.1 Plus'
    - regex: 'Nokia 6\.1'
      model: '6.1'
    - regex: 'Nokia 5\.1 Plus'
      model: '5.1 Plus'
    - regex: 'Nokia 5\.1'
      model: '5.1'
    - regex: 'Nokia 3\.1 Plus'
      model: '3.1 Plus'
    - regex: 'Nokia 3\.1'
      model: '3.1'
    - regex: 'Nokia 2\.1'
      model: '2.1'
    - regex: 'Nokia 1 Plus'
      model: '1 Plus'
    - regex: 'Nokia 1'
      model: '1'

    # Nokia phones
    - regex: 'RX-51 N900'
      model: 'N900'
    - regex: '(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])'
      model: 'Asha 500'
    - regex: 'Nokia5130c(?:-2)?'
      model: '5130 XpressMusic'
    - regex: 'Nokia5230'
      model: 'Nuron'
    - regex: 'Nokia5233'
      model: '5233'
    - regex: 'Nokia5800d-1'
      model: '5800 XpressMusic'
    - regex: 'Nokia6210Navigator'
      model: 'Navigator'
    - regex: 'Nokia8800e?'
      model: 'Sapphire Arte'
    - regex: 'NOKIA-RH-17'
      model: '2280'
    - regex: 'NOKIA-RH-27'
      model: '6225'
    - regex: 'NOKIA-RH-34'
      model: '6585'
    - regex: 'NOKIA-RH-48'
      model: '3105'
    - regex: 'NOKIA-RM-11'
      model: '3205'
    - regex: 'Nokia808 PureView'
      model: '808 PureView'
    - regex: 'Nokia ?([0-9]{4})c(?:-)?'
      model: '$1 Classic'
    - regex: 'Nokia ?([0-9]{4})s(?:-)?'
      model: '$1 Slide'
    - regex: 'Nokia ?([0-9]{4})'
      model: '$1'
    - regex: '(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])'
      model: 'Asha $1'
    - regex: 'Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])'
      model: '$1'

    - regex: 'Nokia;? 520T'
      model: 'Lumia 520T'
    - regex: 'RM-91[45]'
      model: 'Lumia 520'
    - regex: 'RM-997|Nokia 526'
      model: 'Lumia 526'
    - regex: 'RM-846'
      model: 'Lumia 620'
    - regex: 'RM-97[68]'
      model: 'Lumia 630'
    - regex: 'RM-97[45]'
      model: 'Lumia 635'
    - regex: 'RM-1027'
      model: 'Lumia 636'
    - regex: 'NOKIA;? 710'
      model: 'Lumia 710'
    - regex: 'Nokia;? 720T'
      model: 'Lumia 720T'
    - regex: 'RM-885'
      model: 'Lumia 720'
    - regex: 'Lumia 730'
      model: 'Lumia 730'
    - regex: 'RM-103[89]'
      model: 'Lumia 735'
    - regex: 'Nokia;? 800C'
      model: 'Lumia 800C'
    - regex: 'Nokia;? 800'
      model: 'Lumia 800'
    - regex: 'Nokia 820'
      model: 'Lumia 820'
    - regex: 'RM-984'
      model: 'Lumia 830'
    - regex: 'Nokia;? 900'
      model: 'Lumia 900'
    - regex: '(RM-82[12]|Nokia;? 920)(?: Build|[_);/])'
      model: 'Lumia 920'
    - regex: '(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])'
      model: 'Lumia 925'
    - regex: 'Lumia 929'
      model: 'Lumia Icon'
    - regex: 'RM-1045'
      model: 'Lumia 930'
    - regex: '(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])'
      model: 'Lumia 1020'
    - regex: 'NOKIA;? 1520\.1'
      model: 'Lumia 1520.1'

    - regex: 'Nokia ([A-Za-z0-9\. ]+)(?: Build|\))'
      model: '$1'

    - regex: 'Nokia(N[0-9]+)'
      model: '$1'
    - regex: 'Nokia-([a-z0-9]+)'
      model: 'N$1'
    - regex: 'NOKIA; (?!Qt;)([a-z0-9\- ]+)'
      model: '$1'
    - regex: 'NOKIA[ _]?([a-z0-9\-]+)'
      model: '$1'
    - regex: 'NOKIA/([a-z0-9 ]+)'
      model: '$1'
    - regex: '(Lumia [a-z0-9\-]+ XL)'
      device: 'phablet'
      model: '$1'
    - regex: '(Lumia [a-z0-9\-]+)'
      model: '$1'
    - regex: 'Maemo RX-51 ([a-z0-9]+)'
      model: '$1'
    - regex: 'Maemo RX-34'
      model: 'N800'
    - regex: 'NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series'
      model: ''
    - regex: 'portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)'
      model: '$1'
    - regex: 'nok([0-9]+)'
      model: '$1'
    - regex: 'Symbian.*\s([a-z0-9]+)$'
      device: 'feature phone'
      model: '$1'

# CnM
CnM:
  regex: 'CnM'
  device: 'tablet'
  models:
    - regex: 'CnM[ \-](?:Touchpad|TP)[ \-]([0-9\.]+)'
      model: 'Touchpad $1'

# RIM/BlackBerry
RIM:
  regex: 'BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1'
  device: 'smartphone'
  models:
    - regex: 'BBA100-[12]'
      model: 'BlackBerry DTEK60'
    - regex: 'BBB100-[1234567]'
      model: 'KEYone'
    - regex: 'BBC100-1'
      model: 'Aurora'
    - regex: 'BBD100-[126]'
      model: 'Motion'
    - regex: 'BBE100-[123456789]'
      model: 'KEY2 LE'
    - regex: 'BBF100-[1234567]'
      model: 'KEY2'
    - regex: 'BBF100-8'
      model: 'KEY2 Silver'
    - regex: 'BBF100-9'
      model: 'KEY2 Black'
    - regex: 'BBG100-1'
      model: 'Evolve'
    - regex: 'BBH100-1'
      model: 'Evolve X'
    - regex: 'STV100-[1234]'
      model: 'BlackBerry Priv'
    - regex: 'STH100-[12]'
      model: 'BlackBerry DTEK50'
    - regex: 'BB10; ([a-z0-9\- ]+)\)'
      model: 'BlackBerry $1'
    - regex: 'PlayBook.+RIM Tablet OS'
      model: 'BlackBerry Playbook'
      device: 'tablet'
    - regex: 'BlackBerry(?: )?([a-z0-9]+)'
      model: 'BlackBerry $1'
    - regex: 'rim([0-9]+)'
      model: 'BlackBerry $1'
    - regex: '9000'
      model: 'Bold 9000'
    - regex: '9300'
      model: 'Curve 3G 9300'
    - regex: '(8520|8530|9220|9320|9360)'
      model: 'Curve $1'
    - regex: '9630'
      model: 'Tour 9630'
    - regex: '9720'
      model: '9720'
    - regex: '(9800|9860)'
      model: 'Torch $1'
    - regex: 'BlackBerry'
      model: 'BlackBerry'

# CHIA
CHIA:
  regex: '(SVEGLIO[ _][QH]1|TREO_TAB8G|GTA7WF)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'SVEGLIO[ _]([QH]1)'
      model: 'Sveglio $1'
    - regex: 'TREO_TAB8G'
      device: 'tablet'
      model: 'TREO TAB8G'
    - regex: 'GTA7WF'
      device: 'tablet'
      model: 'GTA7WF'

# PALM
Palm:
  regex: '(?:Pre|Pixi)/(\d+)\.(\d+)|Palm|Treo|Xiino'
  device: 'smartphone'
  models:
    - regex: '((?:Pre|Pixi))/(\d+\.\d+)'
      model: '$1 $2'
    - regex: 'Palm(?:[ \-])?((?!OS|Source|scape)[a-z0-9]+)'
      model: '$1'
    - regex: 'Treo([a-z0-9]+)'
      model: 'Treo $1'
    - regex: 'Tungsten'
      model: 'Tungsten'
    - regex: 'Xiino|Palmscape' # Browser for Palm OS only
      model: ''

# HP or Hewlett-Packard
HP:
  regex: 'Hewlett-Packard|HP/HP|HP EliteBook 820|TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+'
  device: 'smartphone'
  models:
    - regex: 'HP Slate 6 Voice Tab'
      model: 'Slate 6 VoiceTab'
      device: 'phablet'

    - regex: 'HP 10 Plus'
      model: '10 Plus'
      device: 'tablet'

    - regex: 'HP ([78][^)/;]*)(?: Build|\))'
      model: 'Slate $1'
      device: 'tablet'

    - regex: 'Compaq ([78][^/;]*) Build'
      model: 'Compaq $1'
      device: 'tablet'
    - regex: 'HP Pro Slate 8'
      model: 'Pro Slate 8'
      device: 'tablet'
    - regex: 'HP Slate ?(.+) Build'
      model: 'Slate $1'
      device: 'tablet'
    - regex: 'HP Slate ?([0-9]+)'
      model: 'Slate $1'
      device: 'tablet'
    - regex: 'TouchPad/(\d+\.\d+)|hp-tablet'
      model: 'TouchPad'
      device: 'tablet'
    - regex: 'HP; ([^;/)]+)'
      model: '$1'
    - regex: 'HP ?iPAQ ?([a-z0-9]+)'
      model: 'iPAQ $1'
    - regex: 'webOS.*(P160U)'
      model: 'Veer'

    - regex: 'HP ProBook (6560b)'
      device: 'desktop'
      model: 'ProBook $1'
    - regex: 'HP EliteBook 820 G2'
      device: 'desktop'
      model: 'EliteBook 820 G2'
    - regex: 'Z240 Tower Workstation'
      device: 'desktop'
      model: 'Z240 Tower Workstation'

# TiPhone
TiPhone:
  regex: 'TiPhone ?([a-z0-9]+)'
  device: 'smartphone'
  model: '$1'

# Apple
Apple:
  regex: '(?:iTunes-)?Apple[ _]?TV|Apple/|(?:Apple-|iTunes-)?(?<!like )(?:iPad|iPhone)|iPh[0-9],[0-9]|CFNetwork|HomePod|Watch ?OS|Watch1,[12]|MDCR_Mac|ICRU_iP(?:ad|hone)'
  models:
    - regex: 'HomePod'
      device: 'smart speaker'
      model: 'HomePod'

      # specific wearable devices
    - regex: 'Watch1,1'
      device: 'wearable'
      model: 'Watch 38mm'
    - regex: 'Watch1,2'
      device: 'wearable'
      model: 'Watch 42mm'
    - regex: 'Watch2,6'
      device: 'wearable'
      model: 'Watch Series 1 38mm'
    - regex: 'Watch2,7'
      device: 'wearable'
      model: 'Watch Series 1 42mm'
    - regex: 'Watch2,3'
      device: 'wearable'
      model: 'Watch Series 2 38mm'
    - regex: 'Watch2,4'
      device: 'wearable'
      model: 'Watch Series 2 42mm'
    - regex: 'Watch3,[13]'
      device: 'wearable'
      model: 'Watch Series 3 38mm'
    - regex: 'Watch3,[24]'
      device: 'wearable'
      model: 'Watch Series 3 42mm'
    - regex: 'Watch5,(?:9|11)'
      device: 'wearable'
      model: 'Watch SE 40mm'
    - regex: 'Watch5,1[02]'
      device: 'wearable'
      model: 'Watch SE 44mm'
    - regex: 'Watch([456]),[13]'
      device: 'wearable'
      model: 'Watch Series $1 40mm'
    - regex: 'Watch([456]),[24]'
      device: 'wearable'
      model: 'Watch Series $1 44mm'

      # specific desktop devices
    - regex: '(?:.+_)?MacBook7(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook 13" (2010)'
    - regex: '(?:.+_)?MacPro5(?:%2C|,)1'
      device: 'desktop'
      model: 'Mac Pro (2010-2012)'
    - regex: '(?:.+_)?iMac12(?:%2C|,)1'
      device: 'desktop'
      model: 'iMac 21.5" (2011)'
    - regex: '(?:.+_)?iMac17(?:%2C|,)1'
      device: 'desktop'
      model: 'iMac 27" (2015)'
    - regex: '(?:.+_)?iMac19(?:%2C|,)2'
      device: 'desktop'
      model: 'iMac 21.5" (2019)'
    - regex: '(?:.+_)?iMac19(?:%2C|,)1'
      device: 'desktop'
      model: 'iMac 27" (2019)'
    - regex: '(?:.+_)?iMac20(?:%2C|,)[12]'
      device: 'desktop'
      model: 'iMac 27" (2020)'
    - regex: '(?:.+_)?iMac14(?:%2C|,)2'
      device: 'desktop'
      model: 'iMac 27" (2013)'
    - regex: '(?:.+_)?iMac14(?:%2C|,)4'
      device: 'desktop'
      model: 'iMac 21.5" (2014)'
    - regex: '(?:.+_)?iMac14(?:%2C|,)1'
      device: 'desktop'
      model: 'iMac 21.5" (2013)'
    - regex: '(?:.+_)?MacBook6(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook 13" (2009)'
    - regex: '(?:.+_)?MacBook8(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook 12" (2015)'
    - regex: '(?:.+_)?MacBook9(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook 12" (2016)'
    - regex: '(?:.+_)?iMac10(?:%2C|,)1'
      device: 'desktop'
      model: 'iMac (2009)'

    - regex: '(?:.+_)?MacBookAir2(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air (2009)'
    - regex: '(?:.+_)?MacBookAir3(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 11" (2010)'
    - regex: '(?:.+_)?MacBookAir3(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Air 13" (2010)'
    - regex: '(?:.+_)?MacBookAir4(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 11" (2011)'
    - regex: '(?:.+_)?MacBookAir4(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Air 13" (2011)'
    - regex: '(?:.+_)?MacBookAir5(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 11" (2012)'
    - regex: '(?:.+_)?MacBookAir5(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Air 13" (2012)'
    - regex: '(?:.+_)?MacBookAir6(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 11" (2013-2014)'
    - regex: '(?:.+_)?MacBookAir6(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Air 13" (2013-2014)'
    - regex: '(?:.+_)?MacBookAir7(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 11" (2015)'
    - regex: '(?:.+_)?MacBookAir7(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Air 13" (2015-2017)'
    - regex: '(?:.+_)?MacBookAir8(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 13" (2018)'
    - regex: '(?:.+_)?MacBookAir8(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Air 13" (2019)'
    - regex: '(?:.+_)?MacBookAir9(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 13" (2020)'
    - regex: '(?:.+_)?MacBookAir10(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Air 13" (2020)'
    - regex: '(?:.+_)?MacBookPro1(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 15" (2006)'
    - regex: '(?:.+_)?MacBookPro1(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 17" (2006)'
    - regex: '(?:.+_)?MacBookPro2(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 17" (2007)'
    - regex: '(?:.+_)?MacBookPro2(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 15" (2007)'
    - regex: '(?:.+_)?MacBookPro[34](?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro (2008)'
    - regex: '(?:.+_)?MacBookPro5(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 15" (2008)'
    - regex: '(?:.+_)?MacBookPro5(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 17" (2009)'
    - regex: '(?:.+_)?MacBookPro5(?:%2C|,)[34]'
      device: 'desktop'
      model: 'MacBook Pro 15" (2009)'
    - regex: '(?:.+_)?MacBookPro5(?:%2C|,)5'
      device: 'desktop'
      model: 'MacBook Pro 13" (2009)'
    - regex: '(?:.+_)?MacBookPro6(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 17" (2010)'
    - regex: '(?:.+_)?MacBookPro6(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 15" (2010)'
    - regex: '(?:.+_)?MacBookPro7(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 13" (2010)'
    - regex: '(?:.+_)?MacBookPro8(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 13" (2011)'
    - regex: '(?:.+_)?MacBookPro8(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 15" (2011)'
    - regex: '(?:.+_)?MacBookPro8(?:%2C|,)3'
      device: 'desktop'
      model: 'MacBook Pro 17" (2011)'
    - regex: '(?:.+_)?MacBookPro9(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 15" (2012)'
    - regex: '(?:.+_)?MacBookPro9(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 13" (2012)'
    - regex: '(?:.+_)?MacBookPro10(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 15" (2012-2013)'
    - regex: '(?:.+_)?MacBookPro10(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 13" (2012-2013)'
    - regex: '(?:.+_)?MacBookPro11(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 13" (2013-2014)'
    - regex: '(?:.+_)?MacBookPro11(?:%2C|,)[23]'
      device: 'desktop'
      model: 'MacBook Pro 15" (2013-2014)'
    - regex: '(?:.+_)?MacBookPro11(?:%2C|,)[45]'
      device: 'desktop'
      model: 'MacBook Pro 15" (2015)'
    - regex: '(?:.+_)?MacBookPro12(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 13" (2015)'
    - regex: '(?:.+_)?MacBookPro13(?:%2C|,)[12]'
      device: 'desktop'
      model: 'MacBook Pro 13" (2016)'
    - regex: '(?:.+_)?MacBookPro13(?:%2C|,)3'
      device: 'desktop'
      model: 'MacBook Pro 15" (2016)'
    - regex: '(?:.+_)?MacBookPro14(?:%2C|,)[12]'
      device: 'desktop'
      model: 'MacBook Pro 13" (2017)'
    - regex: '(?:.+_)?MacBookPro14(?:%2C|,)3'
      device: 'desktop'
      model: 'MacBook Pro 15" (2017)'
    - regex: '(?:.+_)?MacBookPro15(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 15" (2018-2019)'
    - regex: '(?:.+_)?MacBookPro15(?:%2C|,)2'
      device: 'desktop'
      model: 'MacBook Pro 13" (2018-2019)'
    - regex: '(?:.+_)?MacBookPro15(?:%2C|,)3'
      device: 'desktop'
      model: 'MacBook Pro 15" (2019)'
    - regex: '(?:.+_)?MacBookPro15(?:%2C|,)4'
      device: 'desktop'
      model: 'MacBook Pro 13" (2019)'
    - regex: '(?:.+_)?MacBookPro16(?:%2C|,)[14]'
      device: 'desktop'
      model: 'MacBook Pro 16" (2019)'
    - regex: '(?:.+_)?MacBookPro16(?:%2C|,)[23]'
      device: 'desktop'
      model: 'MacBook Pro 13" (2020)'
    - regex: '(?:.+_)?MacBookPro17(?:%2C|,)1'
      device: 'desktop'
      model: 'MacBook Pro 13" (2020)'
    - regex: '(?:.+_)?Macmini8(?:%2C|,)1'
      device: 'desktop'
      model: 'Mac Mini (2018)'
    - regex: '(?:.+_)?Macmini9(?:%2C|,)1'
      device: 'desktop'
      model: 'Mac Mini (2020)'
    - regex: '(?:.+_)?Macmini7(?:%2C|,)1'
      device: 'desktop'
      model: 'Mac Mini (2014)'

    # specific smartphone devices
    - regex: '(?:Apple-|.+_)?iPh(?:one)?1[C,_]1'
      model: 'iPhone'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?1[C,_]2'
      model: 'iPhone 3G'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?2[C,_]1| 3GS\)$'
      model: 'iPhone 3GS'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?3[C,_][123]'
      model: 'iPhone 4'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$'
      model: 'iPhone 4S'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?5[C,_][12]| 5\)$'
      model: 'iPhone 5'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?5[C,_][34]'
      model: 'iPhone 5C'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?6[C,_][12]| 5S\)$'
      model: 'iPhone 5S'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?7[C,_]1|1C2%257enohPi| 6PLUS\)$'
      model: 'iPhone 6 Plus'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?7[C,_]2| 6\)$'
      model: 'iPhone 6'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?8[C,_]2| 6SPLUS\)$'
      model: 'iPhone 6s Plus'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?8[C,_]1|iPhone 6s| 6S\)$'
      model: 'iPhone 6s'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?8[C,_]4| SE\)$'
      model: 'iPhone SE'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?9[C,_][13]| 7\)$'
      model: 'iPhone 7'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?9[C,_][24]| 7PLUS\)$'
      model: 'iPhone 7 Plus'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?10[C,_][14]| 8\)$'
      model: 'iPhone 8'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?10[C,_][25]| 8PLUS\)$'
      model: 'iPhone 8 Plus'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?10[C,_][36]|iPhone X| X\)$'
      model: 'iPhone X'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?11[C,_][2]| XS\)$'
      model: 'iPhone XS'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?11[C,_][46]| XSMAX\)$'
      model: 'iPhone XS Max'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?11[C,_][8]| XR\)$'
      model: 'iPhone XR'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?12[C,_][1]| 11\)$'
      model: 'iPhone 11'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?12[C,_][3]| 11PRO\)$'
      model: 'iPhone 11 Pro'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?12[C,_][5]| 11PROMAX\)$'
      model: 'iPhone 11 Pro Max'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?12[C,_][8]'
      model: 'iPhone SE (2020)'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?13[C,_][1]'
      model: 'iPhone 12 Mini'
      device: 'smartphone'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?13[C,_][2]'
      model: 'iPhone 12'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?13[C,_][3]'
      model: 'iPhone 12 Pro'
      device: 'phablet'
    - regex: '(?:Apple-|.+_)?iPh(?:one)?13[C,_][4]'
      model: 'iPhone 12 Pro Max'
      device: 'phablet'

    # specific tablet devices
    - regex: '(?:Apple-|.+_)?iPad1[C,_]1'
      model: 'iPad'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad2[C,_][1234]'
      model: 'iPad 2'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad2[C,_][567]'
      model: 'iPad Mini'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad3[C,_][123]'
      model: 'iPad 3'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad3[C,_][456]'
      model: 'iPad 4'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad4[C,_][123]'
      model: 'iPad Air'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad4[C,_][456]'
      model: 'iPad Mini 2'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad4[C,_][789]'
      model: 'iPad Mini 3'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad5[C,_][12]'
      model: 'iPad Mini 4'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad5[C,_][34]'
      model: 'iPad Air 2'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad6[C,_][34]'
      model: 'iPad Pro 9.7'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad6[C,_][78]'
      model: 'iPad Pro 12.9'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad6[C,_](?:11|12)'
      model: 'iPad 5 9.7'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad7[C,_][12]'
      model: 'iPad Pro 2 12.9'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad7[C,_][34]'
      model: 'iPad Pro 10.5'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad7[C,_][56]'
      model: 'iPad 6 9.7'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad7[C,_](?:11|12)'
      model: 'iPad 7 10.2'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad8[C,_](?:9|10)'
      model: 'iPad Pro 2 11"'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad8[C,_]1[12]'
      model: 'iPad Pro 4 12.9"'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad8[C,_][1-4]'
      model: 'iPad Pro 3 11.0'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad8[C,_][5-8]'
      model: 'iPad Pro 3 12.9'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad11[C,_][12]'
      model: 'iPad Mini 5'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad11[C,_][34]'
      model: 'iPad Air 3'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad11[C,_][67]'
      model: 'iPad 8 10.2"'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad13[C,_][12]'
      model: 'iPad Air 4'
      device: 'tablet'

    - regex: 'Apple-?TV2[C,_]1'
      model: 'Apple TV 2'
      device: 'tv'
    - regex: 'Apple-?TV3[C,_][12]'
      model: 'Apple TV 3'
      device: 'tv'
    - regex: 'Apple-?TV5[C,_]3'
      model: 'Apple TV 4'
      device: 'tv'
    - regex: 'Apple-?TV6[C,_]2'
      model: 'Apple TV 4K'
      device: 'tv'

    - regex: '(?:iTunes-)?Apple[ _]?TV'
      model: 'Apple TV'
      device: 'tv'
    - regex: 'HomePod'
      model: 'HomePod'
      device: 'smart speaker'
    - regex: 'iTunes-iPad/[0-9]+(?:\.[0-9]+)* \(([^;]+);'
      model: 'iPad $1'
      device: 'tablet'
    - regex: '(?:Apple-|.+_)?iPad'
      model: 'iPad'
      device: 'tablet'
    - regex: 'iTunes-iPhone/[0-9]+(?:\.[0-9]+)* \(([^;]+);'
      model: 'iPhone $1'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?'
      model: 'iPhone $1'
      device: 'smartphone'

# micromax
MicroMax:
  regex: '(?:MicroMax[ \-\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5040|5530)|AQ5001(?: Canvas Power)?|N8216|N8301)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'AQ5001 Canvas Power'
      model: 'Canvas Power'
    - regex: 'AQ5001'
      model: 'Canvas Juice 2'
    - regex: '4560MMX(?:[);/ ]|$)'
      model: '4560MMX'
    - regex: 'E481'
      model: 'Canvas 5'
    - regex: 'P70221(?:[);/ ]|$)'
      model: 'Canvas Tab'
      device: 'tablet'
    - regex: 'Q327'
      model: 'Bolt'
    - regex: 'Q417'
      model: 'Canvas Mega'
    - regex: 'Q402\+'
      model: 'Bolt Pace'
    - regex: 'YU5040(?:[);/ ]|$)'
      model: 'YU Yureka YU5040'
    - regex: 'YU5530(?:[);/ ]|$)'
      model: 'YU Yureka S YU5530'
    - regex: 'Q424'
      model: 'Bolt Selfie'
    - regex: 'Q426'
      model: 'Canvas Mega 2'
    - regex: 'N8216'
      model: 'Infinity N11'
    - regex: 'N8301'
      model: 'Infinity N12'

    - regex: 'MicroMax(?:[ \-\_])?(X291|X246|X252|X458|X312)'
      model: '$1'
      device: 'feature phone'

    - regex: 'MicroMax(?:[ \-\_])?(P[a-z0-9]+)'
      model: '$1'
      device: 'tablet'
    - regex: 'MicroMax(?:[ \-\_])?([a-z0-9]+)'
      model: '$1'

# 3Q
3Q:
  regex: 'AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC0709B|RC0710B|RC0718C|RC0719H|RC0721B|RC0722C|RC0726B|RC0734H|RC0743H|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B'
  device: 'tablet'
  models:
    - regex: 'MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B'
      model: 'Qoo! P-Pad'
    - regex: 'VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B'
      model: 'Qoo! Q-Pad'
    - regex: 'MT7801C|QS9718C|QS9719D|VM0711A|OC1020A'
      model: 'Qoo! Surf'
    - regex: 'TS9708B'
      model: 'Surf TS1009B'
    - regex: 'AC7803C|AC0732C'
      model: 'Qoo! Lite'
    - regex: 'MT0812E|RC7802F'
      model: 'Qoo! Meta'
    - regex: 'EL72B|(?:3Q_)?ER71B'
      model: 'Qoo! Q-Book'
    - regex: '(RC7804F)'
      model: 'Qoo! Glaze'

# 4Good
4Good:
  regex: '4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A103|B100)'
  device: 'smartphone'
  models:
    - regex: 'T700i_3G'
      model: 'T700i 3G'
      device: 'tablet'
    - regex: 'People GT300'
      model: 'People GT300'
      device: 'tablet'
    - regex: 'S555m[_ ]4G'
      model: 'People'
    - regex: '(S(?:450m|501m)[_ ][43]G|Light (?:A103|B100)|People (?:G503|G410))'
      model: '$1'
    - regex: '4Good[ _]([^;/]+) Build'
      model: '$1'
    - regex: '4Good[ _]([^);/ ]+)'
      model: '$1'

# Acteck
Acteck:
  regex: 'BLECK'
  device: 'tablet'
  model: 'Bleck'

# Alba
Alba:
  regex: 'Alba ?(?:57|4|10 TABLET|(?:7|10)(?:Nou|Pie))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Alba 57'
      model: '5.7'
    - regex: 'Alba (4)'
      model: '$1'
    - regex: '10 TABLET'
      device: 'tablet'
      model: '10 Tablet'
    - regex: 'Alba((?:7|10)(?:Nou|Pie))'
      device: 'tablet'
      model: '$1'

# AllCall
AllCall:
  regex: 'AllCall_|Heat[34]|Rio_X(?:[);/ ]|$)|Hot ?[125][^;/]+ Build'
  device: 'smartphone'
  models:
    - regex: 'AllCall_(Alpha|Atom|Bro|Madrid)'
      model: '$1'
    - regex: 'AllCall_S1_X'
      model: 'S1 X'
    - regex: 'AllCall_S1'
      model: 'S1'
    - regex: 'AllCall_RIO_S'
      model: 'Rio S'
    - regex: 'AllCall_RIO_PRO'
      model: 'Rio Pro'
    - regex: 'AllCall_RIO'
      model: 'Rio'
    - regex: 'Heat([34])'
      model: 'Heat $1'
    - regex: 'Rio_X(?:[);/ ]|$)'
      model: 'Rio X'
    - regex: 'Hot ?([125][^;/]+) Build'
      model: 'Hot $1'

# Bravis
Bravis:
  regex: 'Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser'
  device: 'smartphone'
  models:
    - regex: 'A501 BRIGHT'
      model: 'A501 Bright'
    - regex: 'Bravis[_ ]X500'
      model: 'Trace Pro'
    - regex: 'Bravis[_ ]A506'
      model: 'Crystal'
    - regex: 'Bravis[_ ]A553'
      model: 'Discovery'
    - regex: 'BRAVIS[ _]TAU'
      model: 'Tau'
    - regex: 'BRAVIS[ _]DELTA'
      model: 'Delta'
    - regex: 'BRAVIS[ _]TREND'
      model: 'Trend'
    - regex: 'B501'
      model: 'Easy'
    - regex: 'N1-570'
      model: 'Space'
    - regex: 'BRAVIS[ ]A554'
      model: 'A554 Grand'
    - regex: 'BRAVIS[ ]S500'
      model: 'S500 Diamond'
    - regex: 'A505 JOY Plus'
      model: 'A505 Joy Plus'
    - regex: 'A552 JOY Max'
      model: 'A552 Joy Max'
    - regex: 'Atlas A551'
      model: 'A551 Atlas'
    - regex: 'A503 Joy'
      model: 'A503 Joy'
    - regex: 'A504 Trace'
      model: 'A504 Trace'
    - regex: 'A512 Harmony Pro'
      model: 'A512 Harmony Pro'
    - regex: 'A510_Jeans_4G'
      model: 'A510 Jeans 4G'
    - regex: 'A509_Jeans'
      model: 'A509 Jeans'
    - regex: 'BRAVIS NEO'
      model: 'A401 Neo'
    - regex: 'N1_550_Cruiser'
      model: 'N1-550 Cruiser'
    - regex: 'BRAVIS OMEGA'
      model: 'Omega'
    - regex: 'BRAVIS BIZ'
      model: 'Biz'
    - regex: 'BRAVIS POWER'
      model: 'Power'
    - regex: 'BRAVIS[ _]SPARK'
      model: 'Spark'

    - regex: 'BRAVIS[ _]SLIM[ _]3G'
      model: 'Slim 3G'
      device: 'tablet'
    - regex: 'NP 104 3G'
      model: 'NP104 3G'
      device: 'tablet'
    - regex: 'BRAVIS NP 103'
      model: 'NP103'
      device: 'tablet'
    - regex: 'BRAVIS NP 844'
      model: 'NP844'
      device: 'tablet'

    - regex: 'Bravis[_ ]([^;\)]+) Build'
      model: '$1'
    - regex: '(NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961)'
      model: '$1'
      device: 'tablet'


# Acer
Acer:
  regex: 'acer|(?<!Satellite |ZTE BLADE |ImSmart |ERGO |X-Style Tab )a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|Android.*T0[234678] Build|Android.*S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840FHD|81[01])|A3-A[1234][01]|B1-(7[1235-8][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G)|Chromebook 14 \(CB3-431\)|Predator G9-793|GT-810|B1-870|B3-A4[02]|B3-A50FHD)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # smart displays
    - regex: 'DA220HQL(?:[);/ ]|$)'
      model: 'DA220HQL'
      device: 'smart display'
    - regex: 'DA241HL(?:[);/ ]|$)'
      model: 'DA241HL'
      device: 'smart display'
    - regex: '(DA[0-9]+HQ?L)(?:[);/ ]|$)'
      model: '$1'
      device: 'smart display'

    # explicit tablet models
    - regex: 'A1-81[01]'
      model: 'Iconia A'
      device: 'tablet'
    - regex: 'TPA60W'
      model: 'TPA60W'
      device: 'tablet'
    - regex: 'A1-84(1|0FHD)'
      model: 'Iconia Tab 8'
      device: 'tablet'
    - regex: 'A1-713(HD)?'
      model: 'Iconia Tab 7'
      device: 'tablet'
    - regex: 'A1-830'
      model: 'Iconia A1'
      device: 'tablet'
    - regex: 'A1-7[23]4'
      model: 'Iconia Talk S'
      device: 'tablet'
    - regex: 'A3-A[12][01]'
      model: 'Iconia A3'
      device: 'tablet'
    - regex: 'A3-A[34]0'
      model: 'Iconia Tab 10'
      device: 'tablet'
    - regex: 'B1-7(?:[5678]0|30HD|A0)'
      model: 'Iconia One 7'
      device: 'tablet'
    - regex: 'B1-7[123][01]|B1-A71'
      model: 'Iconia B1'
      device: 'tablet'
    - regex: 'B1-7[23]3'
      model: 'Iconia Talk 7'
      device: 'tablet'
    - regex: 'B1-8[123567]0'
      model: 'Iconia One 8'
      device: 'tablet'
    - regex: 'B3-A([125]0|3[02]|[45]0FHD|4[02])'
      model: 'Iconia One 10'
      device: 'tablet'
    - regex: 'A101'
      model: 'Vangogh'
      device: 'tablet'
    - regex: 'A200'
      model: 'Picasso E'
      device: 'tablet'
    - regex: 'A50[01]'
      model: 'Picasso'
      device: 'tablet'
    - regex: 'Acer One 7'
      model: 'One 7'
      device: 'tablet'
    - regex: 'GT-810'
      model: 'Predator 8'
      device: 'tablet'

    # explicit smartphone models
    - regex: 'E39(?:[);/ ]|$)'
      model: 'Liquid E700'
    - regex: 'E310(?:[);/ ]|$)'
      model: 'Liquid Mini'
    - regex: 'E320(?:-orange)?(?:[);/ ]|$)'
      model: 'Liquid Express'
    - regex: 'E310(?:[);/ ]|$)'
      model: 'beTouch E210'
    - regex: 'Android.*V360(?:[);/ ]|$)'
      model: 'Liquid E1 Duo'
    - regex: 'Android.*V370(?:[);/ ]|$)'
      model: 'Liquid E2 Duo'
    - regex: 'S510(?:[);/ ]|$)'
      model: 'Liquid S1'
    - regex: 'S520(?:[);/ ]|$)'
      model: 'Liquid S2'
    - regex: '(?:Acer_)?P400(?:[);/ ]|$)'
      model: 'neoTouch P400'
    - regex: '(?:Acer_)?P300(?:[);/ ]|$)'
      model: 'neoTouch P300'
    - regex: '(?:Acer_)?S200(?:[);/ ]|$)'
      model: 'neoTouch S200'
    - regex: '(?:Acer_)?E100(?:[);/ ]|$)'
      model: 'beTouch E100'
    - regex: 'Android.*Z1([234])0(?:[);/ ]|$)'
      model: 'Liquid Z$1'
    - regex: 'Android.*Z110(?:[);/ ]|$)'
      model: 'Liquid Z110'
    - regex: 'Android.*Z150(?:[);/ ]|$)'
      model: 'Liquid Z5 Duo'
    - regex: 'Android.*Z160(?:[);/ ]|$)'
      model: 'Liquid Z4 Duo'
    - regex: 'Android.*Z(5\d{2})(?:[);/ ]|$)'
      model: 'Liquid Z$1'
    - regex: 'Android.*S57(?:[);/ ]|$)'
      model: 'Liquid Jade Z'
    - regex: 'Android.*T02(?:[);/ ]|$)'
      model: 'Liquid Z530'
    - regex: 'Android.*T03(?:[);/ ]|$)'
      model: 'Liquid Z630'
    - regex: 'Android.*T04(?:[);/ ]|$)'
      model: 'Liquid Z630S'
    - regex: 'Android.*T06(?:[);/ ]|$)'
      model: 'Liquid Zest'
    - regex: 'Android.*T07(?:[);/ ]|$)'
      model: 'Liquid Zest 4G'
    - regex: 'Android.*T08(?:[);/ ]|$)'
      model: 'Liquid Zest Plus'
    - regex: 'TM01(?:[);/ ]|$)'
      model: 'Liquid M330'
    - regex: 'M220(?:[);/ ]|$)'
      model: 'Liquid M220'
    - regex: 'AcerTD600'
      model: 'TD600'
    - regex: 'Android.*S55(?:[);/ ]|$)'
      model: 'Liquid Jade'

    # desktop models
    - regex: '(?:Acer )?(Chromebook R1[13])'
      model: '$1'
      device: 'desktop'
    - regex: '(?:Acer )?(Chromebook 14)'
      model: '$1'
      device: 'desktop'
    - regex: '(Aspire (?:V5-121|XC-704G|V5-573G|A515-51G))'
      model: '$1'
      device: 'desktop'
    - regex: '(Predator G9-793|Aspire E5-511)'
      model: '$1'
      device: 'desktop'

    - regex: 'Acer; ?([^;\(\)/]+)'
      model: '$1'
    - regex: 'Acer(?! ?inc)[ _\-]?([^;\(\)/]+)[();/ ]'
      model: '$1'
    - regex: 'acer[\-_]([a-z0-9]+)'
      model: '$1'
    - regex: 'a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)'
      model: 'Iconia Tab A$1'
      device: 'tablet'

# Advan
Advan:
  regex: '(?:ADVAN (?:M4|S40)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\+|S4\+)(?:[);/ ]|$)|[ ](?:50(?:[46]1|59)|600[24])(?: Build|\) AppleWebKit)|(?:E1C_3G)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'ADVAN M4'
      model: 'M4'
    - regex: 'ADVAN S40'
      model: 'S40'
    - regex: 'i7U'
      model: 'I Lite i7U'
    - regex: 'S5E[ _]NXT'
      model: 'S5E NXT'
    - regex: 'i(55[KD]|5[KE])'
      model: 'I$1'
    - regex: 'i4U'
      model: 'I4U'
    - regex: ' 6004(?: Build|\) AppleWebKit)'
      model: 'G2 Pro'
    - regex: ' 6002(?: Build|\) AppleWebKit)'
      model: 'G3 Pro'
    - regex: '(S45E|50[46]1|5059|S50H|I7D|S7D|S4Z|S5J\+|S4\+)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'E1C_3G'
      device: 'tablet'
      model: 'E1C 3G'

# Advance (advanceperu.com)
Advance:
  regex: 'Hollogram|(?:HL(?:4936|6246|[56]575|5[67]67)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50)|Tr3845)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # explicit table models
    - regex: 'IntroTr3544|Tr3845'
      model: 'Intro'
      device: 'tablet'
    - regex: 'Pr(61(?:4[56]|50)|60[27]0|5[69]50)'
      model: 'Prime PR$1'
      device: 'tablet'
    # explicit smartphone models
    - regex: 'HL(4936|6246|[56]575|5[67]67)'
      model: 'Hollogram HL$1'
    - regex: 'Hollogram ([^;/)]+)(?: Build|[;)])'
      model: 'Hollogram $1'

# AGM
AGM:
  regex: 'AGM ([^/;)]+)(?: Build|[;)])'
  device: 'smartphone'
  model: '$1'

# Airness
Airness:
  regex: 'AIRNESS-([\w]+)'
  device: 'feature phone'
  model: '$1'

# Aiwa
Aiwa:
  regex: '(?:AW790|M300|AWM(?:533|50[19]|561)|AW500)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'AW790(?:[);/ ]|$)'
      model: 'AW790'
    - regex: 'AW500(?:[);/ ]|$)'
      model: 'AW500'
    - regex: 'AWM(533|50[19]|561)(?:[);/ ]|$)'
      model: 'AWM$1'
    - regex: 'M300(?:[);/ ]|$)'
      model: 'M300'
      device: 'phablet'

# Akai
Akai:
  regex: 'AKAI,|Akai[ _-]|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|TAB-[79]8[03]0Q?|X6 METAL|AKTB-703MZ'
  device: 'smartphone'
  models:
    - regex: 'TAB-([79]8[03]0Q?)'
      device: 'tablet'
      model: 'TAB $1'
    - regex: 'AKTB-703MZ'
      device: 'tablet'
      model: 'AKTB-703MZ'

    - regex: 'X6 METAL'
      model: 'iLike'
    - regex: 'Glory[ _](G[1235]|L[123]|O[125])'
      model: 'Glory $1'
    - regex: 'Eco[ _]E2'
      model: 'Eco E2'
    - regex: 'Akai[ _-]([^;/)]+)(?: Build|[;)])'
      model: '$1'

    - regex: 'AKAI,(AK3219NF)'
      device: 'tv'
      model: '$1'
    - regex: 'Si2157LG32'
      device: 'tv'
      model: 'Si2157LG32'

# Arian
Arian Space:
  regex: 'Arian Space'
  device: 'tablet'
  models:
    - regex: '100 ST1004PG'
      model: '100'
    - regex: '80 SS8003PG'
      model: '80'
    - regex: '71 ST7002PG'
      model: '71'
    - regex: '70 ST7001RW'
      model: '70'

# Alcatel (alcatelmobile.com)
Alcatel:
  regex: 'Alcatel|Alc(?!or )[a-z0-9]+|One[ _]?Touch|idol3|TIMXL|(?:(?:4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[EDX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGXTL]|4035[ADXY]|4045[ADEX]|4047[ADFGNX]|4049[DEGMX]|4060[SW]|A466BG|A621BL|4114E|4087U|5001[ADJTU]|5002[ADFH]|5003[ADGU]|5006D|5007[AU]|5008[ADUYT]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AXJ]|5017[ABDEOX]|5019D|5022[EDX]|5023[EF]|5024[ADJF]|5025[DEG]|5026[ADJ]|5027B|5028[AYD]|5029[EYD]|5030[DE]|5032W|5033[AEFXDJGMOTXYQS]|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGWXT]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AYUI]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIY]|5059[ADJXYZIST]|5060[ADJ]|5061[KU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADYUI]|5116J|5145A|6016[ADEX]|6036[AXY]|6037[BKY]|6039[AHJKY]|6042D|6043[AD]|6044D|6045[BFIKOYX]|6050[AFY]|6055[ABDHIKPUYZ]|6058[ADX]|6060[SX]|6062W|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[XQM]|9001[DIX]|9002X|9003[AX]|9024O|9005X|9026X|9007[ATX]|9008[ADIJNTUX]|9009G|9010X|9020A|9022X|9027[FTWX]|9029Z|9203A|A(?:464BG|570BL|50[13]DL|57[17]VL|574BL)|I213|I216X|(?<!\.)80(?:82|6[78])|A576CC)(?:_(?:EEA|RU))?|P360X)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '4087U'
      model: '1SE Light'
    - regex: '5022[EDX]|5070D'
      model: 'One Touch Pop Star'
    - regex: '6044D'
      model: 'One Touch Pop Up'
    - regex: '4015[ATX]|4016A'
      model: 'One Touch Pop C1'
    - regex: '4015[DN]|4016[DX]'
      model: 'One Touch Pop C1 Dual SIM'
    - regex: '4032[AX]'
      model: 'One Touch Pop C2'
    - regex: '4032[DE]'
      model: 'One Touch Pop C2 Dual SIM'
    - regex: '5036D'
      model: 'One Touch Pop C5 Dual SIM'
    - regex: '7040[AFK]|7041X|7042A'
      model: 'One Touch Pop C7'
    - regex: '7040[DE]|7041D'
      model: 'One Touch Pop C7 Dual SIM'
    - regex: '4018[ADEFMX]'
      model: 'One Touch Pop D1'
    - regex: '4035[ADXY]'
      model: 'One Touch Pop D3'
    - regex: '5038[ADEX]'
      model: 'One Touch Pop D5'
    - regex: '4045[AX]'
      model: 'One Touch Pop 2 4"'
    - regex: '4045[DE]'
      model: 'One Touch Pop 2 4" Dual SIM'
    - regex: '5042[AFGWX]'
      model: 'One Touch Pop 2 4.5"'
    - regex: '5042[DE]'
      model: 'One Touch Pop 2 4.5" Dual SIM'
    - regex: '7043[AY]|7044[AX]'
      model: 'One Touch Pop 2 5"'
    - regex: '7043[EK]'
      model: 'One Touch Pop 2 5" Dual SIM'
    - regex: '50[16]5X'
      model: 'One Touch Pop 3'
    - regex: '5015[AE]|5016[AJ]|5065[ADWX]|5116J'
      model: 'One Touch Pop 3 5"'
    - regex: '5025[DEG]|5054[ADSTX]'
      model: 'One Touch Pop 3 5.5"'
    - regex: '5015D'
      model: 'One Touch Pop 3 Dual SIM'
    - regex: '5051[AEJMTWX]'
      model: 'One Touch Pop 4'
    - regex: '5051D'
      model: 'One Touch Pop 4 Dual SIM'
    - regex: '5095[IKY]'
      model: 'One Touch Pop 4S'
    - regex: '5056[ADEGJMTUX]'
      model: 'One Touch Pop 4+'
    - regex: '7070X'
      model: 'One Touch Pop 4 6"'
    - regex: '5057M'
      model: 'One Touch Pop Mirage'
    - regex: '5050[ASXY]'
      model: 'One Touch Pop S3'
    - regex: '7045Y'
      model: 'One Touch Pop S7'
    - regex: '6037[BKY]'
      model: 'One Touch Idol 2'
    - regex: '5042T'
      model: 'One Touch Astro'
    - regex: '5027B'
      model: 'One Touch Dawn'
    - regex: '5024[ADF]|5028Y'
      model: '1S'
    - regex: '7071[ADX]'
      model: 'A7 XL'
    - regex: '5002[ADH]'
      model: '1B (2020)'
    - regex: '4034T'
      model: '1E'
    - regex: '5002F'
      model: '1A (2020)'
    - regex: '5034D'
      model: '3L'
    - regex: 'A576CC'
      model: 'Kora A576CC'
    - regex: '7040[RT]'
      model: 'One Touch Fierce 2'
    - regex: '5056[NW]'
      model: 'One Touch Fierce 4'
    - regex: '5054N'
      model: 'One Touch Fierce XL'
    - regex: '6042D'
      model: 'One Touch Flash'
    - regex: '6016[AX]'
      model: 'One Touch Idol 2 mini'
    - regex: '6016[DE]'
      model: 'One Touch Idol 2 mini Dual SIM'
    - regex: '6036[AXY]'
      model: 'One Touch Idol 2 mini S'
    - regex: '6050[AFY]'
      model: 'One Touch Idol 2S'
    - regex: '6039[AHJKY]|idol3'
      model: 'One Touch Idol 3'
    - regex: '6045[BFIKOYX]'
      model: 'One Touch Idol 3 5.5"'
    - regex: '6055[ABDHIKPUYZ]'
      model: 'One Touch Idol 4'
    - regex: '6070K'
      model: 'One Touch Idol 4S'
    - regex: '6058[ADX]'
      model: 'One Touch Idol 5'
    - regex: '6060[SX]'
      model: 'One Touch Idol 5S'
    - regex: '6043[AD]'
      model: 'One Touch Idol X+'
    - regex: '8030Y'
      model: 'One Touch Hero 2'
    - regex: '7055A'
      model: 'One Touch Hero 2C'
    - regex: '7053D'
      model: 'One Touch X1'
    - regex: '5065N'
      model: 'TRU'
    - regex: 'A574BL'
      model: 'Raven'
    - regex: 'A577VL'
      model: 'Zip'
    - regex: 'A466BG'
      model: 'Pixi Unite'
    - regex: '5056I'
      model: 'One Touch Optus X Smart'
    - regex: 'A570BL'
      model: 'One Touch Pixi Avion LTE'
    - regex: 'A571VL'
      model: 'One Touch Pixi Avion 4G LTE'
    - regex: '4024[DEX]'
      model: 'One Touch Pixi First'
    - regex: 'A464BG'
      model: 'One Touch Pixi Glitz'
    - regex: 'A621BL'
      model: 'One Touch Pixi Glory'
    - regex: '4014D'
      model: 'One Touch Pixi 2'
    - regex: '4009[AFIKMSX]'
      model: 'One Touch Pixi 3 3.5"'
    - regex: '4009[DE]'
      model: 'One Touch Pixi 3 3.5" Dual SIM'
    - regex: '4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E'
      model: 'One Touch Pixi 3 4"'
    - regex: '4027[ADNX]|4028[AEJS]|5019D'
      model: 'One Touch Pixi 3 4.5"'
    - regex: '5017[ABDEOX]'
      model: 'One Touch Pixi 3 4.5" 4G'
    - regex: '9002X'
      model: 'One Touch Pixi 3 7"'
      device: 'phablet'
    - regex: '9007A'
      model: 'One Touch Pixi 3 7"'
      device: 'tablet'
    - regex: '9007[TX]'
      model: 'One Touch Pixi 3 7" 4G'
      device: 'tablet'
    - regex: '9009G'
      model: '1T'
      device: 'tablet'
    - regex: '(?!<\.)8082(?:_(?:EEA|RU))?(?:[);/ ]|$)'
      model: '1T 10'
      device: 'tablet'
    - regex: '(?!<\.)806[78](?:_(?:EEA|RU))?(?:[);/ ]|$)'
      model: '1T 7'
      device: 'tablet'
    - regex: '9022X'
      model: 'One Touch Pixi 3 8"'
      device: 'phablet'
    - regex: '9010X'
      model: 'One Touch Pixi 3 10"'
      device: 'tablet'
    - regex: '4017[ADEFSX]'
      model: 'One Touch Pixi 4 3.5"'
    - regex: '4034[ADEFGXL]'
      model: 'One Touch Pixi 4 4"'
    - regex: '4060[SW]'
      model: 'One Touch Pixi 4 4.5"'
    - regex: '5023[EF]'
      model: 'One Touch Pixi 4 Plus Power'
    - regex: '5010[DEGSUX]'
      model: 'One Touch Pixi 4 5" 3G'
    - regex: '5041D'
      model: 'One Touch Pixi 4 5.0"'
    - regex: '5012[DFG]'
      model: 'One Touch Pixi 4 5.5" 3G'
    - regex: '5045[ADFGIJTXY]|5145A'
      model: 'One Touch Pixi 4 5" 4G'
    - regex: '5098O'
      model: 'One Touch Pixi Theatre'
    - regex: 'A501DL'
      model: 'A1'
    - regex: 'A503DL'
      model: 'A1X'
    - regex: '5046[ADIJTUY]'
      model: 'A3'
    - regex: '5011A|5049[EG]'
      model: 'A3 Plus'
    - regex: '9008[ADIJNTUX]'
      model: 'A3 XL'
    - regex: '9203A'
      model: 'A3 7" 3G'
      device: 'tablet'
    - regex: '9027[FTWX]'
      model: '3T 8.0"'
      device: 'tablet'
    - regex: '9026X'
      model: 'A3 10"'
      device: 'tablet'
    - regex: '5085[BQ]'
      model: 'A5'
    - regex: '5085[ADHIJY]'
      model: 'A5 LED'
    - regex: '5085N'
      model: 'A5 Max LED'
    - regex: '5090[AIY]'
      model: 'A7'
    - regex: '5046[GS]'
      model: 'A30'
    - regex: '5049S'
      model: 'A30 Plus'
    - regex: '5049Z'
      model: 'A30 Fierce'
    - regex: '5085[GO]'
      model: 'A50'
    - regex: '5048[AYUI]'
      model: '3X (2019)'
    - regex: '5049W'
      model: 'Revvl'
    - regex: '8050[GX]'
      model: 'One Touch Pixi 4 6" 3G'
    - regex: '8050[ED]'
      model: 'One Touch Pixi 4 6" 3G Dual SIM'
    - regex: '5098S|9001[DIX]'
      model: 'One Touch Pixi 4 6" 4G'
    - regex: '9003[AX]'
      model: 'One Touch Pixi 4 7" 3G'
      device: 'tablet'
    - regex: '8063'
      model: 'One Touch Pixi 4 7" WiFi'
      device: 'tablet'
    - regex: '9024O'
      model: 'One Touch Pixi 5'
      device: 'tablet'
    - regex: 'I216X'
      model: 'One Touch Pixi 7'
      device: 'tablet'
    - regex: 'I213'
      model: 'One Touch Pixi 7'
      device: 'tablet'
    - regex: '9005X'
      model: 'One Touch Pixi 8'
      device: 'tablet'
    - regex: 'P320X'
      model: 'One Touch POP 8'
      device: 'tablet'
    - regex: 'P310X'
      model: 'One Touch POP 7'
      device: 'tablet'
    - regex: '9020A'
      model: 'One Touch Trek HD'
      device: 'tablet'
    - regex: '7048[ASWX]'
      model: 'One Touch Go Play'
    - regex: '(?:Alcatel-)?OT-802'
      model: 'Wave'
    - regex: 'ALCATEL_ONE_TOUCH_768T'
      model: 'Island'
    - regex: '(?:TRIBE_)?3075A'
      model: 'One Touch Tribe'
    - regex: 'ALCATEL_one_touch_585'
      model: 'One Touch 585'
    - regex: 'ALCATEL_ONE_TOUCH_838'
      model: 'One Touch 838'
    - regex: 'ALCATEL_one_touch_813d'
      model: 'One Touch 813D'
    - regex: 'ALCATEL_one_touch_813'
      model: 'One Touch 813'
    - regex: 'OT871A'
      model: 'One Touch 871A'
    - regex: 'P360X'
      model: 'One Touch Pop 10'
    - regex: '(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build'
      device: 'tablet'
      model: 'One Touch $1'
    - regex: '(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build'
      model: 'One Touch$1'
    - regex: '(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)'
      model: 'One Touch$1'
    - regex: '5080[ADFQUX]'
      model: 'Shine Lite'
    - regex: 'TIMXL'
      model: 'TIM XL'
    - regex: '5085C'
      model: 'PulseMix'
    - regex: '4049[DEGMX]'
      model: 'U3'
    - regex: '5044[ADIKOPTY]'
      model: 'U5'
    - regex: '4047[DFXN]'
      model: 'U5 3G'
    - regex: '5047[DIUY]'
      model: 'U5 HD'
    - regex: '4047G'
      model: 'U5 Lite'
    - regex: '4047A'
      model: 'U5 Plus'
    - regex: '4044[CV]'
      model: 'Quick Flip'
    - regex: '4044O'
      model: 'Cingular Flip 2'
    - regex: '(?:Alcatel)?4044[MNT]'
      model: 'Go Flip'
    - regex: '5044[GS]'
      model: 'U50'
    - regex: '5033[ADXJEFGMOTXYQS]'
      model: '1'
    - regex: '5009[AD]'
      model: '1C'
    - regex: '5008[ADUYT]'
      model: '1X (2019)'
    - regex: '5007[AU]'
      model: '1V (2020)'
    - regex: '5003[ADGU]'
      model: '1C (2019)'
    - regex: '5006D'
      model: '3C (2019)'
    - regex: '5024J'
      model: '1S'
    - regex: '5028[AD]'
      model: '1S (2020)'
    - regex: '5030[DE]'
      model: '1SE (2020)'
    - regex: '5001[ADJTU]'
      model: '1V'
    - regex: '5059[ADJXYZIT]'
      model: '1X'
    - regex: '5059S'
      model: 'Avalon V'
    - regex: '5060[ADJ]'
      model: '5V'
      device: 'phablet'
    - regex: '5052[ADY]|5053[ADKY]'
      model: '3'
    - regex: '5029E'
      model: '3 (2020)'
    - regex: '5029[DY]'
      model: '3L (2020)'
    - regex: '5032W|5099[ADYUI]'
      model: '3V'
    - regex: '5026[ADJ]'
      model: '3C'
    - regex: '5039[DY]'
      model: '3L'
      device: 'phablet'
    - regex: '5058[AIY]'
      model: '3X'
    - regex: '5061[KU]'
      model: '3X (2020)'
    - regex: '5086[ADY]'
      model: '5'
    - regex: '6062W'
      model: '7'
    - regex: '8088[XQM]'
      model: '3T 10'
      device: 'tablet'
    - regex: '9029Z'
      model: 'Joy Tab'
      device: 'tablet'
    - regex: '9029Z'
      model: 'Joy Tab'
      device: 'tablet'
    - regex: 'Alcatel UP'
      model: ''
    - regex: '(?:ALCATEL_)?A383G'
      model: 'Big Easy Plus'
    - regex: '5041C'
      model: 'TETRA'
    - regex: 'ALCATEL([^/;]+) Build'
      model: '$1'
    - regex: 'ALCATEL[ \-]?([^/;\)]+)'
      model: '$1'
    - regex: 'ALCATEL_([^/;\)]+)'
      model: '$1'
    - regex: 'Alc([a-z0-9]+)'
      model: '$1'

# Allview (allviewmobile.com)
Allview:
  regex: 'Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_2019|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|C6_Duo|E[23]_Living|E3_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[458])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[134]_Viper|1_Viper_I|2_Viper_(?:E|I|S|X|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-5]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|Viva_(?:H801|100[13]G|(?:H100[12]|H701|H802)_LTE|C701|i701G)'
  device: 'smartphone'
  models:
    - regex: 'A4You'
      model: 'A4 You'
    - regex: 'AX2_Frenzy'
      model: 'AX2 Frenzy'
      device: 'tablet'
    - regex: 'AX4Nano'
      model: 'AX4 Nano'
    - regex: 'AX5NanoQ'
      model: 'AX5 Nano Q'
      device: 'tablet'
    - regex: 'C6_Duo'
      model: 'C6 Duo'
    - regex: 'E([23])_Living'
      model: 'E$1 Living'
    - regex: 'E3_Jump'
      model: 'E3 Jump'
    - regex: 'E3_Sign'
      model: 'E3 Sign'
    - regex: 'E4_Lite'
      model: 'E4 Lite'
    - regex: 'M9_Connect'
      model: 'M9 Connect'
    - regex: 'P43_Easy'
      model: 'P43 Easy'
    - regex: 'P(41|[458])_eMagic(?:_TM)?'
      model: 'P$1 eMagic'
    - regex: 'P([567])_Lite(?:_TM)?'
      model: 'P$1 Lite'
    - regex: 'P6_plus'
      model: 'P6 Plus'
    - regex: 'P6_Qmax'
      model: 'P6 Qmax'
    - regex: 'P([45678])_Pro'
      model: 'P$1 Pro'
    - regex: 'P4_Quad'
      model: 'P4 Quad'
    - regex: 'P9_Energy_Lite_2017'
      model: 'P9 Energy Lite (2017)'
    - regex: 'P9_Energy_S'
      model: 'P9 Energy S'
    - regex: 'P([69])_Energy_Lite'
      model: 'P$1 Energy Lite'
    - regex: 'P8_Energy_PRO'
      model: 'P8 Energy Pro'
    - regex: 'P([689])_Energy_mini(?:_TM)?'
      model: 'P$1 Energy Mini'
    - regex: 'P([5689])_Energy'
      model: 'P$1 Energy'
    - regex: 'P7_Seon'
      model: 'P7 Seon'
    - regex: 'P7_Xtreme'
      model: 'P7 Xtreme'
    - regex: 'P([589])(?:_)?Life(?:_TM)?'
      model: 'P$1 Life'
    - regex: 'P10_Life'
      model: 'P10 Life'
    - regex: 'P10_Max'
      model: 'P10 Max'
    - regex: 'P10_Style'
      model: 'P10 Style'
    - regex: 'V([12])_Viper_I4G(?:_TM)?'
      model: 'V$1 Viper I 4G'
    - regex: 'V1_Viper_I'
      model: 'V1 Viper I'
    - regex: 'V([134])_Viper'
      model: 'V$1 Viper'
    - regex: 'V2_Viper_X_plus'
      model: 'V2 Viper X Plus'
    - regex: 'V2_Viper_(E|I|S|X(?:e)?)'
      model: 'V2 Viper $1'
    - regex: 'X4_Soul_Vision'
      model: 'X4 Soul Vision'
    - regex: 'X([1246])_Soul_Xtreme'
      model: 'X$1 Soul Xtreme'
    - regex: 'X4_Soul_Infinity_(L|N|S|Z)'
      model: 'X4 Soul Infinity $1'
    - regex: 'X([34])_Soul_Lite'
      model: 'X$1 Soul Lite'
    - regex: 'X4_Soul_Mini_S(?:_TM)?'
      model: 'X4 Soul Mini S'
    - regex: 'X([23456])_Soul_Mini(?:_TM)?'
      model: 'X$1 Soul Mini'
    - regex: 'X3_Soul_PLUS'
      model: 'X3 Soul Plus'
    - regex: 'X([35])_Soul_Pro'
      model: 'X$1 Soul Pro'
    - regex: 'X2_Soul_Style_Plus'
      model: 'X2 Soul Style Plus'
    - regex: 'X([2345])_Soul_Style(?:_TM)?'
      model: 'X$1 Soul Style'
    - regex: 'X([12345])_Soul'
      model: 'X$1 Soul'
    - regex: 'X2_Twin'
      model: 'X2 Twin'
    - regex: 'A5_Easy(?:_TM)?'
      model: 'A5 Easy'
    - regex: 'A([56789])_Lite'
      model: 'A$1 Lite'
    - regex: 'A5_Ready(?:_TM)?'
      model: 'A5 Ready'
    - regex: 'A5Smiley'
      model: 'A5 Smiley'
    - regex: 'A5_Quad_Plus_TM'
      model: 'A5 Quad Plus'
    - regex: 'A5_Quad'
      model: 'A5 Quad'
    - regex: 'A6_Duo'
      model: 'A6 Duo'
    - regex: 'A10_Lite_2019'
      model: 'A10 Lite (2019)'
    - regex: 'A10_Plus'
      model: 'A10 Plus'
    - regex: 'A10_Max'
      model: 'A10 Max'
    - regex: 'Impera S'
      model: 'Impera S'
    - regex: 'ALLVIEW P4i'
      model: 'AllDro P4'
    - regex: 'Allview_P2'
      model: 'AllDro'

    # explicit tablet models
    - regex: 'AllviewCityPlus'
      device: 'tablet'
      model: 'City Plus'
    - regex: 'AllviewCity'
      device: 'tablet'
      model: 'City'
    - regex: 'AllviewAX2Frenzy'
      device: 'tablet'
      model: 'AX2 Frenzy'
    - regex: 'Allview2SpeedDuo'
      device: 'tablet'
      model: 'Alldro 2 Speed Duo'
    - regex: 'Allview3SpeedQuad'
      device: 'tablet'
      model: 'Alldro 3 Speed Quad'
    - regex: 'H1003_LTE_PRO'
      device: 'tablet'
      model: 'Viva H1003 LTE Pro'
    - regex: 'Viva_(H801|100[13]G|(?:H802|H100[12]|H701)_LTE|C701|i701G)'
      device: 'tablet'
      model: 'Viva $1'
    - regex: 'ALLVIEW ?SPEEDI'
      device: 'tablet'
      model: 'Speed I'
    - regex: 'ALLVIEW ?SPEED'
      device: 'tablet'
      model: 'Speed'
    - regex: 'ALLVIEWSPEED'
      device: 'tablet'
      model: 'Speed'
    - regex: 'AX4Nano'
      device: 'tablet'
      model: 'AX4 Nano'
    - regex: 'ALLVIEW_TX1_Quasar'
      device: 'tablet'
      model: 'TX1 Quasar'

    - regex: 'Allview[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'Allview[ _-]([^;/]+)(?:[;/)]|$)'
      model: '$1'

# Allwinner
Allwinner:
  regex: '(?:QUAD-CORE (?:A64 p3|A33 y3|T3 K2001M)|ZY-07B|UltraOcta-T8|OCTA-CORE T8)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'QUAD-CORE A64 p3'
      model: 'A64 QUAD-CORE p3'
    - regex: 'QUAD-CORE A33 y3'
      model: 'A33 QUAD-CORE y3'
    - regex: 'ZY-07B'
      model: 'ZY-07B'
    - regex: 'UltraOcta-T8'
      device: 'car browser'
      model: 'Ultra Octa T8'
    - regex: 'QUAD-CORE T3 K2001M'
      device: 'car browser'
      model: 'QUAD-CORE T3 K2001M'
    - regex: 'OCTA-CORE T8'
      device: 'car browser'
      model: 'OCTA-CORE T8'

# altron
altron:
  regex: '(AL-555|GI-626|OB[_-](?:421|728|627))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'AL-555'
      model: 'AL-555'
    - regex: 'OB[_-](421|728|627)'
      model: 'OB-$1'
    - regex: 'GI-626'
      device: 'phablet'
      model: 'GI-626'

# AMGOO
AMGOO:
  regex: 'AM(350|355|40[257]|41[025]|450|50[89]|52[037]|51[58]|53[05])(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'AM350'
      model: 'Jack Pro'
    - regex: 'AM(355|407)'
      model: 'Tigo'
    - regex: 'AM402'
      model: 'Pronto'
    - regex: 'AM410'
      model: 'Unico'
    - regex: 'AM450'
      model: 'Swift'
    - regex: 'AM508'
      model: 'Fuego'
    - regex: 'AM509'
      model: 'Uno'
    - regex: 'AM515'
      model: 'D1'
    - regex: 'AM518'
      model: 'C1'
    - regex: 'AM520'
      model: 'Pro'
    - regex: 'AM523'
      model: 'Plus'
    - regex: 'AM527'
      model: 'Geo'
    - regex: 'AM530'
      model: 'A1'
    - regex: 'AM535'
      model: 'P1'
    - regex: 'AM([0-9]{3})'
      model: 'AM$1'

# Amoi or ami (amimobile.tech)
Amoi:
  regex: 'Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # explicit smartphone tablets
    - regex: 'Clever Pad P7'
      model: 'Clever Pad P7'
    # explicit smartphone models
    - regex: 'A862W'
      model: 'A862W'
    - regex: 'CLEVER JOY S40'
      model: 'Clever Joy S40'
    - regex: 'Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)'
      model: 'Clever $1'
    - regex: 'Amoi[\- /]([a-z0-9]+)'
      model: '$1'
    - regex: 'Amoisonic-([a-z0-9]+)'
      model: '$1'

# Ainol
Ainol:
  regex: 'Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II'
  device: 'tablet'
  models:
    - regex: 'Numy 3G AX1'
      model: 'Novo 7 Numy AX1 3G'
    - regex: 'Numy[_ ]?3G[_ ]?Sword'
      model: 'Numy 3G Sword'
    - regex: 'NOVO10 Spark'
      model: 'Novo 10 Spark'
    - regex: 'AX10PRO'
      model: 'Numy AX10 Pro'
    - regex: 'Numy_3G_AX3'
      model: 'Numy AX3 Sword'
    - regex: 'Numy3GTalos'
      model: 'Numy 3G Talos'
    - regex: 'Numy_3G_BW1'
      model: 'Numy 3G Talos 2'
    - regex: 'NUMY3GAX9(?:[);/ ]|$)'
      model: 'Numy 3G AX9'
    - regex: 'Numy3G_AX10(?:[);/ ]|$)'
      model: 'Numy 3G AX10'
    - regex: '(Novo 10 Hero QuadCore)'
      model: '$1'
    - regex: 'Aurora-II'
      model: 'Novo 7 Aurora II'
    - regex: 'Novo7 Flame(?:[);/ ]|$)'
      model: 'Novo 7 Flame'
    - regex: 'NOVO7(?:[);/ ]|$)'
      model: 'Novo 7'
    - regex: 'Numy[ _]([^;/]+) Build'
      model: 'Numy $1'
    - regex: 'Novo([0-9]+)[ \-]([^;/]+) Build'
      model: 'Novo $1 $2'


# Archos
Archos:
  regex: '(?:YL-)?Archos|(?:A50TI|AC101BHE)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)'
      model: '$1'
    - regex: 'A50TI(?:[);/ ]|$)'
      model: '50 Titanium 4G'
    - regex: 'Archos ?5(?:[);/ ]|$)'
      device: 'tablet'
      model: '5'
    - regex: 'AC101BHE(?:[);/ ]|$)'
      device: 'tablet'
      model: '101B Helium 4G'
    - regex: '(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build'
      device: 'tablet'
      model: '$1'
    - regex: 'Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|G10|Helium|Titanium|Cobalt|Platinum|Xenon|Carbon|Neon|XS|IT)[^/;]*) Build'
      device: 'tablet'
      model: '$1'
    - regex: '(?:YL-)?Archos ([a-z0-9 ]+) Build'
      model: '$1'
    - regex: '(?:YL-)?Archos ([a-z0-9]+)'
      model: '$1'

# Axxion
Axxion:
  regex: 'Axxion ATAB-[0-9]+(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'Axxion ATAB-([0-9]+)(?:[);/ ]|$)'
      model: 'ATAB-$1'

# Meu
MEU:
  regex: 'MEU ([a-z0-9]+) Build'
  device: 'smartphone'
  model: '$1'

# Arnova
Arnova:
  regex: 'arnova|ARCHM901|AN7CG2|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3'
  device: 'tablet'
  models:
    # explicit tablet models
    - regex: 'ARCHM901'
      model: 'M901'
    - regex: 'AN7CG2'
      model: '7c G2'
    - regex: 'AN7G2I|AN7G2|AN7G2DTE'
      model: '7 G2'
    - regex: 'AN7G3'
      model: '7 G3'
    - regex: 'AN7BG3'
      model: '7b G3'
    - regex: 'AN7CG3'
      model: '7c G3'
    - regex: 'AN7DG3-CP'
      model: 'Childpad'
    - regex: 'AN7DG3'
      model: '7d G3'
    - regex: 'AN7FG3'
      model: '7f G3'
    - regex: 'AN7HG3'
      model: '7h G3'
    - regex: 'A80KSC'
      model: '8'
    - regex: 'AN8G2'
      model: '8 G2'
    - regex: 'AN8G3'
      model: '8 G3'
    - regex: 'AN8BG3'
      model: '8b G3'
    - regex: 'AN8CG3'
      model: '8c G3'
    - regex: 'AN9G2I'
      model: '9i G2'
    - regex: 'AN9G2'
      model: '9 G2'
    - regex: 'AN9G3'
      model: '9 G3'
    - regex: 'A101B2|A101C|AN10G2'
      model: '10 G2'
    - regex: 'A101B'
      model: '10'
    - regex: 'AN10BG2|AN10BG2DT|AN10BG2I'
      model: '10b G2'
    - regex: 'AN10BG3|AN10BG3DT|AN10BG3-LZ'
      model: '10b G3'
    - regex: 'AN10CG3'
      model: '10c G3'
    - regex: 'AN10DG3'
      model: '10d G3'
    - regex: 'ARNOVA 90G3'
      model: '90 G3'
    - regex: 'ARNOVA 90 G4'
      model: '90 G4'
    - regex: 'ARNOVA 97G4'
      model: '97 G4'
    - regex: 'ARNOVA 101 G4'
      model: '101 G4'

    - regex: 'Arnova ([^/;]*) Build'
      model: '$1'

# ARRIS
ARRIS:
  regex: 'ARRIS'
  device: 'tv'
  models:
    - regex: 'ARRIS[,;] ([^),;/]+)'
      model: '$1'

# Ask
Ask:
  regex: 'ASK[ _]'
  device: 'smartphone'
  models:
    - regex: 'ASK[ _]791SP[ _]3G'
      model: '791SP 3G'
      device: 'tablet'
    - regex: 'ASK[_ ]([^/;]*) Build'
      model: '$1'

# ANS
ANS:
  regex: 'UL40 Build'
  device: 'smartphone'
  model: 'UL40'

# AOC (https://www.aoc.com/)
AOC:
  regex: 'AOC,'
  device: 'tv'
  models:
    - regex: '(LE(?:32|43)S5970(?:s)?-20|LE55U7970-30|LE43S5977-20|U60856)'
      model: '$1'

# Assistant
Assistant:
  regex: '(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]'
  device: 'smartphone'
  models:
    - regex: 'AS[-_]401L(?:[);/ ]|$)'
      model: 'Asper'
    - regex: 'AS-5432(?:[);/ ]|$)'
      model: 'Agio'
    - regex: 'AS[-_](?:5434|501)(?:[);/ ]|$)'
      model: 'Club'
    - regex: 'AS_601L(?:[);/ ]|$)'
      model: 'AS-601L'
    - regex: 'AS-5433 Secret(?:[);/ ]|$)'
      model: 'Secret'
    - regex: 'AS-5433(?:[);/ ]|$)'
      model: 'Max Secret'
    - regex: 'AS-5421(?:[);/ ]|$)'
      model: 'Surf'
    - regex: 'AS-44[12]1(?:[);/ ]|$)'
      model: 'Unami'
    - regex: 'AS-5431(?:[);/ ]|$)'
      model: 'Prima'
    - regex: 'AS-502(?:[);/ ]|$)'
      model: 'Shot'
    - regex: 'AS-503(?:[);/ ]|$)'
      model: 'Target'
    - regex: 'AS-5435(?:[);/ ]|$)'
      model: 'Shine'
    - regex: 'AS-5436[ _]'
      model: 'Grid'
    - regex: 'AS-6431(?:[);/ ]|$)'
      model: 'Rider'
    - regex: 'AS-5411[_ ]'
      model: 'Max Ritm'
    - regex: 'AS-5412 Max(?:[);/ ]|$)'
      model: 'AS-5412 Max'
    - regex: 'AP-721N(?:[);/ ]|$)'
      model: 'AP-721N Force'
      device: 'tablet'
    - regex: 'AP-941(?:[);/ ]|$)'
      model: 'AP-941'
      device: 'tablet'
    - regex: 'AP-108(?:[);/ ]|$)'
      model: 'Cetus'
      device: 'tablet'
    - regex: 'AP-106(?:[);/ ]|$)'
      model: 'AP-106 Force'
      device: 'tablet'
    - regex: '(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)'
      device: 'tablet'
      model: '$1'

# Ark (Ark Electronic Technology)
Ark:
  regex: '(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))|EDGE A5HD|Elf_S8|ICON (R40\+|R45)|Impulse[ _](P[12])|Wizard_[12](?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))'
      model: 'Benefit $1'
    - regex: 'Impulse[ _]P1\+'
      model: 'Impulse P1 Plus'
    - regex: 'Impulse[ _](P[12])'
      model: 'Impulse $1'
    - regex: 'EDGE (A5HD)'
      model: 'Edge $1'
    - regex: 'ICON (R40\+|R45)'
      model: 'Icon $1'
    - regex: 'Wizard_([12])'
      model: 'Wizard $1'
    - regex: 'Elf_S8(?:[);/ ]|$)'
      model: 'Elf S8'

# Garmin-Asus
Garmin-Asus:
  regex: 'Garmin-Asus|Garminfone'
  device: 'smartphone'
  models:
    - regex: 'Garminfone[ \-_]([^;/]*)Build'
      model: 'Garminfone $1'
    - regex: 'Garmin-Asus[ \-_]([^;/]+)Build'
      model: '$1'
    - regex: 'Garmin-Asus[ \-_]([^;/]+)[\)/]'
      model: '$1'

# Asus
Asus:
  regex: 'Asus|Transformer|ZenFone Max|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|P(?:00[18ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[01])KS|ZS(6[0236]0|55[10])KL|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D'
  device: 'smartphone'
  models:
    # explicit tablet models
    - regex: 'ME171(?:[);/ ]|$)'
      model: 'Eee Pad MeMO 171'
      device: 'tablet'
    - regex: 'ASUS Z906(?:[);/ ]|$)'
      model: 'Z906 10.1"'
      device: 'tablet'
    - regex: 'ME172V'
      model: 'MeMO Pad'
      device: 'tablet'
    - regex: 'ME302C(?:[);/ ]|$)'
      model: 'MeMO Pad FHD 10'
      device: 'tablet'
    - regex: '(ME302KL|MeMo Pad FHD 10 LTE)(?:[);/ ]|$)'
      model: 'MeMO Pad FHD 10 LTE'
      device: 'tablet'
    - regex: 'ME301T(?:[);/ ]|$)'
      model: 'MeMO Pad Smart 10'
      device: 'tablet'
    - regex: 'Z101(?:[);/ ]|$)'
      model: 'Z101'
      device: 'tablet'
    - regex: 'X Pad 10 LTE(?:[);/ ]|$)'
      model: 'X Pad 10 LTE'
      device: 'tablet'
    - regex: '(?:K01[3A]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7'
      model: 'MeMO Pad 7'
      device: 'tablet'
    - regex: 'K01E(?:[);/ ]|$)'
      model: 'MeMO Pad 10 ME103K'
      device: 'tablet'
    - regex: 'K00U|ME173X(?:[);/ ]|$)'
      model: 'MeMO Pad HD 7'
      device: 'tablet'
    - regex: '(?:K011|K00L)(?:[);/ ]|$)'
      model: 'MeMO Pad 8'
      device: 'tablet'
    - regex: 'K014(?:[);/ ]|$)'
      model: 'MeMO Pad 8.9'
      device: 'tablet'
    - regex: 'K00S(?:[);/ ]|$)'
      model: 'MeMO Pad HD 7 Dual SIM'
      device: 'tablet'
    - regex: 'K00F(?:[);/ ]|$)'
      model: 'MeMO Pad 10'
      device: 'tablet'
    - regex: 'K00C(?:[);/ ]|$)'
      model: 'Transformer Pad TF701T'
      device: 'tablet'
    - regex: 'K010(?:[);/ ]|$)'
      model: 'Transformer Pad TF103C'
      device: 'tablet'
    - regex: 'K018(?:[);/ ]|$)'
      model: 'Transformer Pad TF103CG'
      device: 'tablet'
    - regex: 'TF300T(?:[);/ ]|$)'
      model: 'Transformer Pad TF300T'
      device: 'tablet'
    - regex: 'K01B(?:[);/ ]|$)'
      model: 'Transformer Pad TF303K'
      device: 'tablet'
    - regex: 'Slider SL101'
      model: 'Eee Pad Slider SL101'
      device: 'tablet'
    - regex: 'P01[YZ]'
      model: 'ZenPad C 7.0'
      device: 'tablet'
    - regex: 'P008 Build'
      model: 'ZenPad Z8'
      device: 'tablet'
    - regex: 'P001'
      model: 'ZenPad Z10'
      device: 'tablet'
    - regex: '(?:ASUS_)?P00J'
      model: 'ZenPad Z8s'
      device: 'tablet'
    - regex: 'P01[VW]'
      model: 'ZenPad 7.0'
      device: 'tablet'
    - regex: '(?:P024|P00A)(?:[);/ ]|$)'
      model: 'ZenPad 8.0'
      device: 'tablet'
    - regex: 'P01MA(?: Build|\))|P01M(?: Build|\))'
      model: 'ZenPad S 8.0'
      device: 'tablet'
    - regex: 'P027'
      model: 'ZenPad 3S 10'
      device: 'tablet'
    - regex: '(?:ASUS_)?P00I'
      model: 'ZenPad 3S 10 LTE'
      device: 'tablet'
    - regex: '(?:ASUS_)?P00C|P02[138]|P00L|P01T_1'
      model: 'ZenPad 10'
      device: 'tablet'
    - regex: 'ASUS Tablet P1801-T'
      model: 'Transformer AiO P1801 18.4"'
      device: 'tablet'
    - regex: 'ASUS TAB A8'
      model: 'TAB A8'
      device: 'tablet'

    # explicit phablet models
    - regex: 'ME371MG(?:[);/ ]|$)'
      model: 'Fonepad'
      device: 'phablet'
    - regex: 'K00G(?:[);/ ]|$)'
      model: 'Fonepad Note 6'
      device: 'phablet'
    - regex: '(?:K012|K00E)(?:[);/ ]|$)'
      model: 'Fonepad 7'
      device: 'phablet'
    - regex: 'K00Z(?:[);/ ]|$)'
      model: 'Fonepad 7 Dual SIM'
      device: 'phablet'
    - regex: 'K016(?:[);/ ]|$)'
      model: 'Fonepad 8'
      device: 'phablet'

    # explicit smartphone models
    - regex: '(?:ASUS_)?T00N'
      model: 'PadFone S'
    - regex: '(?:ASUS_)?T00[CE]'
      model: 'PadFone Mini'
    - regex: '(?:ASUS[-_])?T00T'
      model: 'PadFone X Mini'
    - regex: 'PadFone T008'
      model: 'PadFone E'
    - regex: 'PadFone T004'
      model: 'PadFone Infinity'
    - regex: '(?:ASUS_)?A002(A)?'
      model: 'ZenFone AR'
    - regex: '(?:ASUS_)?A006'
      model: 'ZenFone V'
    - regex: '(?:ASUS_)?A009'
      model: 'ZenFone V Live'
    - regex: '(?:ASUS_)?Z007'
      model: 'ZenFone C'
    - regex: '(?:ASUS_)?(X00P[SD]|ZB555KL)'
      model: 'ZenFone Max M1'
    - regex: '(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1'
      model: 'ZenFone Max Pro M1'
    - regex: '(?:ASUS_)?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)'
      model: 'ZenFone Max M2'
    - regex: '(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)'
      model: 'ZenFone 2'
    - regex: '(?:ASUS_)?(?:ZenFone 2E)'
      model: 'ZenFone 2E'
    - regex: '(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)'
      model: 'ZenFone Live'
    - regex: '(?:ASUS_)?(?:X00RD|G552KL)'
      model: 'ZenFone Live L1'
    - regex: 'G553KL'
      model: 'ZenFone Lite L1'
    - regex: '(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)'
      model: 'ZenFone 2 Laser'
    - regex: '(?:ASUS_)?(?:T00[IQ1]|Z01KD)'
      model: 'ZenFone 4'
    - regex: '(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)'
      model: 'ZenFone 5'
    - regex: '(?:ASUS_)?T00P'
      model: 'ZenFone 5 LTE'
    - regex: '(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)'
      model: 'ZenFone 5 Lite'
    - regex: '(?:ASUS_)?(?:Z01RD|ZS620KL)'
      model: 'ZenFone 5Z'
    - regex: '(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)'
      model: 'ZenFone 6'
    - regex: '(?:ASUS_)?ZS671KS'
      model: 'ZenFone 7 Pro'
    - regex: '(?:ASUS_)?(?:ZS670KS|I002D)(?:[);/ ]|$)'
      model: 'ZenFone 7'
    - regex: '(?:ASUS_)?Z010D'
      model: 'ZenFone Max'
    - regex: '(?:ASUS_)?X018D'
      model: 'ZenFone Max Plus M1'
    - regex: '(?:ASUS_)?X00TD?'
      model: 'ZenFone Max Pro M1'
    - regex: '(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)'
      model: 'ZenFone Max Pro M2'
    - regex: '(?:ASUS_)?X014D'
      model: 'ZenFone Go Plus'
    - regex: '(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)'
      model: 'ZenFone Go'
    - regex: '(?:ASUS_)?X013D'
      model: 'ZenFone Go Life'
    - regex: '(?:ASUS_)?G550KL'
      model: 'ZenFone Go TV'
    - regex: '(?:ASUS_)?Z00[SV]D' #ZC500TG
      model: 'ZenFone Go'
    - regex: '(?:ASUS_)?(X00[23])'
      model: 'ZenFone Pegasus'
    - regex: '(?:ASUS_)?X005'
      model: 'ZenFone Pegasus 5000'
    - regex: '(?:ASUS_)?X550'
      model: 'ZenFone Pegasus 2 Plus'
    - regex: '(?:ASUS_)?(X00GD)'
      model: 'ZenFone Pegasus 3S Max'
    - regex: '(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL'
      model: 'ZenFone 3 Max'
    - regex: '(?:ASUS_)?(X008)'
      model: 'ZenFone 3 Pegasus'
    - regex: '(?:ASUS_)?(ZE553KL|Z01HD)'
      model: 'ZenFone 3 Zoom'
    - regex: '(?:ASUS_)?ZS550KL'
      model: 'ZenFone 3 Deluxe'
    - regex: '(?:ASUS_)?Z00UD'
      model: 'ZenFone Selfie'
    - regex: '(?:ASUS_)?(Z016[DS]|Z01FD)'
      model: 'ZenFone 3 Deluxe'
    - regex: '(?:ASUS_)?(Z017DA|ZE520KL|ZE552KL|Z017D|Z012(D|S))'
      model: 'ZenFone 3'
    - regex: '(?:ASUS_)?Z01B[DS]|ZC551KL'
      model: 'ZenFone 3 Laser'
    - regex: '(?:ASUS_)?A001'
      model: 'ZenFone 3 Ultra'
    - regex: '(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)'
      model: 'ZenFone 4 Selfie Pro'
    - regex: '(?:ASUS_)?(?:X00LDA|ZD553KL)'
      model: 'ZenFone 4 Selfie'
    - regex: '(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)'
      model: 'ZenFone 4'
    - regex: '(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL'
      model: 'ZenFone 4 Max'
    - regex: '(?:ASUS_)?X015D'
      model: 'ZenFone 4 Max Plus'
    - regex: '(?:ASUS_)?(:?Z01G[DS]|ZS551KL)'
      model: 'ZenFone 4 Pro'
    - regex: '(?:ASUS_)?Z00XS'
      model: 'ZenFone Zoom'
    - regex: '(?:ASUS_)?(?:Z01QD|ZS600KL)'
      model: 'ROG Phone'
    - regex: '(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)'
      model: 'ROG Phone 2'
    - regex: '(?:ASUS_)?(?:I003DD?|ZS661KS)'
      model: 'ROG Phone 3'
    - regex: '(?:ASUS_)?(?:I005DA)'
      model: 'ROG Phone 5'

    # desktop detections
    - regex: 'ZN220IC'
      device: 'desktop'
      model: 'Zen AiO ZN220IC'

    # watch detections
    - regex: '(?:ASUS_)?ZenWatch( 2)?'
      device: 'wearable'
      model: 'ZenWatch$1'

    # general detections
    - regex: 'Asus(?:-|;)?([a-z0-9]+)'
      model: '$1'
    - regex: '(PadFone(?: [^;/]+)?) Build'
      model: '$1'
    - regex: '(PadFone(?: [a-z0-9]+)?)'
      model: '$1'
    - regex: '(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)'
      device: 'tablet'
      model: 'Transformer $1'
    - regex: 'Chromebook Flip (C10[01]PA|C302)'
      device: 'desktop'
      model: 'Chromebook Flip $1'

# Audiovox
Audiovox:
  regex: 'Audiovox|CDM|UTS(?:TARCOM)?\-|audio(?!book)[a-z0-9\-]+'
  device: 'smartphone'
  models:
    - regex: 'Audiovox[_\-]([a-z0-9\-]+)'
      model: '$1'
    - regex: 'CDM(?:-)?([a-z0-9]+)'
      model: 'CDM-$1'
    - regex: 'UTS(?:TARCOM)?-([a-z0-9\-]+)'
      model: 'CDM-$1'
    - regex: 'audio([a-z0-9\-]+)'
      model: 'CDM-$1'

# AVH
AVH:
  regex: 'Excer[ _]'
  device: 'tablet'
  models:
    - regex: 'Excer[ _]G5.3'
      model: 'Excer G5.3'
    - regex: 'Excer[ _]G5'
      model: 'Excer G5'
    - regex: 'Excer[ _]10[ _]PRO'
      model: 'Excer 10 Pro'
    - regex: 'Excer[ _]8'
      model: 'Excer 8'

# Avvio
Avvio:
  regex: 'Avvio[ _]?([a-z0-9\-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'CHIVAS_55'
      model: 'Chivas 55'
    - regex: 'Mint_M353'
      model: 'Mint M353'
    - regex: 'Colombia_2018'
      model: 'Colombia (2018)'
    - regex: 'Avvio[ _]PAD'
      model: 'PAD'
      device: 'tablet'
    - regex: 'Avvio[ _]?([a-z0-9\-]+)'
      model: '$1'

# Azumi Mobile (azumi-mobile.com)
Azumi Mobile:
  regex: 'Azumi[_ -]|(?:SPEED55|A50_Style_Plus)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Azumi[_ -]([^/;]+) Build'
      model: '$1'
    - regex: 'Azumi[_ -]([a-z0-9_]+)'
      model: '$1'
    - regex: 'SPEED55'
      model: 'Speed 5.5"'
    - regex: 'A50_Style_Plus'
      model: 'A50 Style Plus'

#Barnes & Noble
'Barnes & Noble':
  regex: 'Nook|BN[TR]V[0-9]+'
  device: 'tablet'
  models:
    - regex: 'Nook([a-z0-9]+)'
      model: 'Nook $1'
    - regex: 'Nook[ _]([^/;]+)[ _]Build'
      model: 'Nook $1'
    - regex: '(BN[TR]V[0-9]+)'
      model: 'Nook $1'

# BGH
BGH:
  regex: '(?!Positivo )BGH ([^/;\)]+)(?: Build|\))'
  device: 'smartphone'
  models:
    - regex: 'Y([17]00|2[01]0|1010)'
      device: 'tablet'
      model: 'Y$1'
    - regex: 'BGH (\+Simple|Mini)'
      device: 'tablet'
      model: '$1'
    - regex: 'Y710 KIDS'
      device: 'tablet'
      model: 'Y710 Kids'
    - regex: 'JOY X2'
      model: 'Joy X2'
    - regex: 'BGH ([^/;\)]+)(?: Build|\))'
      model: '$1'

# Bitel
Bitel:
  regex: 'Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)'
      model: '$1'
    - regex: 'Bitel[ _-]([^/;]+) Build'
      model: '$1'

# Blu
Blu:
  regex: 'BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](5.0K|5.5|View XL|Mega|C 8\+8|[CGM][ _]HD|[CGX]|SELFIE|Selfie LTE|Touch|M5 Plus|J[1258]|X8 HD)|Advance (4.0 ?[LM]|5.[02](?: HD)?|A4|L[45])|ENERGY (DIAMOND|XL)|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI)|Life One X2|G90(?: PRO)?|Grand M3|GRAND (?:5.5 HD|XL LTE)|R1 (?:HD|PLUS)|Tank Xtreme [45].0|Tank Xtreme Pro|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD N1|B130DL|Vivo 5 Mini)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Advance (4.0 ?[LM]|4.0|5.[02](?: HD)?|A4|L[54])'
      model: 'Advance $1'
    - regex: '(?:BLU[_ ])?Studio[ _](5.0 C|5.5|View XL|Mega|C 8\+8|[CG][ _]HD|C|G|Touch|M HD|M5 Plus|J[1258]|X8 HD|X5|XL|X)(?:[);/ ]|$)'
      model: 'Studio $1'
    - regex: '(?:BLU[_ ])?Studio[ _]5.0 ?K(?:[);/ ]|$)'
      model: 'Studio 5.0 K'
    - regex: 'STUDIO SELFIE LTE'
      model: 'Studio Selfie LTE'
    - regex: 'STUDIO ONE'
      model: 'Studio One'
    - regex: 'STUDIO SELFIE ([23]|LTE)'
      model: 'Studio Selfie $1'
    - regex: 'STUDIO SELFIE'
      model: 'Studio Selfie'
    - regex: '(?:BLU[_ ])?NEO_ENERGY_MINI'
      model: 'Neo Energy Mini'
    - regex: 'ENERGY DIAMOND'
      model: 'Energy Diamond'
    - regex: 'ENERGY XL'
      model: 'Energy XL'
    - regex: 'Energy X 2'
      model: 'Energy X 2'
    - regex: 'ENERGY X PLUS 2'
      model: 'Energy X Plus 2'
    - regex: 'ENERGY X PLUS'
      model: 'Energy X Plus'
    - regex: 'LIFE XL'
      model: 'Life XL'
    - regex: 'DASH[ _]X[ _]PLUS[ _]LTE'
      model: 'Dash X Plus LTE'
    - regex: 'DASH X PLUS'
      model: 'Dash X Plus'
    - regex: 'DASH 4.5'
      model: 'Dash 4.5'
    - regex: 'Dash XL'
      model: 'Dash XL'
    - regex: 'PURE (X[LR])'
      model: 'Pure $1'
    - regex: 'PURE MINI'
      model: 'Pure Mini'
    - regex: 'BOLD N1'
      model: 'Bold N1'
    - regex: 'Life One X2'
      model: 'Life One X2'
    - regex: 'LIFE ONE X'
      model: 'Life One X'
    - regex: 'LIFE ONE'
      model: 'Life One'
    - regex: 'LIFE MARK'
      model: 'Life Mark'
    - regex: 'NEO X PLUS'
      model: 'Neo X Plus'
    - regex: 'NEO (XL|X)'
      model: 'Neo $1'
    - regex: 'G90 PRO'
      model: 'G90 Pro'
    - regex: 'G90'
      model: 'G90'
    - regex: 'GRAND 5.5 HD'
      model: 'Grand 5.5 HD'
    - regex: 'Grand X LTE'
      model: 'Grand X LTE'
    - regex: 'Grand XL LTE'
      model: 'Grand XL LTE'
    - regex: 'Grand M3'
      model: 'Grand M3'
    - regex: 'B110DL'
      model: 'View Mega'
    - regex: 'B130DL'
      model: 'View 2'
    - regex: 'R1 HD'
      model: 'R1 HD'
    - regex: 'R1 PLUS'
      model: 'R1 Plus'
    - regex: 'C([456]) (2019)'
      model: 'C$1 ($2)'
    - regex: 'Tank Xtreme ([45]).0'
      model: 'Tank Xtreme $1.0"'
    - regex: 'Tank Xtreme Pro'
      model: 'Tank Xtreme Pro'
    - regex: 'VIVO AIR LTE'
      model: 'Vivo Air LTE'
    - regex: 'Touchbook G7'
      model: 'Touchbook G7'
    - regex: '(?:BLU[_ ])?VIVO[ _]SELFIE'
      model: 'Vivo Selfie'
    - regex: '(?:BLU[_ ])?Vivo 5 Mini'
      model: 'Vivo 5 Mini'

    - regex: 'Touchbook M7 Pro'
      model: 'Touchbook M7 Pro'
      device: 'tablet'
    - regex: 'STUDIO 7.0 II'
      model: 'Studio 7.0" II'
      device: 'tablet'

    - regex: 'DASH (L[45] LTE|5.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)'
      model: 'Dash $1'

    - regex: 'DASH[ _]([^)/;]+)(?: Build|\))'
      model: 'Dash $1'

    - regex: 'blu[ _]([^/;]+)( Build|[);])'
      model: '$1'

# Bluegood
Bluegood:
  regex: 'BLUEGOOD'
  device: 'smartphone'
  models:
    - regex: 'V6'
      model: 'V6'

# Blackview
Blackview:
  regex: 'Blackview|(BV([24-9]000|[46]900|(5[1589]|9[15689])00|6[138]00)(?:[ _](?:PRO))?|(P10000(?:[ _](?:PRO))?)|omega[ _]pro|Alife[ _][PS]1|Heatwave|DM550|BV9700Pro|(?<!Lenovo[_ ])A[68]0(?:Pro)?\))|A[86]0Plus|BL6000Pro'
  device: 'smartphone'
  models:
    - regex: 'A60Pro\)'
      model: 'A60 Pro'
    - regex: 'A60\)'
      model: 'A60'
    - regex: 'A80Pro(?:[);/ ]|$)'
      model: 'A80 Pro'
    - regex: 'A([86]0)Plus(?:[);/ ]|$)'
      model: 'A$1 Plus'
    - regex: '(BV6000S)'
      model: '$1'
    - regex: '(BV9700|BL6000)Pro'
      model: '$1 Pro'
    - regex: 'Blackview (A[78]|E7S)'
      model: '$1'
    - regex: 'BV9000Pro-F'
      model: 'BV9000 Pro F'
    - regex: '(BV([48]000|9[56]00|6[83]00))Pro'
      model: '$1 Pro'
    - regex: '(BV6[13]00)(?:[);/ ]|$)'
      model: '$1'
      device: 'phablet'
    - regex: '(BV([24-9]000|6900|4900|(5[1589]|9[15689])00)(?:[ _](?:PRO))?)'
      model: '$1'
    - regex: '(P10000(?:[ _](?:PRO))?)'
      model: '$1'
    - regex: 'omega[ _]pro'
      model: 'Omega Pro'
    - regex: '(Alife[ _][PS]1|DM550|Heatwave)'
      model: '$1'

# Bluboo
Bluboo:
  regex: 'Bluboo|Xfire|Picasso 4G|Maya Build'
  device: 'smartphone'
  models:
    - regex: 'Maya Build'
      model: 'Maya'
    - regex: 'Xfire2'
      model: 'Xfire 2'
    - regex: 'Picasso 4G'
      model: 'Picasso 4G'
    - regex: 'Xfire'
      model: 'Xfire'
    - regex: 'Bluboo[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'Bluboo[ _-]?([^;/)]+)'
      model: '$1'

# Black Fox or BlackFox
'Black Fox':
  regex: 'BMM[ _-]?(?:44[123]D|441[WB]|44[12]S|431D|533D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'BMM443D'
      model: 'B7 Fox+'
    - regex: 'BMM441S'
      model: 'B8 Fox'
    - regex: 'BMM442S|BMM441B'
      model: 'B8 Fox+'
    - regex: 'BMM441W'
      model: 'B8M'
    - regex: 'BMM442D'
      model: 'B7'
    - regex: 'BMM531D'
      model: 'B6'
    - regex: 'BMM531A'
      model: 'B5'
    - regex: 'BMM541A'
      model: 'B5+'
    - regex: 'BMM543[DS]'
      model: 'B4'
    - regex: 'BMM441D'
      model: 'B4 Mini'
    - regex: 'BMM541B'
      model: 'B4 Mini NFC'
    - regex: 'BMM531B'
      model: 'B4 Mini (2019)'
    - regex: 'BMM542D'
      model: 'B3+'
    - regex: 'BMM541D'
      model: 'B3'
    - regex: 'BMM541W'
      model: 'B7R Fox'
    - regex: 'BMM 532 S'
      model: 'BMM 532S'
    - regex: 'BMM[ _-]?(533D|431D|54[12]S)(?:[);/ ]|$)'
      model: 'BMM $1'

# bogo
bogo:
  regex: 'BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)'
  device: 'smartphone'
  models:
    - regex: 'BO-LFSP4'
      model: 'LifeStyle 4DC'
    - regex: 'BO-LFSPSL4'
      model: 'LifeStyle 4SL'
    - regex: 'BO-LFSPBS5'
      model: 'LifeStyle 5BS'
    - regex: 'BO-LFSPSL6QCI'
      model: 'LifeStyle 6QC'
    - regex: 'BO-(FRSP4)'
      model: '$1'

# Boway
Boway:
  regex: '(?:sprd-)?(BOWAY)'
  device: 'smartphone'
  models:
    - regex: 'BOWAY[ _-]([^/;]+)[ _]Build'
      model: '$1'
    - regex: '([^/;]+) Build/BOWAY'
      model: '$1'
    - regex: '.*BOWAY[ _-]([^/;]+)/'
      model: '$1'

# Brondi
Brondi:
  regex: 'Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab|501 SZ'
  device: 'smartphone'
  models:
    - regex: '(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)'
      model: 'CENTURION $1'
    - regex: 'GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)'
      model: 'GLADIATOR $1'
    - regex: 'GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)'
      model: 'GLORY $1'
    - regex: 'LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)'
      model: 'LUXURY $1'
    - regex: 'SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)'
      model: 'SENSUELLE $1'
    - regex: 'VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)'
      model: 'VICTORY $1'

    - regex: 'Surfing Tab ([^;/]+) Build'
      model: 'SURFING TAB $1'
      device: 'tablet'
    - regex: 'Surfing Tab ([^;/)]+)[;/)]'
      model: 'SURFING TAB $1'
      device: 'tablet'

# VGO TEL (vgotel.com)
VGO TEL:
  regex: '(?:Venture V(?:[278]|12)|Ocean[_ ][689]|Ocean9L)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Venture V([278]|12)(?:[);/ ]|$)'
      model: 'Venture V$1'
    - regex: 'Ocean[_ ]?([689]|9L)(?:[);/ ]|$)'
      model: 'Ocean $1'

# Vivo (vivo.com.cn, vivo.com)
Vivo:
  regex: '((?:VIV-|BBG-)?(?<!FBCR/)vivo(?!(?:Browser)))|(?:V1730(D[AT]|GA)|V18(18CA|01A0|13B[AT]|18T|09[AT]|1[346][AT]|[13]8[AT]|14A|24[B]?A|2[19][AT]|3[12][AT]|36[AT])|V1731CA|V1732[AT]|V1818CT|V19[01]1[AT]|V1932[AT]|V191[3469][AT]|V192[1348]A|V193[04]A|V194[15]A|V1938CT|V1955A|V1938T|V1730EA|V19[26]2A|V196[35]A|V198[16]A|V1936A[L]?|V19[59]0A|V200[125]A|1819|V201[12]A|V202[0345]C?A|V202[235-9]|V2054A|V203[026]|V204[03]|V2049A|X50 Pro\+|I1927)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'V1824[B]?A(?:[);/ ]|$)'
      model: 'iQOO'
    - regex: 'V1955A(?:[);/ ]|$)'
      model: 'iQOO 3'
    - regex: 'I1927(?:[);/ ]|$)'
      model: 'iQOO 3 5G'
    - regex: 'V2049A(?:[);/ ]|$)'
      model: 'iQOO 7'
    - regex: 'V1922A(?:[);/ ]|$)'
      model: 'iQOO Pro' # 2019
    - regex: 'V1916A(?:[);/ ]|$)'
      model: 'iQOO Pro 5G'
    - regex: 'V1914A(?:[);/ ]|$)'
      model: 'iQOO Neo'
    - regex: 'V1981A(?:[);/ ]|$)'
      model: 'iQOO Neo 3'
    - regex: 'V1936A[L]?(?:[);/ ]|$)'
      model: 'iQOO Neo 855'
    - regex: 'V1986A(?:[);/ ]|$)'
      model: 'iQOO Z1'
    - regex: 'V2012A(?:[);/ ]|$)'
      model: 'iQOO Z1x'
    - regex: 'V1919A(?:[);/ ]|$)'
      model: 'iQOO Z5x'
    - regex: 'V2023A(?:[);/ ]|$)'
      model: 'iQOO U1'
    - regex: 'V2024A(?:[);/ ]|$)'
      model: 'iQOO 5'
    - regex: 'V2025A(?:[);/ ]|$)'
      model: 'iQOO 5 Pro'
    - regex: 'V2025(?:[);/ ]|$)'
      model: 'V20'
    - regex: 'V2040(?:[);/ ]|$)'
      model: 'V20 (2021)'
    - regex: 'vivo 1805(?:[);/ ]|$)'
      model: 'Nex'
    - regex: 'V1923A(?:[);/ ]|$)'
      model: 'Nex 3'
    - regex: 'V1924A(?:[);/ ]|$)'
      model: 'Nex 3 5G'
    - regex: 'V1950A(?:[);/ ]|$)'
      model: 'Nex 3S'
    - regex: 'V1821[AT](?:[);/ ]|$)'
      model: 'Nex Dual Display'
    - regex: 'Vivo ONE(?:[);/ ]|$)'
      model: 'One'
    - regex: 'V1831[AT](?:[);/ ]|$)'
      model: 'S1'
    - regex: 'V1832[AT](?:[);/ ]|$)'
      model: 'S1 Pro'
    - regex: 'V1932[AT](?:[);/ ]|$)'
      model: 'S5'
    - regex: 'V1962A(?:[);/ ]|$)'
      model: 'S6 5G'
    - regex: 'V2020C?A(?:[);/ ]|$)'
      model: 'S7'
    - regex: 'V1941A(?:[);/ ]|$)'
      model: 'U3'
    - regex: 'V1928A(?:[);/ ]|$)'
      model: 'U3X'
    - regex: 'vivo 1804(?:[);/ ]|$)'
      model: 'V11 Pro'
    - regex: 'vivo 1806(?:[);/ ]|$)'
      model: 'V11i'
    - regex: '1819(?:[);/ ]|$)'
      model: 'V15'
    - regex: 'vivo 1818(?:[);/ ]|$)'
      model: 'V15 Pro'
    - regex: 'vivo 1909(?:[);/ ]|$)'
      model: 'V17 Pro'
    - regex: 'V2022(?:[);/ ]|$)'
      model: 'V20 SE'
    - regex: '(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)'
      model: 'V5'
    - regex: 'vivo 1609(?:[);/ ]|$)'
      model: 'V5 Lite'
    - regex: 'vivo 1611(?:[);/ ]|$)'
      model: 'V5 Plus'
    - regex: 'vivo (1713|1612)(?:[);/ ]|$)'
      model: 'V5s'
    - regex: 'vivo 1718(?:[);/ ]|$)'
      model: 'V7'
    - regex: 'vivo 1716(?:[);/ ]|$)'
      model: 'V7 Plus'
    - regex: 'vivo 1723(?:[);/ ]|$)'
      model: 'V9'
    - regex: 'vivo 1727(?:[);/ ]|$)'
      model: 'V9 Youth'
    - regex: 'vivo 1721(?:[);/ ]|$)'
      model: 'X20'
    - regex: 'X20Plus(?:[);/ ]|$)'
      model: 'X20 Plus'
    - regex: 'vivo 1725(?:[);/ ]|$)'
      model: 'X21'
    - regex: 'V1814[AT](?:[);/ ]|$)'
      model: 'X21S'
    - regex: 'V1809[AT](?:[);/ ]|$)'
      model: 'X23'
    - regex: 'V1816[AT](?:[);/ ]|$)'
      model: 'X23'
    - regex: 'V18(38|29)[AT](?:[);/ ]|$)'
      model: 'X27'
    - regex: 'V1836[AT](?:[);/ ]|$)'
      model: 'X27 Pro'
    - regex: 'V1938CT(?:[);/ ]|$)'
      model: 'X30'
    - regex: 'V1938T(?:[);/ ]|$)'
      model: 'X30 Pro'
    - regex: 'V2001A(?:[);/ ]|$)'
      model: 'X50'
    - regex: 'V2005A(?:[);/ ]|$)'
      model: 'X50 Pro'
    - regex: '(?:V2011A|X50 Pro\+)(?:[);/ ]|$)'
      model: 'X50 Pro Plus'
    - regex: 'X9Plus(?:[);/ ]|$)'
      model: 'X9 Plus'
    - regex: 'vivo 1902(?:[);/ ]|$)'
      model: 'Y17'
    - regex: 'vivo 1915(?:[);/ ]|$)'
      model: 'Y19'
    - regex: 'V202[79](?:[);/ ]|$)'
      model: 'Y20'
    - regex: 'V2028(?:[);/ ]|$)'
      model: 'Y11s'
    - regex: 'V2043(?:[);/ ]|$)'
      model: 'Y20 (2021)'
    - regex: 'V2032(?:[);/ ]|$)'
      model: 'Y20i'
    - regex: 'V2023(?:[);/ ]|$)'
      model: 'V20 SE'
    - regex: 'V1901[AT](?:[);/ ]|$)'
      model: 'Y3'
    - regex: 'V1930A(?:[);/ ]|$)'
      model: 'Y3 Standard'
    - regex: 'V2036(?:[);/ ]|$)'
      model: 'Y31'
    - regex: 'V1934A(?:[);/ ]|$)'
      model: 'Y5s'
    - regex: 'V1965A(?:[);/ ]|$)'
      model: 'Y50'
    - regex: 'V2030(?:[);/ ]|$)'
      model: 'Y51'
    - regex: 'V2054A(?:[);/ ]|$)'
      model: 'Y31s'
    - regex: 'vivo 1606(?:[);/ ]|$)'
      model: 'Y53i'
    - regex: 'vivo 1603(?:[);/ ]|$)'
      model: 'Y55l'
    - regex: 'vivo 1610(?:[);/ ]|$)'
      model: 'Y55s'
    - regex: 'vivo 1719(?:[);/ ]|$)'
      model: 'Y65'
    - regex: 'vivo 1714(?:[);/ ]|$)'
      model: 'Y69'
    - regex: 'V2002A(?:[);/ ]|$)'
      model: 'Y70s'
    - regex: 'vivo 1724(?:[);/ ]|$)'
      model: 'Y71'
    - regex: 'vivo 1801(?:[);/ ]|$)'
      model: 'Y71i'
    - regex: 'V1731CA(?:[);/ ]|$)'
      model: 'Y73'
    - regex: 'V1913[AT](?:[);/ ]|$)'
      model: 'Y7s'
    - regex: 'vivo 180([38]|8i)(?:[);/ ]|$)'
      model: 'Y81'
    - regex: 'vivo 1812(?:[);/ ]|$)'
      model: 'Y81i'
    - regex: 'V1732[AT](?:[);/ ]|$)'
      model: 'Y81s'
    - regex: 'vivo 1726(?:[);/ ]|$)'
      model: 'Y83 Pro'
    - regex: 'V1730EA(?:[);/ ]|$)'
      model: 'Y89'
    - regex: 'vivo 181[17](?:[);/ ]|$)'
      model: 'Y91'
    - regex: 'V1945A(?:[);/ ]|$)'
      model: 'Y9s'
    - regex: 'V2026(?:[);/ ]|$)'
      model: 'Y12s'
    - regex: 'vivo 18(16|20)(?:[);/ ]|$)'
      model: 'Y91i'
    - regex: '(V1818[AT]|vivo 181[45])(?:[);/ ]|$)'
      model: 'Y93'
    - regex: 'V1818C[AT](?:[);/ ]|$)'
      model: 'Y93s'
    - regex: 'vivo 1807(?:[);/ ]|$)'
      model: 'Y95'
    - regex: 'V1813[AT](?:[);/ ]|$)'
      model: 'Y97'
    - regex: 'V1801A0(?:[);/ ]|$)'
      model: 'Z1'
    - regex: 'V1730D[AT](?:[);/ ]|$)'
      model: 'Z1i'
    - regex: 'vivo 1917(?:[);/ ]|$)'
      model: 'Z1x'
    - regex: 'V1813B[AT](?:[);/ ]|$)'
      model: 'Z3'
    - regex: 'V1730GA(?:[);/ ]|$)'
      model: 'Z3x'
    - regex: 'V1921A(?:[);/ ]|$)'
      model: 'Z5'
    - regex: 'V1911A(?:[);/ ]|$)'
      model: 'Z5x'
    - regex: 'V1990A(?:[);/ ]|$)'
      model: 'Z5x (2020)'
    - regex: 'V1963A(?:[);/ ]|$)'
      model: 'Z6'

    - regex: '(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build'
      model: '$1'
    - regex: '(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/]|$)'
      model: '$1'

# Vinsoc
Vinsoc:
  regex: '(XA Pro) Build'
  device: 'smartphone'
  model: '$1'

# Bird
Bird:
  regex: 'BIRD[\-. _]([^;/]+)'
  device: 'feature phone'
  models:
    - regex: 'BIRD[\-. _]([^;/]+) Build'
      model: '$1'
    - regex: 'BIRD[\-. _]([^;/]+)'
      model: '$1'

# Becker
Becker:
  regex: 'Becker-([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Beeline
Beeline:
  regex: 'Beeline'
  device: 'smartphone'
  models:
    - regex: 'Beeline[_ ]Pro[_ ]([2436])'
      model: 'Pro $1'
    - regex: 'Tab (Fast|Pro)'
      model: 'Tab $1'
      device: 'tablet'
    - regex: 'Tab ([0-9])'
      model: 'Tab $1'
      device: 'tablet'
    - regex: 'Tab'
      model: 'Tab'
      device: 'tablet'
    - regex: 'E700'
      model: 'E700'
    - regex: 'Smart2'
      model: 'Smart 2'
    - regex: 'Smart ([0-9])'
      model: 'Smart $1'
    - regex: 'Smart Dual'
      model: 'Smart Dual'
    - regex: '(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)'
      model: 'Fast 2'
    - regex: 'Fast(?:[);/ ]|$)'
      model: 'Fast'

# Beetel
Beetel:
  regex: 'Beetel ([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# BenQ-Siemens
BenQ-Siemens:
  regex: 'BENQ-SIEMENS - ([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# BenQ
BenQ:
  regex: 'BENQ(?:[ \-])?([a-z0-9]+)|F52_09(?:[);/ ]|$)'
  device: 'feature phone'
  models:
    - regex: 'F52_09(?:[);/ ]|$)'
      model: 'F52'
    - regex: 'BENQ(?:[ \-])?([a-z0-9]+)'
      model: '$1'

# Blaupunkt (blaupunkt.com)
Blaupunkt:
  regex: 'Blaupunkt|Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10\.G40[23])|SLplus02|Discovery[_ ](?:A10_302|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]803|BP_6010'
  device: 'tablet'
  models:
    - regex: 'Discovery[_ ]111C'
      model: 'Discovery 111C'
    - regex: 'Discovery[_ ]A10_302'
      model: 'Discovery A10.302'
    - regex: 'Discovery[_ ]1000C'
      model: 'Discovery 1000C'
    - regex: 'Discovery[_ ]1001A'
      model: 'Discovery 1001A'
    - regex: 'Discovery[_ ]1001'
      model: 'Discovery 1001'
    - regex: 'Soundphone S2'
      model: 'Soundphone S2'
    - regex: 'Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)'
      model: 'Endeavour $1'
    - regex: 'Polaris[_ ](803)'
      model: 'Polaris $1'
    - regex: 'Atlantis[_ ](1001A|1010A|A10\.G40[23])'
      model: 'Atlantis $1'
    - regex: 'SLplus02'
      model: 'SL Plus 02'
    - regex: '(BP_6010)'
      model: '$1'
    - regex: 'Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])'
      device: 'smartphone'
      model: '$1'
    - regex: '(4K Android TV)'
      device: 'tv'
      model: '$1'

# Bmobile
Bmobile:
  regex: 'Bmobile[_ ]|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'AX-?([1-9][0-9]{2,3}[eEO+]?)'
      model: 'AX$1'
    - regex: 'AX7OO'
      model: 'AX700'
    - regex: 'Bmobile[_ ]([^/;]+) Build'
      model: '$1'
    - regex: 'Bmobile[_ ]([a-z0-9]+)'
      model: '$1'

# bq
bq:
  regex: 'Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-'
  device: 'smartphone'
  models:
    - regex: 'BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)'
      model: 'Strike LTE'
    - regex: 'BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)'
      model: 'Strike Power Max'
    - regex: 'BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)'
      model: 'Strike Power Plus'
    - regex: 'BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)'
      model: 'Magic'
    - regex: 'BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)'
      model: 'Magic O'
    - regex: 'BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)'
      model: 'Magic C'
    - regex: 'BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)'
      model: 'Magic S'
    - regex: 'BQ(?:S|ru)?-5745L(?:[);/ ]|$)'
      model: 'Clever'
    - regex: 'BQ(?:S|ru)?-5533G(?:[);/ ]|$)'
      model: 'Fresh'
    - regex: 'BQ(?:S|ru)?-5031G(?:[);/ ]|$)'
      model: 'Fun'
    - regex: 'BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)'
      model: 'Aurora SE'
    - regex: 'BQ(?:S|ru)?-6430L(?:[);/ ]|$)'
      model: 'Aurora'
    - regex: 'BQ(?:S|ru)?-6630L(?:[);/ ]|$)'
      model: 'Magic L'
    - regex: 'BQ-9011[G]?(?:[);/ ]|$)'
      model: 'Vision'
      device: 'tablet'
    - regex: 'BQ-8068L(?:[);/ ]|$)'
      model: 'Hornet Plus Pro'
    - regex: 'BQ-8067L'
      model: 'Hornet Plus'
      device: 'tablet'
    - regex: 'BQ-8052G'
      model: 'BQ-8052G'
      device: 'tablet'
    - regex: 'BQ-8041L'
      model: 'Art'
      device: 'tablet'
    - regex: 'BQ-7084G'
      model: 'Simple'
      device: 'tablet'
    - regex: 'BQ-7061G'
      model: 'Andros'
      device: 'tablet'
    - regex: 'BQ(ru)?-(7082)'
      model: 'Armor'
      device: 'tablet'
    - regex: 'BQ-7051G'
      model: 'Elba'
      device: 'tablet'
    - regex: 'BQ-7036L'
      model: 'Hornet'
      device: 'tablet'
    - regex: 'BQ-7022(G)?'
      model: 'Canion'
      device: 'tablet'
    - regex: 'BQ-7021G'
      model: 'Hit'
      device: 'tablet'
    - regex: 'BQ-7010G'
      model: 'Max'
      device: 'tablet'
    - regex: 'BQ-7006G'
      model: 'Union'
      device: 'tablet'
    - regex: 'BQ-7003'
      model: 'Jamaica'
      device: 'tablet'
    - regex: 'BQ-6200L|BQ-6000L'
      model: 'Aurora'
    - regex: 'BQ-6631G'
      model: 'Surf'
    - regex: 'BQ-6022G'
      model: 'Aura'
    - regex: 'BQ(ru)?[ -]6015L'
      model: 'Universe'
    - regex: 'BQ(?:S|ru)?-(?:5525|6030G|6010G)'
      model: 'Practic'
    - regex: 'BQ-6001L|BQ-6050'
      model: 'Jumbo'
    - regex: 'BQ-5707G(?:[);/ ]|$)'
      model: 'Next Music'
    - regex: 'BQ-5702(?:[);/ ]|$)'
      model: 'Spring'
    - regex: 'BQ-5700L(?:[);/ ]|$)'
      model: 'Space X'
    - regex: 'BQ-(?:5591|551[89]G)(?:[);/ ]|$)'
      model: 'Jeans'
    - regex: 'BQ-5522'
      model: 'Next'
    - regex: 'BQ-5520L(?:[);/ ]|$)'
      model: 'Silk'
    - regex: 'BQ-5519L(?:[);/ ]|$)'
      model: 'Fast Plus'
    - regex: 'BQ-5540L(?:[);/ ]|$)'
      model: 'Fast Pro'
    - regex: 'BQ-5517L(?:[);/ ]|$)'
      model: 'Twin Pro'
    - regex: 'BQ-5516L(?:[);/ ]|$)'
      model: 'Twin'
    - regex: 'BQS-5515(?:[);/ ]|$)'
      model: 'Wide'
    - regex: 'BQ-5515[L]?(?:[);/ ]|$)'
      model: 'Fast'
    - regex: 'BQ-(?:5512L|5528L)(?:[);/ ]|$)'
      model: 'Strike Forward'
    - regex: 'BQ-5511L(?:[);/ ]|$)'
      model: 'Bliss'
    - regex: 'BQS[_ ]5505(?:[);/ ]|$)'
      model: 'Amsterdam'
    - regex: 'BQ(?:ru)?-5510(?:[);/ ]|$)'
      model: 'Strike Power Max 4G'
    - regex: 'BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)'
      model: 'Strike Power Max'
    - regex: 'BQ-5508L(?:[);/ ]|$)'
      model: 'Next LTE'
    - regex: 'BQ-5507L(?:[);/ ]|$)'
      model: 'Iron Max'
    - regex: 'BQ(?:ru)?-5504(?:[);/ ]|$)'
      model: 'Strike Selfie Max'
    - regex: 'BQ(?:ru)?-5503(?:[);/ ]|$)'
      model: 'Nice 2'
    - regex: 'BQ(?:ru)?-6045L(?:[);/ ]|$)'
      model: 'Nice'
    - regex: 'BQ(?:ru)?-4030G(?:[);/ ]|$)'
      model: 'Nice Mini'
    - regex: 'BQS-5502(?:[);/ ]|$)'
      model: 'Hammer'
    - regex: 'BQS-5501(?:[);/ ]|$)'
      model: 'Kawasaki'
    - regex: 'BQS-5500(?:[);/ ]|$)'
      model: 'Vancouver'
    - regex: 'BQ-5500L(?:[);/ ]|$)'
      model: 'Advance'
    - regex: 'BQ-5302G(?:[);/ ]|$)'
      model: 'Velvet 2'
    - regex: 'BQ-5301(?:[);/ ]|$)'
      model: 'Strike View'
    - regex: 'BQ-5300G(?:[);/ ]|$)'
      model: 'Velvet View'
    - regex: 'BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)'
      model: 'Strike'
    - regex: 'BQ-5206L(?:[);/ ]|$)'
      model: 'Balance'
    - regex: 'BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)'
      model: 'Strike Selfie'
    - regex: 'BQ(?:ru)?-5203(?:[);/ ]|$)'
      model: 'Vision'
    - regex: 'BQ(?:ru)?-5202(?:[);/ ]|$)'
      model: 'Space Lite'
    - regex: 'BQ(?:ru)?-5201(?:[);/ ]|$)'
      model: 'Space'
    - regex: 'BQ-5082(?:[);/ ]|$)'
      model: 'Sense 2'
    - regex: 'BQ-5045L(?:[);/ ]|$)'
      model: 'Wallet'
    - regex: 'BQ-5047L(?:[);/ ]|$)'
      model: 'Like'
    - regex: 'BQ-5071(?:[);/ ]|$)'
      model: 'Belief'
    - regex: 'BQ[S]?-(?:5065|5340)(?:[);/ ]|$)'
      model: 'Choice'
    - regex: 'BQ(?:S|ru)?-5046L(?:[);/ ]|$)'
      model: 'Choice LTE'
    - regex: 'BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)'
      model: 'Strike Power'
    - regex: '(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)'
      model: 'Strike Power Easy'
    - regex: 'BQ(?:ru)?-5057(?:[);/ ]|$)'
      model: 'Strike 2'
    - regex: 'BQ[S]?-(?:5056|5030)(?:[);/ ]|$)'
      model: 'Fresh'
    - regex: 'BQ-6042l(?:[);/ ]|$)'
      model: 'Magic E'
    - regex: 'BQS-5055(?:[);/ ]|$)'
      model: 'Turbo Plus'
    - regex: 'BQ(?:ru)?-5054(?:[);/ ]|$)'
      model: 'Crystal'
    - regex: 'BQ-5052(?:[);/ ]|$)'
      model: 'Sense'
    - regex: 'BQ[S]?-5045(?:[);/ ]|$)'
      model: 'Fast'
    - regex: 'BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)'
      model: 'Strike Power 4G'
    - regex: 'BQ(?:ru)?-5035(?:[);/ ]|$)'
      model: 'Velvet'
    - regex: 'BQ(?:ru)?-5033(?:[);/ ]|$)'
      model: 'Shark'
    - regex: 'BQ-5541L(?:[);/ ]|$)'
      model: 'Shark Rush'
    - regex: 'BQ-5032(?:[);/ ]|$)'
      model: 'Element'
    - regex: 'BQS-5025(?:[);/ ]|$)'
      model: 'High Way'
    - regex: 'BQ(?:ru)?-5022(?:[);/ ]|$)'
      model: 'Bond'
    - regex: 'BQ-5015L(?:[);/ ]|$)'
      model: 'First'
    - regex: 'BQ-5016G(?:[);/ ]|$)'
      model: 'Choice'
    - regex: 'BQ-5012L(?:[);/ ]|$)'
      model: 'Rich'
    - regex: 'BQ-5521L(?:[);/ ]|$)'
      model: 'Rich Max'
    - regex: 'BQS-5011(?:[);/ ]|$)'
      model: 'Monte Carlo'
    - regex: 'BQ-5010G(?:[);/ ]|$)'
      model: 'Spot'
    - regex: 'BQ-5000G(?:[);/ ]|$)'
      model: 'Velvet Easy'
    - regex: 'BQS-5010(?:[);/ ]|$)'
      model: 'Prague'
    - regex: 'BQ-5009L(?:[);/ ]|$)'
      model: 'Trend'
    - regex: 'BQS-500[59](?:[);/ ]|$)'
      model: 'Sydney'
    - regex: 'BQ-5008L(?:[);/ ]|$)'
      model: 'Brave'
    - regex: 'BQ-5007L(?:[);/ ]|$)'
      model: 'Iron'
    - regex: 'BQS-5006(?:[);/ ]|$)'
      model: 'Los Angeles'
    - regex: 'BQ-(?:5005L|5530L)(?:[);/ ]|$)'
      model: 'Intense'
    - regex: 'BQS-5004(?:[);/ ]|$)'
      model: 'Paris'
    - regex: 'BQ-5003L(?:[);/ ]|$)'
      model: 'Shark Pro'
    - regex: 'BQ-5002G(?:[);/ ]|$)'
      model: 'Fun'
    - regex: 'BQS-5002(?:[);/ ]|$)'
      model: 'Colombo'
    - regex: 'BQS-5003(?:[);/ ]|$)'
      model: 'Colombo II'
    - regex: 'BQ-5001L(?:[);/ ]|$)'
      model: 'Contact'
    - regex: 'BQS-5001(?:[);/ ]|$)'
      model: 'Milan'
    - regex: 'BQ(?:ru|S)?-5000(?:[);/ ]|$)'
      model: 'Tokyo'
    - regex: 'BQS-4800(?:[);/ ]|$)'
      model: 'Blade'
    - regex: 'BQS-4707(?:[);/ ]|$)'
      model: 'Montreal'
    - regex: 'BQS-4702(?:[);/ ]|$)'
      model: 'Оsaka'
    - regex: 'BQS-4701(?:[);/ ]|$)'
      model: 'Venice'
    - regex: 'BQ-(?:4585|5011G)(?:[);/ ]|$)'
      model: 'Fox View'
    - regex: 'BQ(?:ru)?-4583(?:[);/ ]|$)'
      model: 'Fox Power'
    - regex: 'BQS-4570(?:[);/ ]|$)'
      model: 'Drive'
    - regex: 'BQS-4560(?:[);/ ]|$)'
      model: 'Golf'
    - regex: 'BQS-4555(?:[);/ ]|$)'
      model: 'Turbo'
    - regex: 'BQS-4550(?:[);/ ]|$)'
      model: 'Richmond'
    - regex: 'BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)'
      model: 'Fox'
    - regex: 'BQS-4525(?:[);/ ]|$)'
      model: 'Vienna'
    - regex: 'BQS-4516(?:[);/ ]|$)'
      model: 'Singapore'
    - regex: 'BQS-4515(?:[);/ ]|$)'
      model: 'Moscow'
    - regex: 'BQS-4510(?:[);/ ]|$)'
      model: 'Florence'
    - regex: 'BQS-4505(?:[);/ ]|$)'
      model: 'Santiago'
    - regex: 'BQS-4503(?:[);/ ]|$)'
      model: 'Dubai'
    - regex: 'BQS-4502(?:[);/ ]|$)'
      model: 'Kingston'
    - regex: 'BQS-4501 Bristol'
      model: 'Bristol'
    - regex: 'BQ-4501G(?:[);/ ]|$)'
      model: 'Fox Easy'
    - regex: 'BQ(?:ru)?-4500(?:[);/ ]|$)'
      model: 'Fox LTE'
    - regex: 'BQ-4077(?:[);/ ]|$)'
      model: 'Shark Mini'
    - regex: 'BQ(?:ru)?-4072(?:[);/ ]|$)'
      model: 'Strike Mini'
    - regex: 'BQ(?:ru)?[- ]402[68](?:[);/ ]|$)'
      model: 'Up!'
    - regex: 'BQS-4010(?:[);/ ]|$)'
      model: 'Aspen'
    - regex: 'BQS-4009(?:[);/ ]|$)'
      model: 'Orleans'
    - regex: 'BQS-4008(?:[);/ ]|$)'
      model: 'Shanghai'
    - regex: 'BQS-4007(?:[);/ ]|$)'
      model: 'Valencia'
    - regex: 'BQS-4005(?:[);/ ]|$)'
      model: 'Seoul'
    - regex: 'BQS-4004(?:[);/ ]|$)'
      model: 'Dusseldorf'
    - regex: 'BQS-4003(?:[);/ ]|$)'
      model: 'Verona'
    - regex: 'BQ-4001G(?:[);/ ]|$)'
      model: 'Cool'
    - regex: 'BQS-4001(?:[);/ ]|$)'
      model: 'Oxford'
    - regex: 'BQS-3510(?:[);/ ]|$)'
      model: 'Aspen Mini'
    - regex: 'BQS-3503(?:[);/ ]|$)'
      model: 'Bombay'
    - regex: 'BQ-1085L(?:[);/ ]|$)'
      model: 'Hornet Max Pro'
      device: 'tablet'
    - regex: 'BQ-1084L(?:[);/ ]|$)'
      model: 'Hornet Max'
      device: 'tablet'
    - regex: 'BQ-1083G(?:[);/ ]|$)'
      model: 'Armor Pro Plus'
      device: 'tablet'
    - regex: 'BQ-1082G(?:[);/ ]|$)'
      model: 'Armor Pro'
      device: 'tablet'
    - regex: 'BQ-1077L(?:[);/ ]|$)'
      model: 'Armor Pro LTE'
      device: 'tablet'
    - regex: 'BQ(?:ru)?-1057L(?:[);/ ]|$)'
      model: 'Passion'
      device: 'tablet'
    - regex: 'BQ-1051G(?:[);/ ]|$)'
      model: 'Corsika'
      device: 'tablet'
    - regex: 'BQ-1050G(?:[);/ ]|$)'
      model: 'Hawaii'
      device: 'tablet'
    - regex: 'BQ[-]?1008G(?:[);/ ]|$)'
      model: 'Grace'
      device: 'tablet'
    - regex: 'Aquaris M8'
      model: 'Aquaris M8'
      device: 'tablet'
    - regex: 'Aquaris_([AM])4.5'
      model: 'Aquaris $14.5'
    - regex: 'BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)'
      model: 'Spring'
    - regex: 'BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)'
      model: 'Mercury'
    - regex: 'BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)'
      model: 'Slim'
    - regex: '(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)'
      model: '$1'
      device: 'tablet'
    - regex: 'BQ-8006G(?:[);/ ]|$)'
      model: 'Java'
      device: 'tablet'
    - regex: 'BQ-7062G(?:[);/ ]|$)'
      model: 'Fiji'
      device: 'tablet'
    - regex: 'BQ(?:ru)?-1081G(?:[);/ ]|$)'
      model: 'Grace 3G'
      device: 'tablet'
    - regex: 'BQ-7802G(?:[);/ ]|$)'
      model: 'Luzon'
      device: 'tablet'
    - regex: 'BQ-7008G(?:[);/ ]|$)'
      model: 'Clarion'
      device: 'tablet'
    - regex: 'BQ-7064G(?:[);/ ]|$)'
      model: 'Fusion'
      device: 'tablet'
    - regex: 'BQ-7050G(?:[);/ ]|$)'
      model: 'Malta'
      device: 'tablet'
    - regex: 'BQ-7000G(?:[);/ ]|$)'
      model: 'Сharm'
      device: 'tablet'
    - regex: 'BQ-7040G(?:[);/ ]|$)'
      model: 'Сharm Plus'
      device: 'tablet'
    - regex: 'BQ-7038G(?:[);/ ]|$)'
      model: 'Light Plus'
      device: 'tablet'
    - regex: 'BQ-7005G(?:[);/ ]|$)'
      model: 'Maui'
      device: 'tablet'
    - regex: 'BQ-7098G(?:[);/ ]|$)'
      model: 'Armor Power'
      device: 'tablet'
    - regex: 'BQ-1007(?:[);/ ]|$)'
      model: 'Necker'
      device: 'tablet'
    - regex: 'BQ-1045[G]?(?:[);/ ]|$)'
      model: 'Orion'
      device: 'tablet'
    - regex: 'BQ-(?:1054L|1020L)(?:[);/ ]|$)'
      model: 'Nexion'
      device: 'tablet'
    - regex: 'BQ-7083G(?:[);/ ]|$)'
      model: 'Light'
      device: 'tablet'
    - regex: 'BQ-8077L(?:[);/ ]|$)'
      model: 'Exion Plus'
      device: 'tablet'
    - regex: 'BQ(?:ru)?-7083(?:[);/ ]|$)'
      model: '7083'
      device: 'tablet'
    - regex: 'BQ(?:ru)?-1056L(?:[);/ ]|$)'
      model: '1056L'
      device: 'tablet'
    - regex: 'BQ(?:ru)?-1022l(?:[);/ ]|$)'
      model: 'Armor Pro LTE+'
      device: 'tablet'
    - regex: 'BQ(?:ru)?-1024L(?:[);/ ]|$)'
      model: 'Exion Pro'
      device: 'tablet'
    - regex: 'BQ(?:ru)?-7081(?:[);/ ]|$)'
      model: 'Charm'
      device: 'tablet'
    - regex: '(?:bq )?(Aquaris[^/;]*) Build'
      model: '$1'
    - regex: 'Aquaris (E(4.5|[56])|M(5|10)|U2 Lite|U2|U (Lite|Plus)|V Plus|X5 Plus|X2? Pro|X[25]|[CMUVX])'
      model: 'Aquaris $1'
    - regex: 'bq ([^/;]+) Build'
      model: '$1'
      device: 'tablet'

# Bush
Bush:
  regex: 'Bush[ _-]|Bush10Nou'
  device: 'smartphone'
  models:
    - regex: 'Bush10Nou'
      device: 'tablet'
      model: '10Nou'
    - regex: 'BUSH ([^;/)]+)Tablet(?: Build|[);])'
      model: '$1Tablet'
      device: 'tablet'
    - regex: 'BUSH ([^;/)]+)(?: Build|[);])'
      model: '$1'

# CAGI
CAGI:
  regex: 'CAGI-'
  device: 'smartphone'
  models:
    - regex: 'CAGI-OMEGA'
      model: 'Omega'
    - regex: 'CAGI-([a-z0-9_\-]+)'
      model: '$1'

# Capitel
Capitel:
  regex: 'Capitel-([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Captiva
Captiva:
  regex: 'Captiva[ _-]([^;/)]+)(?: Build|\))'
  device: 'tablet'
  model: 'Pad $1'

# Casio
Casio:
  regex: '(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'C751(?:[);/ ]|$)'
      model: "G'zOne Ravine"
    - regex: 'C771(?:[);/ ]|$)'
      model: "G'zOne Commando"
    - regex: 'C811 4G(?:[);/ ]|$)'
      model: "G'zOne Commando 4G LTE"

# Casper
Casper:
  regex: 'CASPER[_ ]|VIA[- _](T7D|A[34]|E3|F[123]|G4|M4|[LS]8|S7|P2|V8C|A1_Plus(?:_64)?|A1(?:_1)?|S[13]0|S|T17_M|T1[07]|T7|T7-3G|T8B|T8D-3G|S1[78])(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(?:CASPER[_ ])?VIA_A1_Plus(?:_64)?'
      model: 'VIA A1 Plus'
    - regex: '(?:CASPER[_ ])?VIA[_ ](G1_Plus|G1|E1|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|P2|S|V8C|A1(?:_1)?)(?:[);/ ]|$)'
      model: 'VIA $1'
    - regex: 'CASPER_VIA_E1c'
      model: 'VIA E1C'
    - regex: 'CASPER_L10_4.5G'
      model: 'L10 4.5G'
      device: 'tablet'
    - regex: 'CASPER_(S[23]8)(?:[);/ ]|$)'
      model: '$1'
      device: 'tablet'
    - regex: 'VIA[- _](T7|T8D)-3G'
      model: 'VIA $1 3G'
      device: 'tablet'
    - regex: 'VIA[- _](T7D|S[13]0|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78])(?:[);/ ]|$)'
      model: 'VIA $1'
      device: 'tablet'

# Cat (Caterpillar, Catphones)
Cat:
  regex: 'Cat ?(tablet|stargate|nova)|B15Q|CAT B35|CAT-B100'
  device: 'tablet'
  models:
    - regex: 'B15Q'
      model: 'B15Q'
      device: 'smartphone'
    - regex: 'CAT B35'
      model: 'B35'
      device: 'smartphone'
    - regex: 'Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build'
      model: '$1'
    - regex: 'Cat ?tablet'
      model: 'Nova'

    - regex: 'CAT-(B100)'
      device: 'feature phone'
      model: '$1'

# Carrefour
Carrefour:
  regex: 'CT(?:10[0123]0|7[12]0|820)(?:W|FR)?(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'CT820'
      model: 'Touch Tablet Neo2'
    - regex: 'CT(10[0123]0(?:W|FR)?)'
      model: 'CT$1'
    - regex: 'CT(7[12]0(?:W|FR)?)'
      model: 'CT$1'

# Celkon
Celkon:
  regex: 'Celkon|Millennia Hero'
  device: 'smartphone'
  models:
    - regex: 'Celkon[ _*](C[78]20)'
      model: '$1'
      device: 'tablet'
    - regex: 'Millennia Hero'
      model: 'Millennia Hero'
    - regex: 'Celkon[ _*](CT[^;/]+) Build'
      model: '$1'
      device: 'tablet'
    - regex: 'Celkon[ _*]([^;/]+) Build'
      model: '$1'
    - regex: 'Celkon[\. _*]([^;/\)]+)[\)/]'
      model: '$1'

# Changhong
Changhong:
  regex: 'Changhong'
  device: 'smartphone'
  models:
    - regex: 'Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18)(?:[);/ ]|$)'
      model: '$1'

    - regex: 'ChangHong Android TV'
      device: 'tv'
      model: ''
    - regex: '(?:Opera TV.+)Changhong-([^);/]+)'
      device: 'tv'
      model: '$1'

# Cherry Mobile (cherrymobile.com)
'Cherry Mobile':
  regex: 'Cherry|Superion S1 DTV|Flare([ _])?(2X|4|A[123]|J[123568]|P[13]|S[4-8]|X2|Y[367]|S Play|HD|LITE|XL|X_V2|Y3s|Tab)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][43][Cs]?|HD [45]|HD_Duo)|Spin Max 2|Selfie_Two'
  device: 'smartphone'
  models:
    - regex: '(Flare2X)'
      model: '$1'
    - regex: 'Flare[_ ]HD[_ ]([345])'
      model: 'Flare HD $1'
    - regex: 'Flare_HD_MAX'
      model: 'Flare HD Max'
    - regex: 'FLARE LITE'
      model: 'Flare Lite'
    - regex: 'Flare S Play'
      model: 'Flare S Play'
    - regex: 'Flare[_ ]J([26])S'
      model: 'Flare J$1s'
    - regex: 'Flare_(J2|S7)_Prime'
      model: 'Flare $1 Prime'
    - regex: 'Flare_S7_Deluxe'
      model: 'Flare S7 Deluxe'
    - regex: 'Flare_S7_Power'
      model: 'Flare S7 Power'
    - regex: 'Flare[_ ]Y([367])[_ ]Pro'
      model: 'Flare Y$1 Pro'
    - regex: 'Flare XL Plus'
      model: 'Flare XL Plus'
    - regex: 'Flare[ _]X[_ ]V2'
      model: 'Flare X V2'
    - regex: 'Flare[ _](A2|J3|P1|S[467])[ _]Lite'
      model: 'Flare $1 Lite'
    - regex: 'Flare[ _](J[12]|S[57]|Y3|J6)[ _]mini'
      model: 'Flare $1 Mini'
    - regex: 'Flare_J2_2018'
      model: 'Flare J2 (2018)'
    - regex: 'Flare S4 Max LTE'
      model: 'Flare S4 Max LTE'
    - regex: 'Flare[_ ](S[47]|J2)[_ ]Max'
      model: 'Flare $1 Max'
    - regex: 'FlareS5LiteDTV'
      model: 'Flare S5 Lite DTV'
    - regex: 'Flare[_ ](S[567]|J6)[_ ]Plus'
      model: 'Flare $1 Plus'
    - regex: 'FLARE S6 POWER'
      model: 'Flare S6 Power'
    - regex: 'Flare(?:[ _])?(4|A[123]|J8 LTE|J[13568]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[673])'
      model: 'Flare $1'
    - regex: 'OMEGA HD ([45])'
      model: 'Omega HD $1'
    - regex: 'Omega_HD_Duo'
      model: 'Omega HD Duo'
    - regex: 'Omega Icon Lite 2'
      model: 'Omega Icon Lite 2'
    - regex: 'Omega Icon 2'
      model: 'Omega Icon 2'
    - regex: 'Omega[_ ]Lite[_ ](3[Cs]|4)'
      model: 'Omega Lite $1'
    - regex: 'Spin Max 2'
      model: 'Spin Max 2'
    - regex: 'Selfie_Two'
      model: 'Selfie Two'
    - regex: '(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion S1 DTV)'
      model: '$1'
      device: 'tablet'

    - regex: 'Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])'
      model: '$1'

# China Mobile
'China Mobile':
  regex: '(M812C|1501_M02|9930i|A1303|A309W|M651CY) Build'
  device: 'smartphone'
  models:
    - regex: 'M651CY'
      model: 'A3'
    - regex: '(M812C|1501_M02|9930i|A1303|A309W)'
      model: '$1'

# Comio
Comio:
  regex: 'Comio|CT701G PLUS|CT701W|GT100'
  device: 'smartphone'
  models:
    - regex: 'GT100'
      model: 'GT100'
      device: 'tablet'
    - regex: 'CT701W'
      model: 'CT701W'
      device: 'tablet'
    - regex: 'CT701G PLUS'
      model: 'CT701G Plus'
      device: 'tablet'

    - regex: 'Comio[ _-]?([^;/)]+)(?: Build|[);])'
      model: '$1'

# Compal
Compal:
  regex: 'Compal-[a-z0-9]+'
  device: 'feature phone'
  model: '$1'

# Artel
Artel:
  regex: 'Artel[_ ]|\w+_ARTEL_\w+|GAP YOQ(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'GAP YOQ(?:[);/ ]|$)'
      model: 'Gap Yo Q'
    - regex: 'Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10)'
      model: '$1'
    - regex: 'Artel[_ ]Komi3'
      model: 'Komi 3'
    - regex: 'Artel[_ ](Star|Nova|Connect|Choice|Style)'
      model: '$1'
      device: 'tablet'

    - regex: '(?:\w+_)?ARTEL_([FVM]5|X[45])_\w+'
      device: 'feature phone'
      model: '$1'

# ComTrade Tesla
ComTrade Tesla:
  regex: 'Tesla|Impulse 7.85 3G|Impulse 10.1 OCTA|Smartphone_6.1|SP(?:6.2|6.2_Lite)|TTL(?:713G|8)'
  device: 'smartphone'
  models:
    - regex: 'TeslaEvo5.0'
      model: 'Evo 5.0'
    - regex: '(Gravity 9.7 SHD)'
      model: '$1'
      device: 'tablet'
    - regex: '(Impulse 7.85 3G)'
      model: '$1'
      device: 'tablet'
    - regex: 'Impulse 10.1 OCTA'
      model: 'Impulse 10.1" OCTA'
      device: 'tablet'
    - regex: 'Tesla_SP([^/;]+)L Build'
      model: 'Smartphone $1 Lite'
    - regex: 'Smartphone_6.1'
      model: 'Smartphone 6.1'
    - regex: 'SP6.2_Lite'
      model: 'Smartphone 6.2 Lite'
    - regex: 'Tesla_SP([^/;]+) Build'
      model: 'Smartphone $1'
    - regex: 'SP([^/;]+) Build'
      model: 'Smartphone $1'
    - regex: 'Smartphone ([36])'
      model: 'Smartphone $1'
    - regex: 'Tesla_Tablet_785'
      model: '7.85"'
      device: 'tablet'
    - regex: 'TTH7'
      model: 'H7'
      device: 'tablet'
    - regex: 'TTL7 Build'
      model: 'L7'
      device: 'tablet'
    - regex: 'Tesla_Tablet_L7_3G'
      model: 'L7 3G'
      device: 'tablet'
    - regex: '(L7.1)'
      model: '$1'
      device: 'tablet'
    - regex: 'TTL713G'
      model: 'L7.1 3G'
      device: 'tablet'
    - regex: '(L7 Quad) Build'
      model: '$1'
      device: 'tablet'
    - regex: '(L7 Quad Lite)'
      model: '$1'
      device: 'tablet'
    - regex: 'TTL8 Build'
      model: 'L8'
      device: 'tablet'
    - regex: '(L8.1)'
      model: '$1'
      device: 'tablet'
    - regex: 'TESLA_TABLET_M7'
      model: 'M7'
      device: 'tablet'
    - regex: 'Tesla_Tablet_M8'
      model: 'M8'
      device: 'tablet'

# ConCorde
ConCorde:
  regex: 'ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Concorde_(Raptor_Z55)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'ConCorde Tab ?([^/;]+) Build'
      model: 'Tab $1'
      device: 'tablet'
    - regex: 'ConCorde ReadMan ?([^/;]+) Build'
      model: 'ReadMan $1'
      device: 'tablet'
    - regex: 'ConCorde ([^/;]+) Build'
      model: '$1'

# Condor (www.condor.dz)
Condor:
  regex: 'Allure (?:M[13]|X)|Griffe T[2356789]|TFX712G|TRA-901G|TGW[-]?(710G|709)|(?:PGN\-?[456][012][0-9]|PHS\-601|PHQ519|PHQ52[056]|TB105L|TB717G|PKT\-301|Plume (?:H1|L[1-468]|P8|P6 PRO LTE))(?:[);/ ]|$)|CTAB[^/;]+ Build'
  device: 'smartphone'
  models:
    - regex: 'CTAB([^/;]+) Build'
      device: 'tablet'
      model: 'CTAB $1'
    - regex: '(TGW)-?(710G|709)(?:[);/ ]|$)'
      device: 'tablet'
      model: '$1 $2'
    - regex: '(TFX712G|TB105L|TB717G)(?:[);/ ]|$)'
      device: 'tablet'
      model: '$1'
    - regex: '(TRA)-(901G)(?:[);/ ]|$)'
      device: 'tablet'
      model: '$1 $2'

    - regex: 'PHS\-601'
      model: 'C8'
    - regex: 'PGN\-?403'
      model: 'C4+ Noir'
    - regex: 'PGN\-?404'
      model: 'C7 Mini'
    - regex: 'PGN\-?409'
      model: 'Plume P4'
    - regex: 'PKT\-?301'
      model: 'C2'
    - regex: 'PGN\-?504'
      model: 'C5'
    - regex: 'PGN\-?505'
      model: 'C8S'
    - regex: 'PGN\-?506'
      model: 'C7'
    - regex: '(Allure (?:M[13]|X))'
      model: '$1'
    - regex: 'PGN\-?507'
      model: 'Allure A9'
    - regex: 'PGN\-?508'
      model: 'C6+'
    - regex: 'PGN\-?509'
      model: 'C6 Pro'
    - regex: 'PGN\-?511'
      model: 'Allure A9 Plus'
    - regex: 'PGN\-?513'
      model: 'Griffe G4'
    - regex: 'PHQ519'
      model: 'Griffe G4S'
    - regex: 'PHQ520'
      model: 'Griffe G5'
    - regex: 'PHQ525'
      model: 'Griffe G6'
    - regex: 'PHQ526'
      model: 'Griffe G6 Pro'
    - regex: 'PGN\-?514'
      model: 'Plume P7'
    - regex: 'PGN\-?515'
      model: 'Plume P4 Pro'
    - regex: 'PGN\-?516'
      model: 'Plume P5'
    - regex: 'PGN\-?51[78]'
      model: 'Plume P6'
    - regex: 'PGN\-?521'
      model: 'Griffe G4 Plus'
    - regex: 'Griffe T3 ?pro'
      model: 'Griffe T3 Pro'
    - regex: 'Griffe T([0-9]) Plus'
      model: 'Griffe T$1 Plus'
    - regex: 'Griffe T([0-9])'
      model: 'Griffe T$1'
    - regex: 'PGN\-?522'
      model: 'P6 Plus'
    - regex: 'PGN\-?523'
      model: 'P7 Plus'
    - regex: 'PGN\-?527'
      model: 'Plume P4 Plus'
    - regex: 'PGN\-?528|PLUME P6 PRO LTE'
      model: 'Plume P6 Pro LTE'
    - regex: 'PGN\-?605'
      model: 'Plume P8'
    - regex: 'PGN\-?606'
      model: 'Allure A55'
    - regex: 'PGN\-?607'
      model: 'Allure A100'
    - regex: 'PGN\-?608'
      model: 'Allure A55 Slim'
    - regex: 'PGN\-?609'
      model: 'Allure A100 Lite'
    - regex: 'PGN\-?610'
      model: 'Plume P8 Lite'
    - regex: 'PGN\-?611'
      model: 'Allure A8'
    - regex: 'PGN\-?612'
      model: 'Allure A8 Plus'
    - regex: 'PGN\-?613'
      model: 'Allure A55 Plus'
    - regex: 'Plume H1'
      model: 'Plume H1'
    - regex: 'Plume L([2468]) Pro'
      model: 'Plume L$1 Pro'
    - regex: 'Plume L3 Plus'
      model: 'Plume L3 Plus'
    - regex: 'Plume L3 Smart'
      model: 'Plume L3 Smart'
    - regex: 'Plume L([1-4])'
      model: 'Plume L$1'
    - regex: 'Plume P8 Pro'
      model: 'Plume P8 Pro'

    - regex: 'PGN\-?([0-9]{3})'
      model: 'PGN-$1'

# Coolpad
Coolpad:
  regex: '(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|CP8298_I00|CP3648A|CP8676_I0[23]|REVVLPLUS C3701A|VCR-[AI]0|C105-E0|C106-[79]| C106|MTS-T0|cp3705A[S]?|ORL-C0|DLS-E0|8298-M02|5560S)(?:[);/ ]|$)|(8295|5860S) Build'
  device: 'smartphone'
  models:
    - regex: 'VCR-[AI]0'
      model: 'Cool Play 6'
    - regex: '1831-A0(?:[);/ ]|$)'
      model: 'Cool Play C7'
    - regex: 'REVVLPLUS C3701A'
      model: 'REVVL Plus'
      device: 'phablet'
    - regex: '8190Q(?:[);/ ]|$)'
      model: '8190Q'
    - regex: 'DLS-E0(?:[);/ ]|$)'
      model: 'N5'
    - regex: '1824-S0(?:[);/ ]|$)'
      model: 'N5C'
    - regex: 'CP3705A[S]?(?:[);/ ]|$)'
      model: 'Legacy'
    - regex: 'CP3648A(?:[);/ ]|$)'
      model: 'Legacy S'
    - regex: 'MTS-T0(?:[);/ ]|$)'
      model: 'N2M'
    - regex: 'C106-[79](?:[);/ ]|$)'
      model: 'Cool 1'
    - regex: 'C105-E0(?:[);/ ]|$)'
      model: 'Cool S1'
    - regex: 'ORL-C0(?:[);/ ]|$)'
      model: 'Cool 9'
    - regex: 'Cool_9S(?:[);/ ]|$)'
      model: 'Cool 9S'
    - regex: '5560S(?:[);/ ]|$)'
      model: 'Arise'
    - regex: '(5860S|8295) Build'
      model: '$1'
    - regex: 'CP8676_I02(?:[);/ ]|$)'
      model: 'Note 3'
    - regex: 'CP8676_I03(?:[);/ ]|$)'
      model: 'Note 3 Plus'
    - regex: 'CP8298_I00(?:[);/ ]|$)'
      model: 'Note 3 Lite'
    - regex: '(8676-[AM]01|8298-M02)(?:[);/ ]|$)'
      model: '$1'
    - regex: '(?:YL-)?Coolpad[ _\-]?([^/;]+) Build'
      model: '$1'
    - regex: '(?:YL-)?Coolpad[ _\-]?([a-z0-9\-]+)'
      model: '$1'

# Clarmin (clarmin.com)
Clarmin:
  regex: 'Clarmin'
  device: 'smartphone'
  models:
    - regex: 'Clarmin[_ ](B[65]|C1)'
      model: '$1'

# CORN (corn-mobile.com)
CORN:
  regex: 'CORN '
  device: 'smartphone'
  models:
    - regex: 'CORN R20'
      model: 'R20'

# Cosmote (https://www.telekom.ro/)
Cosmote:
  regex: 'Cosmote'
  device: 'smartphone'
  models:
    - regex: 'Cosmote_My_mini_Tab' # Allview My Mini Tab
      device: 'tablet'
      model: 'My Mini Tab'

# Cricket
Cricket:
  regex: 'Cricket-([a-z0-9]+)|U705AC(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'U705AC'
      model: 'Ovation'
    - regex: 'Cricket-([a-z0-9]+)'
      device: 'feature phone'
      model: '$1'

# Crius
'Crius Mea':
  regex: '(Q7A\+?)(?:[);/ ]|$)'
  device: 'tablet'
  model: '$1'

# Crosscall
Crosscall:
  regex: 'Crosscall|ODYSSEY_Plus|Odyssey S1|Trekker-[MSX][1234]|Action-X3|Core-X3'
  device: 'smartphone'
  models:
    - regex: 'Action-X3'
      model: 'Action-X3'
    - regex: 'Core-X3'
      model: 'Core-X3'
    - regex: 'Crosscall ([^;/]+) Build'
      model: '$1'
    - regex: 'ODYSSEY_Plus'
      model: 'ODYSSEY+'
    - regex: 'Odyssey S1'
      model: 'ODYSSEY S1'
    - regex: 'Trekker-([MSX][1234](?: Core)?)'
      model: 'Trekker-$1'

# AllDocube (alldocube.com)
AllDocube:
  regex: '(?:T1001XS?|T1006S?|iPlay_[24]0|U1006H?)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'T1001XS(?:[);/ ]|$)'
      model: 'M5XS'
    - regex: 'T1006S(?:[);/ ]|$)'
      model: 'M5S'
    - regex: 'T1006(?:[);/ ]|$)'
      model: 'M5'
    - regex: 'T1001X(?:[);/ ]|$)'
      model: 'M5X'
    - regex: 'U1006H?(?:[);/ ]|$)'
      model: 'iPlay 10 Pro 10.1"'
    - regex: 'iPlay_([24]0)(?:[);/ ]|$)'
      model: 'iPlay $1'

# Cube (short name Alldocube)
Cube:
  regex: '(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i1002S|Iwork10 Flagship|iwork10 Pro)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'U27GT'
      model: 'Talk 8'
    - regex: '(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)'
      model: 'T8 Ultimate'
    - regex: 'U55GT'
      model: 'Talk 79'
    - regex: 'U65GT'
      model: 'Talk 9X'
    - regex: 'I1-TF[BD]?(?:[);/ ]|$)'
      model: 'iWork 8 Air'
    - regex: 'I1-TC(?:[);/ ]|$)'
      model: 'iWork 8 Ultimate'
    - regex: '(?:i1002S|iwork10 Pro)(?:[);/ ]|$)'
      model: 'iWork 10 Pro'
    - regex: 'Iwork10 Flagship(?:[);/ ]|$)'
      model: 'iWork 10 Flagship'

    - regex: '(U[0-9]+GT[^;/]*) Build'
      model: '$1'
    - regex: '(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)'
      model: '$1'
    - regex: '(K8GT)'
      model: '$1'

# CUBOT
CUBOT:
  regex: 'CUBOT|RAINBOW 2|KING_KONG_3|ZORRO 001|KINGKONG[_ ]MINI2?|KING KONG CS|(?<!QUMO )QUEST(?!(?:[0-9]|\s[0-9]))(?: LITE)?|NOTE 20 PRO'
  device: 'smartphone'
  models:
    - regex: 'CHEETAH 2'
      model: 'Cheetah 2'
    - regex: 'RAINBOW 2'
      model: 'Rainbow 2'
    - regex: 'RAINBOW'
      model: 'Rainbow'
    - regex: 'DINOSAUR'
      model: 'Dinosaur'
    - regex: 'KINGKONG MINI2'
      model: 'King Kong Mini 2'
    - regex: 'KINGKONG_MINI'
      model: 'King Kong Mini'
    - regex: 'KING_KONG_3'
      model: 'King Kong 3'
    - regex: 'KING KONG CS'
      model: 'King Kong CS'
    - regex: 'KING KONG'
      model: 'King Kong'
    - regex: 'QUEST LITE'
      model: 'Quest Lite'
    - regex: 'QUEST'
      model: 'Quest'
    - regex: 'ZORRO 001'
      model: 'Zorro 001'
    - regex: 'CUBOT[ _]Echo'
      model: 'Echo'
    - regex: 'CUBOT[ _]MANITO'
      model: 'Manito'
    - regex: 'CUBOT[ _]MAGIC'
      model: 'Magic'
    - regex: 'CUBOT[ _]MAX'
      model: 'Max'
    - regex: 'NOTE Plus'
      model: 'Note Plus'
    - regex: 'NOTE 20 PRO'
      model: 'Note 20 Pro'
    - regex: 'CUBOT[_ ]NOTE[_ ]S'
      model: 'Note S'
    - regex: 'CUBOT_NOVA'
      model: 'Nova'
    - regex: 'CUBOT_POWER'
      model: 'Power'
    - regex: 'CUBOT_X18_Plus'
      model: 'X18 Plus'
    - regex: 'CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'CUBOT ([^;/]+) Build'
      model: '$1'
    - regex: '([^;/]+) Build/CUBOT'
      model: '$1'

# Clout
Clout:
  regex: 'Hind[ _]5\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute'
  device: 'smartphone'
  models:
    - regex: 'Hind[ _]5\.1'
      model: 'Hind 5.1'
    - regex: 'X417[ _]Amaze'
      model: 'X417 Amaze'
    - regex: 'X418[ _]Zest'
      model: 'X418 Zest'
    - regex: 'X421[ _]Nova'
      model: 'X421 Nova'
    - regex: 'X422[ _]Exotic'
      model: 'X422 Exotic'
    - regex: 'X425[ _]Shavit'
      model: 'X425 Shavit'
    - regex: 'X428[ _]Astute'
      model: 'X428 Astute'

# Concord
Concord:
  regex: 'Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'M10'
      model: 'M10'
    - regex: 'Flyfix 6'
      model: 'Flyfix 6'
    - regex: 'C-721'
      model: 'Flyfix Q'
      device: 'tablet'
    - regex: 'Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)'
      model: 'Plus-$1 $2'
      device: 'tablet'

# Crescent
Crescent:
  regex: 'WING 5|WING9|Venus[ _][14]'
  device: 'smartphone'
  models:
    - regex: 'WING 5'
      model: 'Wing 5'
    - regex: 'WING9'
      model: 'Wing 9'
    - regex: 'Venus[ _]([14])'
      model: 'Venus $1'

# Cyrus
Cyrus:
  regex: 'Cyrus[ _-]'
  device: 'smartphone'
  models:
    - regex: 'Cyrus[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)'
      model: '$1'

# Datang
Datang:
  regex: 'DATANG'
  device: 'smartphone'
  models:
    - regex: '(?:DATANG[ _-])+([^;/]+) Build'
      model: '$1'
    - regex: '(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)'
      model: '$1'

# Datsun
Datsun:
  regex: 'DATSUN'
  device: 'smartphone'
  models:
    - regex: 'DATSUN_D5500'
      model: 'D5500'
    - regex: 'Datsun_D5001'
      model: 'D5001'

# Danew
Danew:
  regex: 'Dslide ?([^;/]+) Build|Konnect_?(?:402|50[246]|60[127])|GEODROID_A5'
  device: 'smartphone'
  models:
    - regex: 'Konnect_?(402|50[246]|60[127])'
      model: 'Konnect $1'
    - regex: 'Dslide ?([^;/]+) Build'
      device: 'tablet'
      model: 'DSlide $1'
    - regex: 'GEODROID_A5'
      device: 'tablet'
      model: 'Geodroid A5'

# Denver Electronics (denver-electronics.com)
Denver:
  regex: '(?:TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)'
  device: 'tablet'
  models:
    - regex: 'P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)'
      model: 'TAQ-$1'
    - regex: '(TA[CDQ]-[0-9]+)'
      model: '$1'
    - regex: 'SDQ[_-](550[24]4L|52001G|50002G|57004L)'
      device: 'smartphone'
      model: 'SDQ-$1'

# Dell
Dell:
  regex: 'Dell[^a-z]|Venue|XCD35'
  device: 'smartphone'
  models:
    - regex: 'XCD35'
      model: 'XCD35'
    - regex: 'Venue (8 7840|10 7040|8 3830)'
      model: 'Venue $1'
      device: 'tablet'
    - regex: '(?:Dell )?Venue Build'
      model: 'Venue'
    - regex: 'Dell; Venue Pro'
      model: 'Venue Pro'

    - regex: '(OptiPlex (?:3050|7010))'
      device: 'desktop'
      model: '$1'

    - regex: '(?:Dell )?(Streak|Venue) ?([^/;]*) Build'
      model: '$1 $2'
      device: 'tablet'
    - regex: '(?:Dell Inc./)?(XPS 13 9360|Latitude 7480)(?:[);/ ]|$)'
      device: 'desktop'
      model: '$1'
    - regex: 'Dell; ((?:Streak|Venue)[^;/\)]*)'
      model: '$1'
      device: 'tablet'
    - regex: 'Dell; ([^;/\)]+)'
      model: '$1'
    - regex: 'Dell[ _\-]([^/;]+) Build'
      model: '$1'

# Desay
Desay:
  regex: 'Desay'
  device: 'smartphone'
  models:
    - regex: 'Desay[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'Desay[ _-]?([^;/)]+)(?:[);/ ]|$)'
      model: '$1'

# DEXP
DEXP:
  regex: 'DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA[12]10|VA170|ML450|MS[56]50|BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|AL[23]50|AS155|AS260|GS15[035]| (?:N280i|P380i|R110|BL160|B450|B340|A1[45]0|A340|AS160|GL[23]55|ES750))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Ixion[_ ]([^;/]+)(?: Build|\))'
      model: 'Ixion $1'
    - regex: '(ML450|MS[56]50|ES750)(?:[);/ ]|$)'
      model: 'Ixion $1'
    - regex: 'IxionES250(?:[);/ ]|$)'
      model: 'Ixion ES250 Rage'
    - regex: 'IxionML4.7(?:[);/ ]|$)'
      model: 'Ixion ML 4.7"'
    - regex: 'M150Storm(?:[);/ ]|$)'
      model: 'Ixion M150 Storm'
    - regex: 'AL250(?:[);/ ]|$)'
      model: '4.5" AL250'
    - regex: 'AL350(?:[);/ ]|$)'
      model: '5.0" AL350'
    - regex: 'AS155(?:[);/ ]|$)'
      model: '5.45" AS155'
    - regex: 'AS260(?:[);/ ]|$)'
      model: '5.85" AS260'
      device: 'phablet'

    - regex: 'Ursus ([^;/)]+)(?: Build|\))'
      model: 'Ursus $1'
      device: 'tablet'
    - regex: '(VA[21]10|VA170|R110|N280i|P380i)(?:[);/ ]|$)'
      model: 'Ursus $1'
      device: 'tablet'

    - regex: ' (B450|B340|BL160|A340)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'SENIOR(?:[);/ ]|$)'
      model: 'Senior'

    - regex: 'Larus_TV1'
      device: 'feature phone'
      model: 'Larus_TV1'

    - regex: 'H135[ _]Build'
      model: 'Atlas'
      device: 'desktop'
    - regex: '(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'DEXP[ _]([^;/]+) Build'
      model: '$1'
    - regex: 'DEXP[ _]([^);/]+)(?:[);/ ]|$)'
      model: '$1'

    - regex: '(F4[38]D8000K)(?:[);/ ]|$)'
      device: 'tv'
      model: '$1'

# Dbtel
Dbtel:
  regex: 'DBTEL(?:[\-/])?([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Dialog
Dialog:
  regex: 'Dialog ?([^;/]+) Build'
  device: 'smartphone'
  model: '$1'

# Dicam
Dicam:
  regex: 'DICAM-([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Digi
Digi:
  regex: '(?<!FBCR/)Digi[ _]([^);/]+)(?:[);/ ]|$)'
  device: 'smartphone'
  model: '$1'

# Digicel
Digicel:
  regex: 'DIGICEL'
  device: 'smartphone'
  models:
    - regex: 'DL810'
      model: 'DL810'
    - regex: 'DIGICEL ([^/;]+) Build'
      model: '$1'

# Digiland or DigiLand
Digiland:
  regex: '(?:DL1008M|DL(?:1023|9002|[78]006))(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'DL1008M'
      model: 'DL1008M'
    - regex: 'DL(1023|9002|[78]006)'
      model: 'DL$1'

# Digma
Digma:
  regex: 'Digma[_ ]([^;/]+) Build|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](606[32]ML|111[46]ML|11[459]4MG|1117PG|1207MG|1210MG|1195MG|1196ML|3001ML|4024PG|5009PL|5021ML|5026PL|500[67]PG|7052PG|706[56]MG|709[68]PL|7097MG|720[48]MG|7140ML|7141MG|7113PL|7193MG|820[69]MG|7153MG|8139ML|8143MG|8152ML|1050PL|8205PG|7203MG|106[24]ML|1115MG)|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|LINX B510 3G LT5037MG|LINX A452 3G LT4030PG|LINX A453 3G LT4038PG|LINX A420 3G LS4019PG|LINX A450 3G LT4028PG|Linx A400 3G LT4001PG|Linx C500 3G LT5001PG|Linx PS474S|LS504[01]PL|LT40(47|54)MG|PS1043MG|LS405[01]MG|LS5053ML|LT5048MG|HT7071MG|LT5052ML|HT5035PG|HT4039PG|LT4049PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)'
  device: 'smartphone'
  models:
    - regex: 'HIT(?: 3G)? HT707[10]MG'
      model: 'HIT 3G'
      device: 'tablet'
    - regex: 'iDx5'
      model: 'iDx5'
    - regex: 'HT5035PG'
      model: 'HIT Q500 3G'
    - regex: 'HT4039PG'
      model: 'HIT Q401 3G'
    - regex: '(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)'
      model: '$1'
    - regex: 'PS604M'
      model: 'Linx 6.0'
    - regex: 'LT4049PG'
      model: 'Linx Atom 3G'
    - regex: 'LT5048MG'
      model: 'Linx Joy 3G'
    - regex: 'LT5052ML'
      model: 'Linx Base 4G'
    - regex: 'LT4047MG'
      model: 'Linx Alfa 3G'
    - regex: 'LS4050MG'
      model: 'Linx X1 3G'
    - regex: 'LS4051MG'
      model: 'Linx X1 Pro 3G'
    - regex: 'LT4054MG'
      model: 'Linx Argo 3G'
    - regex: 'LS5041PL'
      model: 'Linx Trix 4G'
    - regex: 'LS5040PL'
      model: 'Linx Rage 4G'
    - regex: 'LS5053ML'
      model: 'Linx Pay 4G'
    - regex: 'Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)'
      model: 'Linx $1 3G'
    - regex: '(Linx PS474S)'
      model: '$1'
    - regex: 'PT452E'
      model: 'Linx 4.5'
    - regex: 'CITI ATL 4G CS5029ML'
      model: 'CITI ATL 4G'
    - regex: '(CITI Z530 3G)'
      model: '$1'
    - regex: '(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|5026PL)'
      model: '$1'

    - regex: 'TS7854M'
      model: 'Plane 8.1" 3G'
      device: 'tablet'
    - regex: 'PS1043MG'
      model: 'Plane 10.3" 3G'
      device: 'tablet'
    - regex: 'TS1012E 3G'
      model: 'Plane 10.1" 3G'
      device: 'tablet'
    - regex: 'MVM900H(?:WZ|C)'
      model: 'iDx8'
      device: 'tablet'
    - regex: 'MVM908HCZ'
      model: 'iDx9'
      device: 'tablet'
    - regex: '(iD(?:xD10|rQ10|xD7)[_ ]3G)'
      model: '$1'
      device: 'tablet'
    - regex: '(iDx10|iDx7)'
      model: '$1'
    - regex: '(iDxD[45]|iDxQ5)'
      model: '$1'
    - regex: 'HIT 4G HT7074ML'
      model: 'HIT 4G'
      device: 'tablet'
    - regex: 'CITI[_ ](1902 3G|Kids|8527_4G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G)'
      model: 'CITI $1'
      device: 'tablet'
    - regex: '(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML)'
      model: '$1'
      device: 'tablet'
    - regex: 'iDxD8 3G'
      model: 'D-Plane2 8'
      device: 'tablet'
    - regex: '(iDnD7)'
      model: '$1'
      device: 'tablet'
    - regex: 'NS6902QL'
      model: 'Platina 7.2 4G'
      device: 'tablet'
    - regex: 'NS9797MG'
      model: 'Platina 7.2 3G'
      device: 'tablet'
    - regex: 'TT1004PG'
      model: 'Optima 10.4" 3G'
      device: 'tablet'
    - regex: 'TT1002MG'
      model: 'Optima D 10.4" 3G'
      device: 'tablet'
    - regex: 'TT7025MG'
      model: 'Optima 7.5" 3G'
      device: 'tablet'
    - regex: 'TT7026MW'
      model: 'Optima 7.6" 3G'
      device: 'tablet'
    - regex: 'TT7020MG'
      model: 'Optima 7.3" 3G'
      device: 'tablet'
    - regex: 'TT7024MG'
      model: 'Optima 7.4" 3G'
      device: 'tablet'
    - regex: '((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.STNM]+|Prime)(?:[ _][43]G)?)'
      model: '$1'
      device: 'tablet'
    - regex: 'Digma[_ ]([^;/]+) Build'
      model: '$1'
      device: 'tablet'

# DoCoMo
DoCoMo:
  regex: 'DoCoMo|\;FOMA|KGT/1\.0'
  device: 'feature phone'
  models:
    - regex: 'DoCoMo/.+MST.+(SH2101V)'
      model: '$1'
    - regex: 'DoCoMo/[12]\.0[/ ]([a-z0-9]+)'
      model: '$1'
    - regex: '([a-z0-9]+)(?:_W)?\;FOMA'
      model: '$1'
    - regex: 'KGT/1\.0 ([a-z0-9]+)'
      model: '$1'

# Doogee
Doogee:
  regex: 'DOOGEE[ _-]|Valencia2_Y100_?(?:pro|plus)|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite|X9 Mini|LEO_DG280|Y9Plus|Hitman_DG850|S(?:[568]8|9[056]|59|40)Pro|X95Pro|S40Lite|BL[579]000|N20Pro|(?<!Lenovo )S90C|Ibiza_F2)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)'
      model: 'Valencia2 Y100 Plus'
    - regex: 'Valencia2_Y100pro'
      model: 'Valencia2 Y100 Pro'
    - regex: 'LEO_(DG280)'
      model: 'Leo $1'
    - regex: '(BL[579]000|S90C)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'X95Pro(?:[);/ ]|$)'
      model: 'X95 Pro'
    - regex: 'N20Pro(?:[);/ ]|$)'
      model: 'N20 Pro'
    - regex: 'BL12000 PRO'
      model: 'BL12000 Pro'
    - regex: 'BL5500[_ ]Lite'
      model: 'BL5500 Lite'
    - regex: 'BL12000'
      model: 'BL12000'
    - regex: 'S([568]8|9[056]|59|40)Pro'
      model: 'S$1 Pro'
    - regex: 'S40Lite'
      model: 'S40 Lite'
    - regex: 'KISSME-DG580'
      model: 'Kissme DG580'
    - regex: 'Hitman_DG850'
      model: 'Hitman DG580'
    - regex: 'X9 Mini'
      model: 'X9 Mini'
    - regex: 'x5_doogee'
      model: 'X5'
    - regex: 'Shoot_([12])'
      model: 'Shoot $1'
    - regex: 'Ibiza_F2'
      model: 'Ibiza F2'
    - regex: '(X5max(?:[_ ]PRO)?)'
      model: '$1'
    - regex: '(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)'
      model: '$1 $2'
    - regex: 'DOOGEE[ _-]([^);/]+) Build'
      model: '$1'
    - regex: 'DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'Y9Plus(?:[);/ ]|$)'
      model: 'Y9 Plus'

# Doov
Doov:
  regex: '(?:Doov-)?Doov[ _]'
  device: 'smartphone'
  models:
    - regex: '(?:Doov-)?Doov[ _]([^;/]+) Build'
      model: '$1'
    - regex: '(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)'
      model: '$1'

# Dopod
Dopod:
  regex: 'Dopod(?: )?([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Doro
Doro:
  regex: 'Doro'
  device: 'smartphone'
  models:
    - regex: 'Doro[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'Doro[ _-]([0-9a-z]+)'
      model: '$1'

# Dune HD
'Dune HD':
  regex: 'DuneHD|SOLO 4K(?:[);/ ]|$)'
  device: 'tv'
  models:
    - regex: 'SOLO 4K(?:[);/ ]|$)'
      model: 'Solo 4k'
    - regex: 'DuneHD/\d.\d \([a-z]+__([a-z0-9_-]+);'
      model: '$1'
    - regex: 'DuneHD/\d.\d \(([a-z0-9_-]+);'
      model: '$1'

# DNS
DNS:
  regex: '(?:DNS|AirTab)[ _\-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'AirTab[ _\-]([^;/]+)(?: Build|[);])'
      model: 'AirTab $1'
      device: 'tablet'
    - regex: 'DNS[ _\-]([^;/]+)(?: Build|[);])'
      model: '$1'

# E-Boda
E-Boda:
  regex: 'E-Boda|Eclipse_(?:G400M|G500)'
  device: 'smartphone'
  models:
    - regex: 'E-Boda ((?:Revo|Izzycomm|Essential|Intelligence|Supreme)[^/;]+) Build'
      device: 'tablet'
      model: '$1'
    - regex: 'Eclipse_(G400M|G500)'
      model: 'Eclipse $1'
    - regex: 'E-Boda ([^/;]+) Build'
      model: '$1'

# Easypix
Easypix:
  regex: 'EasyPad|EasyPhone'
  device: 'smartphone'
  models:
    - regex: '(EasyPhone[^/;]+) Build'
      model: '$1'
    - regex: 'EasyPad ([^/;)]+)(?: Build|[;)])'
      model: 'EasyPad $1'
      device: 'tablet'

# Ebest
EBEST:
  regex: 'EBEST'
  device: 'smartphone'
  models:
    - regex: 'EBEST[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)'
      model: '$1'

# Echo Mobiles
Echo Mobiles:
  regex: 'ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)|HORIZON_M|Stellar 3G|FEELING'
  device: 'smartphone'
  models:
    - regex: 'ECHO_HORIZON_LITE'
      model: 'HORIZON Lite'
    - regex: '(HORIZON_M|FEELING)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'STELLAR 3G'
      model: 'STELLAR 3G'
    - regex: 'ECHO_SMART_4G'
      model: 'SMART 4G'
    - regex: 'ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION)'
      model: '$1'

# ECS
ECS:
  regex: '(?:TA10CA3|TM105A?|TR10[CR]S1)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'TA10CA3(?:[);/ ]|$)'
      model: 'TA10CA3'
    - regex: '(TR10[CR]S1)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'TM105A(?:[);/ ]|$)'
      model: 'TM105A'
    - regex: 'TM105(?:[);/ ]|$)'
      model: 'TM105'

# EE
EE:
  regex: 'Hawk_from_EE'
  device: 'smartphone'
  models:
    - regex: 'Hawk_from_EE'
      model: 'Hawk'

# EKT
EKT:
  regex: 'EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)'
  device: 'tablet'
  models:
    - regex: 'EK-(MII|T7020)'
      model: 'EK-$1'
    - regex: 'EK-(5040|5336|5540|5937|6020|8680)'
      device: 'smartphone'
      model: 'EK-$1'

# Eks Mobility
Eks Mobility:
  regex: 'S5LS|X4UPlus'
  device: 'smartphone'
  models:
    - regex: 'S5LS'
      model: 'S5LS'
    - regex: 'X4UPlus'
      model: 'X4U Plus'

# Elephone
Elephone:
  regex: 'Elephone|P6000( ?Pro| ?Plus|\+| ?02| 5.0 01)?'
  device: 'smartphone'
  models:
    - regex: 'Elephone Trunk(?:[);/ ]|$)'
      model: 'Trunk'
    - regex: 'P6000(\+| ?Plus)(?:[);/ ]|$)'
      model: 'P6000 Plus'
    - regex: 'P6000 02(?:[);/ ]|$)'
      model: 'P6000 02'
    - regex: 'P6000 5.0 01(?:[);/ ]|$)'
      model: 'P6000 01'
    - regex: 'P6000 ?Pro(?:[);/ ]|$)'
      model: 'P6000 Pro'
    - regex: '(?:Elephone[ _])?(P[768]000|S2)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'Elephone[ _\-]([^/;]+)(?: Build|[;)])'
      model: '$1'

# Element
Element:
  regex: 'AFTRS'
  model: 'Element 4K (2017)'
  device: 'tv'

# Elenberg
Elenberg:
  regex: '(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))(?:[);/ ]|$)'
  device: 'tablet'
  model: '$1'


# Ericy
Ericy:
  regex: 'Ericy-([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Essential
Essential:
  regex: 'PH-1[ )]'
  device: 'smartphone'
  models:
    - regex: 'PH-1[ )]'
      model: 'PH-1'

# E-tel
E-tel:
  regex: 'E-tel_i250'
  device: 'smartphone'
  models:
    - regex: 'E-tel[_ ]i250'
      model: 'i250'

# Evercoss
Evercoss:
  regex: 'EVERCOSS[ _]|(A75A\*|U50A_PLUS|M50 STAR|A75 MAX)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'A75A\*(?:[);/ ]|$)'
      model: 'A75A Star'
    - regex: 'A75 MAX*(?:[);/ ]|$)'
      model: 'A75 Max'
    - regex: 'U50A_PLUS(?:[);/ ]|$)'
      model: 'U50A Plus'
    - regex: 'M50 STAR(?:[);/ ]|$)'
      model: 'M50 Star'
    - regex: 'EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)'
      model: '$1'

# Eurostar
Eurostar:
  regex: '(ET7002C-H12|Onyx-[13]S)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Onyx-([13]S)(?:[);/ ]|$)'
      model: 'Onyx $1'
    - regex: 'ET7002C-H12(?:[);/ ]|$)'
      model: 'ePad 4S'
      device: 'tablet'

# Eton
Eton:
  regex: 'Eton'
  device: 'smartphone'
  models:
    - regex: 'Eton[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'Eton[ _-]?([^;/)]+)(?:[);/ ]|$)'
      model: '$1'

# Essentielb
Essentielb:
  regex: '(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|30))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'HEYOU([135]|30)(?:[);/ ]|$)'
      model: 'HEYou $1'
    - regex: 'Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)'
      model: 'Wooze $1'

# Facebook
Facebook:
  regex: 'PortalTV'
  device: 'tv'
  model: 'Portal TV'

# Rikomagic
Rikomagic:
  regex: 'MK(80[28][^/;]*) Build'
  device: 'tv'
  model: 'MK$1'

# Rinno
Rinno:
  regex: 'Rinno (R(?:400|505))'
  device: 'smartphone'
  model: '$1'

# Riviera
Riviera:
  regex: 'RIVIERA '
  device: 'smartphone'
  models:
    - regex: 'F23'
      model: 'F23'

# Senseit
Senseit:
  regex: 'SENSEIT[ _]?([^;/)]+)( Build|\))'
  device: 'smartphone'
  model: '$1'

# Sony & Sony Ericsson (combined as they are mixed up)
Sony:
  regex: 'Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D200[45]|D21(?:0[45]|14)|D22(?:0[236]|12|43)|D230[2356]|D240[36]|D25(?:02|33)|D510[236]|D530[36]|D5316|D5322|D5503|D58[03]3|D65(?:0[23]|43|63)|D66[03458]3|D66[14]6|D6708|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|65[35]3|66[0358]3|68[358]3)|I[34]312|I4332|F311[12356]|F331[13]|F321[12356]|F5[13]21|F5122|F813[12]|F833[12]|G312[135]|G311[26]|G322[136]|G3212|G331[123]|G3412|G3416|G342[136]|G823[12]|G834[123]|G8[14]4[12]|H(?:3113|3123|3133|3213|3223|3311|3321|4113|4133|4213|4233|4311|4331|4413|4433|82[167]6|83[12]4|8416|9436)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\))|X?L39H|XM50[ht]|W960|portalmmm/2\.0 K|S3[69]h|SOG01|SOL2[2346]|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[345]D|[234]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|J3173|J82[17]0|J9110|J92[16]0|J81[17]0|I[34]113|I3[12]23|I42[19]3|H9493|H8296|H8166|H4493|G2299|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A001SO|I4193|E6508|SOT31|SO-[45]1A|SO-52A|XQ-A[DT]51|XQ-A[TU]42|XQ-AS[67]2|XQ-A[TSU]52|SOL25|SOG02|A002SO|NW-(A100|Z1000)Series|J3273'
  device: 'smartphone'
  models:
    # SONY ERICSSON: explicit smartphone models
    - regex: '(?:Sony(?:Ericsson)?)?E10[ai]v?'
      model: 'Xperia X10 mini'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?U20'
      model: 'Xperia X10 mini pro'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?E15[ai]v?'
      model: 'Xperia X8'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)'
      model: 'Xperia arc'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?LT18[ai]v?'
      model: 'Xperia arc S'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MT11'
      model: 'Xperia neo V'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MT15'
      model: 'Xperia neo'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MT27'
      model: 'Xperia Sola'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MK16[ai]'
      model: 'Xperia pro'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?ST15[ai]'
      model: 'Xperia mini'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?ST17[ai]'
      model: 'Xperia active'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?SO-02L'
      model: 'Xperia Ace'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?ST18[ai]'
      model: 'Xperia ray'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?SK17[ai]?'
      model: 'Xperia mini pro'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?X10[ai]v?'
      model: 'Xperia X10'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)M1'
      model: 'Aspen'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?R800'
      model: 'Xperia PLAY'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman'
      model: 'Live with Walkman'
      brand: 'Sony Ericsson'

    # SONY ERICSSON: explicit feature phone models
    - regex: '(?:Sony(?:Ericsson)?)?CK13i'
      model: 'txt'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?CK15[ai]'
      model: 'txt pro'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?F100i'
      model: 'Jalou'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?J105'
      model: 'Naite'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?J108'
      model: 'Cedar'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?J10'
      model: 'Elm'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?J20'
      model: 'Hazel'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?U10'
      model: 'Aino'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?U100'
      model: 'Yari'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?U1'
      model: 'Satio'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?U5'
      model: 'Vivaz'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?U8'
      model: 'Vivaz pro'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?W20'
      model: 'Zylo'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?W100'
      model: 'Spiro'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?W150'
      model: 'Yendo'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?W960'
      model: 'W960'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?WT13'
      model: 'Mix Walkman'
      brand: 'Sony Ericsson'
      device: 'feature phone'

    # SONY: explicit smartphone models
    - regex: 'SO-04F'
      model: 'Xperia A2'
    - regex: 'G2299'
      model: 'Xperia R1 Plus'
    - regex: 'SO-04G'
      model: 'Xperia A4'
    - regex: '(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)'
      model: 'Xperia 10'
    - regex: '(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)'
      model: 'Xperia Ace'
    - regex: '(?:A001SO|XQ-A[TU]52|XQ-AU42|SO-41A|SOV43)(?:[);/ ]|$)'
      model: 'Xperia 10 II'
    - regex: '(?:Sony(?:Ericsson)?)?I(?:42[19]3|3223)'
      model: 'Xperia 10 Plus'
    - regex: '(?:Sony(?:Ericsson)?)?I4193'
      model: 'Xperia 10 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)'
      model: 'Xperia 1'
    - regex: '(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51)(?:[);/ ]|$)'
      model: 'Xperia 1 II'
    - regex: '(?:Sony(?:Ericsson)?)?LT22i|Xperia P'
      model: 'Xperia P'
    - regex: '(?:Sony(?:Ericsson)?)?LT25i|Xperia V'
      model: 'Xperia V'
    - regex: '(?:Sony(?:Ericsson)?)?J92[16]0'
      model: 'Xperia 5 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)'
      model: 'Xperia 5'
    - regex: '(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[567]2|SO-52A)'
      model: 'Xperia 5 II'
    - regex: '(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)'
      model: 'Xperia 8'
    - regex: '(?:Sony(?:Ericsson)?)?J3273'
      model: 'Xperia 8 Lite'
    - regex: '(?:Sony(?:Ericsson)?)?LT26ii'
      model: 'Xperia SL'
    - regex: '(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)'
      model: 'Xperia S'
    - regex: '(?:Sony(?:Ericsson)?)?SO-02C'
      model: 'Xperia arco'
    - regex: '(?:Sony(?:Ericsson)?)?SO-03D'
      model: 'Xperia arco HD'
    - regex: '(?:Sony(?:Ericsson)?)?LT26w'
      model: 'Xperia arco S'
    - regex: '(?:Sony(?:Ericsson)?)?LT28[aih]'
      model: 'Xperia ion'
    - regex: '(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)'
      model: 'Xperia TX'
    - regex: '(?:Sony(?:Ericsson)?)?LT30a'
      model: 'Xperia T LTE'
    - regex: '(?:Sony(?:Ericsson)?)?LT30p'
      model: 'Xperia T'
    - regex: '(?:Sony(?:Ericsson)?)?ST21[ia]2'
      model: 'Xperia tipo dual'
    - regex: '(?:Sony(?:Ericsson)?)?ST21[ia]'
      model: 'Xperia tipo'
    - regex: '(?:Sony(?:Ericsson)?)?ST23[ia]'
      model: 'Xperia miro'
    - regex: '(?:Sony(?:Ericsson)?)?ST25[ia]'
      model: 'Xperia U'
    - regex: '(?:Sony(?:Ericsson)?)?SOL22'
      model: 'Xperia UL'
    - regex: '(?:Sony(?:Ericsson)?)?ST26[ia]'
      model: 'Xperia J'
    - regex: '(?:Sony(?:Ericsson)?)?ST27[ia]'
      model: 'Xperia go'
    - regex: '(?:Sony(?:Ericsson)?)?C150[45]'
      model: 'Xperia E'
    - regex: '(?:Sony(?:Ericsson)?)?C160[45]'
      model: 'Xperia E Dual'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)'
      model: 'Xperia E4'
    - regex: '(?:Sony(?:Ericsson)?)?E20[05]3|E2006'
      model: 'Xperia E4G'
    - regex: '(?:Sony(?:Ericsson)?)?C190[45]'
      model: 'Xperia M'
    - regex: '(?:Sony(?:Ericsson)?)?C200[45]'
      model: 'Xperia M Dual'
    - regex: '(?:Sony(?:Ericsson)?)?C210[45]|S36h'
      model: 'Xperia L'
    - regex: '(?:Sony(?:Ericsson)?)?C230[45]|S39h'
      model: 'Xperia C'
    - regex: '(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)'
      model: 'Xperia SP'
    - regex: '(?:Sony(?:Ericsson)?)?C550[23]'
      model: 'Xperia ZR'
    - regex: '(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)'
      model: 'Xperia ZL'
    - regex: '(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)'
      model: 'Xperia ZL2'
    - regex: '(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)'
      model: 'Xperia Z'
    - regex: '(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)'
      device: 'phablet'
      model: 'Xperia Z Ultra'
    - regex: 'Xperia Z(?:[);/ ]|$)'
      model: 'Xperia Z'
    - regex: '(?:Sony(?:Ericsson)?)?D200[45]'
      model: 'Xperia E1'
    - regex: '(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)'
      model: 'Xperia E1 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)'
      model: 'Xperia E3'
    - regex: '(?:Sony(?:Ericsson)?)?D2212|E3 Dual'
      model: 'Xperia E3 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?E20[34]3'
      model: 'Xperia E4g Dual'
    - regex: 'H33[12]1'
      model: 'Xperia L2'
    - regex: 'H43[13]1'
      model: 'Xperia L2 Dual'
    - regex: 'I3312'
      model: 'Xperia L3'
    - regex: 'I43[13]2'
      model: 'Xperia L3 Dual'
    - regex: 'XQ-AD51'
      model: 'Xperia L4'
    - regex: '(?:Sony(?:Ericsson)?)?D2302'
      model: 'Xperia M2 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?D230[356]'
      model: 'Xperia M2'
    - regex: '(?:Sony(?:Ericsson)?)?D240[36]'
      model: 'Xperia M2 Aqua'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)'
      model: 'Xperia M4 Aqua'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E2312|E2363)'
      model: 'Xperia M4 Aqua Dual'
    - regex: '(?:Sony(?:Ericsson)?)?E56[05][36]'
      model: 'Xperia M5'
    - regex: '(?:Sony(?:Ericsson)?)?E56[436]3'
      model: 'Xperia M5 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?D2502'
      model: 'Xperia C3 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?D2533'
      model: 'Xperia C3'
    - regex: '(?:Sony(?:Ericsson)?)?E53[05]3|E5306'
      model: 'Xperia C4'
    - regex: '(?:Sony(?:Ericsson)?)?E53[0346]3'
      model: 'Xperia C4 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?E5506|E5553'
      model: 'Xperia C5 Ultra'
    - regex: '(?:Sony(?:Ericsson)?)?E55[36]3'
      model: 'Xperia C5 Ultra Dual'
    - regex: '(?:Sony(?:Ericsson)?)?D510[236]'
      model: 'Xperia T3'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])'
      model: 'Xperia T2 Ultra'
      device: 'phablet'
    - regex: '(?:Sony(?:Ericsson)?)?D5322'
      model: 'Xperia T2 Ultra Dual'
      device: 'phablet'
    - regex: '(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact'
      model: 'Xperia Z1 Compact'
    - regex: '(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)'
      model: 'Xperia Z1'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)'
      model: 'Xperia Z3 Compact'
    - regex: 'Xperia Z2 Tablet Wifi'
      model: 'Xperia Z2 Tablet WiFi'
      device: 'tablet'
    - regex: 'SGP561'
      model: 'Xperia Z2 Tablet'
      device: 'tablet'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)'
      model: 'Xperia Z2'
    - regex: 'D6563'
      model: 'Xperia Z2a'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)'
      model: 'Xperia Z3'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D6633|D6683)'
      model: 'Xperia Z3 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E65[35]3)'
      model: 'Xperia Z3+'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D6708)'
      model: 'Xperia Z3v'
    - regex: 'SOV31|402SO|SO-03G'
      model: 'Xperia Z4'
    - regex: 'E6508'
      model: 'Xperia Z4v'
    - regex: 'SGP771|SOT31|SO-05G'
      model: 'Xperia Z4'
      device: 'tablet'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)'
      model: 'Xperia Z5 Compact'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)'
      model: 'Xperia Z5'
    - regex: '(?:Sony(?:Ericsson)?)?E66[38]3'
      model: 'Xperia Z5 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)'
      model: 'Xperia Z5 Premium'
    - regex: '(?:Sony(?:Ericsson)?)?E6833'
      model: 'Xperia Z5 Premium Dual'
    - regex: '(?:Sony(?:Ericsson)?)?F311[135]'
      model: 'Xperia XA'
    - regex: '(?:Sony(?:Ericsson)?)?F311[26]'
      model: 'Xperia XA Dual'
    - regex: '(?:Sony(?:Ericsson)?)?F321[135]'
      model: 'Xperia XA Ultra'
    - regex: '(?:Sony(?:Ericsson)?)?F321[26]'
      model: 'Xperia XA Ultra Dual'
    - regex: '(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J'
      model: 'Xperia XZ'
    - regex: '(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)'
      model: 'Xperia XZ1'
    - regex: '(?:Sony(?:Ericsson)?)?G8441|SO-02K'
      model: 'Xperia XZ1 Compact'
    - regex: '(?:Sony(?:Ericsson)?)?F331[13]'
      model: 'Xperia E5'
    - regex: '(?:Sony(?:Ericsson)?)?G312[135]|G311[26]'
      model: 'Xperia XA1'
    - regex: '(?:Sony(?:Ericsson)?)?G341[26]|G342[13]'
      model: 'Xperia XA1 Plus'
    - regex: '(?:Sony(?:Ericsson)?)?G3426'
      model: 'Xperia XA1 Plus Dual'
    - regex: '(?:Sony(?:Ericsson)?)?G322[136]|G3212'
      model: 'Xperia XA1 Ultra'
    - regex: '(?:Sony(?:Ericsson)?)?H31[123]3'
      model: 'Xperia XA2'
    - regex: '(?:Sony(?:Ericsson)?)?H41[13]3'
      model: 'Xperia XA2 Dual'
    - regex: 'H44[19]3'
      model: 'Xperia XA2 Plus Dual'
    - regex: 'H4433'
      model: 'H4433'
    - regex: '(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)'
      model: 'Xperia XA2 Ultra'
    - regex: '(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J'
      model: 'Xperia XZs'
    - regex: '(?:Sony(?:Ericsson)?)?G814[12]|SO-04[JK]'
      model: 'Xperia XZ Premium'
    - regex: '(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)'
      model: 'Xperia XZ2'
    - regex: 'H8266'
      model: 'Xperia XZ2 Dual'
    - regex: 'SO-05K'
      model: 'Xperia XZ2 Compact'
    - regex: '(?:H8166|SOV38)(?:[);/ ]|$)'
      model: 'Xperia XZ2 Premium Dual'
    - regex: '(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)'
      model: 'Xperia XZ3'
    - regex: '(?:Sony(?:Ericsson)?)?G331[13]'
      model: 'Xperia L1'
    - regex: '(?:Sony(?:Ericsson)?)?G3312'
      model: 'Xperia L1 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?SO-04E'
      model: 'Xperia A'
    - regex: '(?:Sony(?:Ericsson)?)?SO-04D'
      model: 'Xperia GX'
    - regex: '(?:Sony(?:Ericsson)?)?SO-05D'
      model: 'Xperia SX'
    - regex: '(?:Sony(?:Ericsson)?)?F5121'
      model: 'Xperia X'
    - regex: '(?:Sony(?:Ericsson)?)?F5122'
      model: 'Xperia X Dual'
    - regex: '(?:Sony(?:Ericsson)?)?F5321|SO-02J'
      model: 'Xperia X Compact'
    - regex: '(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)'
      model: 'Xperia X Performance'
    - regex: '(?:Sony(?:Ericsson)?)?F8132'
      model: 'Xperia X Performance Dual'

    # SONY: explicit tablet models
    - regex: 'SGP(?:311|312|321)(?:[);/ ]|$)|SO-03E'
      model: 'Xperia Tablet Z'
      device: 'tablet'
    - regex: 'SGP712(?:[);/ ]|$)'
      model: 'Xperia Tablet Z4'
      device: 'tablet'
    - regex: 'SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F'
      model: 'Xperia Tablet Z2'
      device: 'tablet'
    - regex: 'SGP(?:6[124]1|612)(?:[);/ ]|$)'
      model: 'Xperia Tablet Z3 Compact'
      device: 'tablet'
    - regex: 'SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)'
      model: 'Xperia Tablet S'
      device: 'tablet'

    # SONY: Bravia
    - regex: '(?:BRAVIA )(2K GB ATV3|4K UR2|4K GB ATV3|4K GB|4K 2015|2015)(?:[);/ ]|$)'
      model: 'Bravia $1'
      device: 'tv'

    - regex: 'NW-A100Series'
      model: 'Walkman A100'
      device: 'portable media player'
    - regex: 'NW-Z1000Series'
      model: 'Walkman Z1000'
      device: 'portable media player'

    # general detections
    - regex: 'SonyBDP|SonyDBV'
      model: 'Blu-ray Player'
      device: 'tv'
    - regex: '(?:Sony-)?(KDL?-?[0-9a-z]+)'
      model: '$1'
      device: 'tv'
    - regex: 'Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)'
      model: '$1'
      device: 'tv'
    - regex: '((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\))'
      model: '$1'
      brand: 'Sony Ericsson'
    - regex: '(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)'
      model: '$1'
      brand: 'Sony Ericsson'
    - regex: 'portalmmm/2.0 K([a-z0-9]+)'
      model: 'K$1'
      brand: 'Sony Ericsson'
    - regex: 'Sony ?Ericsson?([^/;]*) Build'
      model: '$1'
      brand: 'Sony Ericsson'
    - regex: 'SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/'
      model: '$1'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: 'Sony ?Ericsson ?([a-z0-9\-]+)'
      model: '$1'
      brand: 'Sony Ericsson'

    - regex: 'Sony (Tablet[^/;]*) Build'
      model: '$1'
      device: 'tablet'
    - regex: '(SGP[^/;]*) Build'
      model: '$1'
      device: 'tablet'
    - regex: 'Xperia ([^/;]*Tablet[^/;]*) Build'
      model: 'Xperia $1'
      device: 'tablet'
    - regex: 'Xperia ([^;/]+) Build'
      model: 'Xperia $1'
    - regex: 'Sony[ -]?([^/;]*) Build'
      model: '$1'
    - regex: 'Sony[ -]?([a-z0-9\-]+)'
      model: '$1'

# Ergo
Ergo:
  regex: 'ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G)'
  device: 'smartphone'
  models:
    - regex: 'F501_Magic'
      model: 'F501 Magic'
    - regex: 'B502 Basic'
      model: 'B502 Basic'
    - regex: 'A503-Optima'
      model: 'A503 Optima'
    - regex: 'B506[_ ]INTRO'
      model: 'B506 Intro'
    - regex: 'V550[_ ]Vision'
      model: 'V550 Vision'
    - regex: 'B504[_ ]Unit'
      model: 'B504 Unit'
    - regex: 'B505_Unit_4G'
      model: 'B505 Unit 4G'
    - regex: 'V551[ _]Aura'
      model: 'V551 Aura'
    - regex: 'V540_Level'
      model: 'V540 Level'
    - regex: 'V570_BIG_BEN'
      model: 'V570 Big Ben'
    - regex: 'Ergo F502'
      model: 'F502 Platinum'
    - regex: '(ERGO_)?A500[ _]Best'
      model: 'A500 Best'
    - regex: '(ERGO_)?A550[ _]Maxx'
      model: 'A550 Maxx'
    - regex: 'Prime B400'
      model: 'Prime B400'
    - regex: 'A502[_ ]Aurum'
      model: 'A502 Aurum'
    - regex: 'A503[ _]Optima'
      model: 'A503 Optima'
    - regex: 'A551 Sky 4G'
      model: 'A551 Sky 4G'
    - regex: 'A553 Power'
      model: 'A553 Power'
    - regex: 'A555 Universe'
      model: 'A555 Universe'
    - regex: 'ERGO[_ ]A556'
      model: 'A556'
    - regex: 'ERGO[_ ]F500'
      model: 'F500'
    - regex: 'ERGO[_ ]F501'
      model: 'F501'
    - regex: 'B500 First'
      model: 'B500 First'
    - regex: 'Force F500'
      model: 'Force F500'
    - regex: 'GoTab GBT9'
      model: 'GoTab GBT9'
      device: 'tablet'
    - regex: 'GoTab Gti8'
      model: 'GoTab GTi8'
      device: 'tablet'
    - regex: 'ERGO[_ ]Tab[ _]Crystal[ _]Lite'
      model: 'Tab Crystal Lite'
      device: 'tablet'
    - regex: 'ERGO[_ ]Tab[ _]Hero[ _]II'
      model: 'Tab Hero II'
      device: 'tablet'
    - regex: 'ERGO[_ ](B700)'
      model: 'Tab $1'
      device: 'tablet'

    - regex: 'ERGO SmartBox SX'
      model: 'SmartBox SX'
      device: 'tv'

# Ericsson
Ericsson:
  regex: '(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2.0 WAP1.1)'
  device: 'feature phone'
  models:
    - regex: 'Ericsson(?:/ )?([a-z0-9]+)'
      model: '$1'
    - regex: 'R380 2.0 WAP1.1'
      model: 'R380'

# Energizer
Energizer:
  regex: 'PowerMax|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?'
  device: 'smartphone'
  models:
    - regex: 'PowerMax(P[0-9]+S?)'
      model: 'Power Max $1'
    - regex: 'ENERGY[_ ]([45]00|E520)[_ ]LTE'
      model: 'Energy $1 LTE'
    - regex: 'ENERGY[_ ]400S'
      model: 'Energy 400S'
    - regex: 'ENERGY400'
      model: 'Energy 400'
    - regex: 'ENERGY[_ ]S([56]00)'
      model: 'Energy S$1'
    - regex: 'ENERGY[_ ]?(E500S|E500|E12)'
      model: 'Energy $1'

# Energy Sistem
'Energy Sistem':
  regex: 'ENERGY[ _-]?([^;/]+) Build|Energy Phone Pro 3'
  device: 'smartphone'
  models:
    - regex: 'Energy Phone Pro 3'
      model: 'Energy Phone Pro 3'
    - regex: 'ENERGY[ _-]?([^;/]+) Build'
      device: 'tablet'
      model: '$1'

# eTouch
eTouch:
  regex: 'eTouch ?([a-z0-9]+)'
  device: 'smartphone'
  model: '$1'

# Etuline
Etuline:
  regex: '(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|882G|9[78]0))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(ETL-S(?:[^/); ]+))'
      model: '$1'
    - regex: '(ETL-T(?:[^/); ]+))'
      device: 'tablet'
      model: '$1'

# Storex
Storex:
  regex: "eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox"
  device: 'tablet'
  models:
    - regex: "eZee[^a-z]*Tab ?([^;/]*) Build"
      model: "eZee'Tab$1"
    - regex: 'STOREX LinkBox'
      model: 'LinkBox'
      device: 'tv'

# Evertek
Evertek:
  regex: '(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build|E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG'
  device: 'smartphone'
  models:
    - regex: '(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG)'
      device: 'tablet'
      model: 'Everpad $1'
    - regex: '(Ever(?:Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Smart|Star)[^/;]*) Build'
      model: '$1'

# Evolio
Evolio:
  regex: 'Evolio|M4MAGIC'
  device: 'smartphone'
  models:
    - regex: 'M4MAGIC'
      model: 'M4 Magic'
    - regex: 'Evolio_M5Pro'
      model: 'M5 Pro'
    - regex: 'Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)'
      model: '$1'

# Evolveo
Evolveo:
  regex: 'EVOLVEO|StrongPhone'
  device: 'smartphone'
  models:
    - regex: 'EVOLVEO MultiMedia Box M4'
      device: 'tv'
      model: 'MultiMedia Box M4'
    - regex: 'Smart TV ([^;/]*) Build'
      device: 'tv'
      model: 'Smart TV $1'
    - regex: 'EVOLVEO StrongPhone G([248])'
      model: 'StrongPhone G$1'
    - regex: '(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?'
      model: 'StrongPhone Q$1$2'
    - regex: 'EVOLVEO[ _]([^;/]*) Build'
      model: '$1'

# Explay
Explay:
  regex: 'Explay|[\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\.]|sQuad[ _][0-9\.]|Onliner[1-3]|RioPlay|Leader|Pulsar|Infinityll|Imperium[78]|Indigo|Lagoon'
  device: 'tablet'
  models:
    - regex: 'ActiveD[ _]7.4[ _]3G'
      model: 'ActiveD 7.4 3G'
    - regex: 'Imperium([78])(?:[);/ ]|$)'
      model: 'Imperium $1 3G'
    - regex: 'ActiveD[ _]8.2[ _]3G'
      model: 'ActiveD 8.2 3G'
    - regex: 'CinemaTV[ _]3G'
      model: 'CinemaTV 3G'
    - regex: 'Infinityll'
      model: 'Infinity II'
    - regex: 'Informer[ _]([0-9]+(?:[ _]3G)?)'
      model: 'Informer $1'
    - regex: 'Surfer[ _]([0-9\.]+(?:[ _]3G)?)'
      model: 'Surfer $1'
    - regex: 'sQuad[ _]([0-9\.]+(?:[ _]3G)?)'
      model: 'sQuad $1'
    - regex: 'Onliner([1-3])'
      model: 'Onliner $1'
    - regex: 'Atlant(?:[);/ ]|$)'
      device: 'smartphone'
      model: 'Atlant'
    - regex: 'Indigo(?:[);/ ]|$)'
      device: 'smartphone'
      model: 'Indigo'
    - regex: 'Pulsar(?:[);/ ]|$)'
      device: 'smartphone'
      model: 'Pulsar'

    - regex: '[\w]+-EXPLAY-FIN'
      device: 'feature phone'
      model: 'Fin'

    - regex: 'Lagoon(?:[);/ ]|$)'
      model: 'Lagoon'
    - regex: 'Explay[ _-]([^;/]+)(?: Build|[;)])'
      model: '$1'
    - regex: 'RioPlay(?:[);/ ]|$)'
      device: 'smartphone'
      model: 'Rio Play'
    - regex: 'Leader'
      model: 'Leader'

# EvroMedia
EvroMedia:
  regex: 'EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL'
  device: 'tablet'
  models:
    - regex: 'Playpad 3G GOO'
      model: 'Play Pad 3G Goo'
    - regex: 'Play Pad 3G 2Goo'
      model: 'Play Pad 3G 2Goo'
    - regex: 'Play Pad PRO'
      model: 'Play Pad Pro'
    - regex: 'PLAY_PAD_PRO_XL'
      model: 'Play Pad Pro XL'
    - regex: 'PlayPad 3GTab XL'
      model: 'Play Pad 3G Tab XL'
# EKO
EKO:
  regex: 'EKO'
  device: 'smartphone'
  models:
    - regex: 'EKO[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'EKO[ _-]?([^;/)]+)(?:[);/ ]|$)'
      model: '$1'

# Extrem
Extrem:
  regex: 'Rock X9+|ROCK_X11'
  device: 'smartphone'
  models:
    - regex: 'Rock X9+'
      model: 'Rock X9+'
    - regex: 'ROCK_X11'
      model: 'Rock X11'

# Ezze
Ezze:
  regex: 'EZZE-|EZ(?!Browser)[a-z0-9]+'
  device: 'feature phone'
  models:
    - regex: 'EZZE-([a-z0-9]+)'
      model: '$1'
    - regex: 'EZ([a-z0-9]+)'
      model: 'EZ$1'

# Ezio
Ezio:
  regex: 'EZIO-([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Forstar
Forstar:
  regex: 'Amosta ?3G5'
  device: 'smartphone'
  models:
    - regex: 'Amosta ?3G5'
      model: 'Amosta 3G5'

# Foxconn
Foxconn:
  regex: 'InFocus M[0-9]+[a-z]?'
  device: 'smartphone'
  models:
    - regex: 'InFocus M([0-9]+[a-z]?)'
      model: 'InFocus M$1'

# Fondi
Fondi:
  regex: 'Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\)| Build)'
  device: 'smartphone'
  models:
    - regex: '(T702|T602B)'
      model: '$1'
    - regex: '(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)'
      device: 'tablet'
      model: '$1'
    - regex: 'Fondi[- _]([^;/)]+)'
      model: '$1'

# Fairphone
Fairphone:
  regex: '(FP(?:1U?|2))(?:[);/ ]|$)'
  device: 'smartphone'
  model: '$1'

# Famoco
Famoco:
  regex: '(FX[123]00)'
  device: 'smartphone'
  model: '$1'

# FiGO (figoglobal.com)
FiGO:
  regex: 'ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|M405B|VIRTUE3|F55L Build'
  device: 'smartphone'
  models:
    - regex: 'ATRIUM II F55L2'
      model: 'Atrium II'
    - regex: '(F55L)'
      model: '$1'
    - regex: 'TRIO F40LT'
      model: 'Trio F40LT'
    - regex: 'EPIC F50G'
      model: 'Epic F50G'
    - regex: '(Gravity X55L|Orion M50L)'
      model: '$1'
    - regex: 'ULTRA M50G'
      model: 'Prime'
    - regex: 'M405B_8GB'
      model: 'Virtue II 8GB'
    - regex: 'M405B'
      model: 'Virtue II'
    - regex: 'VIRTUE3'
      model: 'Virtue III'
    - regex: 'CENTRIC S50G'
      model: 'Centric S50G'

# FNB
FNB:
  regex: 'ConeXis (A[12]|X[12])|SP5045V'
  device: 'smartphone'
  models:
    - regex: 'SP5045V'
      model: 'SP5045V'
    - regex: 'ConeXis A1'
      model: 'ConeXis A1'
    - regex: 'ConeXis A2'
      model: 'ConeXis A2'
    - regex: 'ConeXis X1'
      model: 'ConeXis X1'
    - regex: 'ConeXis X2'
      model: 'ConeXis X2'

# Fujitsu
Fujitsu:
  regex: '(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-08D|F-09[DE]|F-10D|F-[45]1A|F-[45]2A|F-11D|F-12C|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12])(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'F-51A(?:[);/ ]|$)'
      model: 'Arrows 5G F-51A'
    - regex: 'F-01F(?:[);/ ]|$)'
      model: 'Arrows NX F-01F'
    - regex: '(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)'
      model: 'Easy Phone $1'
    - regex: 'F-03L(?:[);/ ]|$)'
      model: 'Arrows Phone F-03L'
    - regex: 'F-01J(?:[);/ ]|$)'
      model: 'Arrows NX F-01J'
    - regex: 'F-01K(?:[);/ ]|$)'
      model: 'Arrows NX F-01K'
    - regex: 'F-01H(?:[);/ ]|$)'
      model: 'Arrows Fit F-01H'
    - regex: 'F-02E(?:[);/ ]|$)'
      model: 'Arrows X F-02E'
    - regex: 'F-02G(?:[);/ ]|$)'
      model: 'Arrows NX F-02G'
    - regex: 'FJL21(?:[);/ ]|$)'
      model: 'Arrows EF FJL21'
    - regex: 'FJL22(?:[);/ ]|$)'
      model: 'Arrows Z FJL22'
    - regex: 'F-02H(?:[);/ ]|$)'
      model: 'Arrows NX F-02H'
    - regex: 'F-52A(?:[);/ ]|$)'
      model: 'Arrows NX9 F-52A'
    - regex: 'F-03D(?:[);/ ]|$)'
      model: 'Arrows Kiss F-03D'
    - regex: 'F-03E(?:[);/ ]|$)'
      model: 'Arrows Kiss F-03E'
    - regex: 'F-03F(?:[);/ ]|$)'
      model: 'Disney Mobile F-03F'
    - regex: 'F-03H(?:[);/ ]|$)'
      model: 'Arrows SV F-03H'
    - regex: '901FJ(?:[);/ ]|$)'
      model: 'Arrows J 901FJ'
    - regex: 'F-04E(?:[);/ ]|$)'
      model: 'Arrows V F-04E'
    - regex: 'F-04G(?:[);/ ]|$)'
      model: 'Arrows NX F-04G'
    - regex: 'F-05D(?:[);/ ]|$)'
      model: 'Arrows X LTE F-05D'
    - regex: 'F-05F(?:[);/ ]|$)'
      model: 'Arrows NX F-05F'
    - regex: 'F-05J(?:[);/ ]|$)'
      model: 'Arrows Be F-05J'
    - regex: 'F-05G(?:[);/ ]|$)'
      model: 'Arrows K-tai'
    - regex: 'F-04K(?:[);/ ]|$)'
      model: 'Arrows Be F-04K'
    - regex: 'F-02L(?:[);/ ]|$)'
      model: 'Arrows Be 3 F-02L'
    - regex: 'F-41A(?:[);/ ]|$)'
      model: 'Arrows Be 4 F-41A'
    - regex: 'F-06E(?:[);/ ]|$)'
      model: 'Arrows NX F-06E'
    - regex: 'F-07D(?:[);/ ]|$)'
      model: 'Arrows μ F-07D'
    - regex: '801FJ(?:[);/ ]|$)'
      model: 'Arrows U 801FJ'
    - regex: 'F-07E(?:[);/ ]|$)'
      model: 'Disney Mobile F-07E'
    - regex: 'F-08D(?:[);/ ]|$)'
      model: 'Disney Mobile F-08D'
    - regex: 'F-09D(?:[);/ ]|$)'
      model: 'ANTEPRIMA F-09D'
    - regex: 'F-09E(?:[);/ ]|$)'
      model: 'Raku-Raku Smartphone Premium F-09E'
    - regex: 'F-10D(?:[);/ ]|$)'
      model: 'Arrows X F-10D'
    - regex: 'F-11D(?:[);/ ]|$)'
      model: 'Arrows Me F-11D'
    - regex: 'F-12C(?:[);/ ]|$)'
      model: 'F-12C'
    - regex: '(F-04[JF])(?:[);/ ]|$)'
      model: '$1'
    - regex: 'arrowsM03(?:[);/ ]|$)'
      model: 'Arrows M03'
    - regex: 'arrowsRX(?:[);/ ]|$)'
      model: 'Arrows RX'
    - regex: 'arrowsM04-PREMIUM(?:[);/ ]|$)'
      model: 'Arrows M04 Premium'
    - regex: 'arrowsM(0[45])(?:[);/ ]|$)'
      model: 'Arrows M$1'

    - regex: '(F-0[32]F|F-03G|F-04H|F-05E|F-02K)(?:[);/ ]|$)'
      model: 'Arrows Tab $1'
      device: 'tablet'
    - regex: 'FARTM933KZ'
      model: 'Arrows Tab M504/HA4'
      device: 'tablet'
    - regex: 'M532(?:[);/ ]|$)'
      model: 'Stylistic'
      device: 'tablet'

# G-TiDE
G-TiDE:
  regex: 'G-TiDE'
  device: 'smartphone'
  models:
    - regex: 'Shining7'
      model: 'Shining 7'
    - regex: 'G-TiDE_(A1|S[34])'
      model: '$1'
    - regex: 'G-TiDE V6'
      model: 'V6'
    - regex: 'E(57|60|66|72|77)'
      model: '$1'

# Gemini
Gemini:
  regex: '(GEM[0-9]+[a-z]*)'
  device: 'tablet'
  model: '$1'

# General Mobile (www.generalmobile.com)
General Mobile:
  regex: 'GM 5 Plus|GM8 go|GM [68] d|GM 8|General Mobile 4G|GM 9 (?:Pro|Plus)|e-tab 20(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'GM 5 Plus'
      model: 'GM 5 Plus'
    - regex: 'GM ([68]) d'
      model: 'GM $1D'
    - regex: 'GM 8'
      model: 'GM 8'
    - regex: 'GM8 go'
      model: 'GM 8 Go'
    - regex: 'GM 9 Pro'
      model: 'GM 9 Pro'
    - regex: 'GM 9 Plus'
      model: 'GM 9 Plus'
    - regex: 'General Mobile 4G Dual'
      model: '4G Dual'
    - regex: 'General Mobile 4G'
      model: '4G'
    - regex: 'e-tab 20(?:[);/ ]|$)'
      device: 'tablet'
      model: 'E-Tab 20'

# Geotel
Geotel:
  regex: 'GEOTEL[ _]?'
  device: 'smartphone'
  models:
    - regex: 'G1'
      model: 'G1'
    - regex: 'GEOTEL[ _]?Note'
      model: 'Note'
    - regex: 'GEOTEL[ _]AMIGO'
      model: 'Amigo'

# Ghia
Ghia:
  regex: 'GHIA|QS702|VECTOR10\.1'
  device: 'smartphone'
  models:
    - regex: 'QS702'
      model: 'QS702'
    - regex: 'GHIA_ZEUS_3G'
      model: 'Zeus 3G'
    - regex: 'GHIA_AXIS7'
      model: 'Axis 7'
      device: 'tablet'
    - regex: 'VECTOR10\.1'
      model: 'Vector 10.1"'
      device: 'tablet'

# Gigabyte
Gigabyte:
  regex: 'GSmart[ _][a-z0-9 ]+(?: Build|\))|Gigabyte-[a-z0-9]+|Simba SX1|GSmart_Classic_Lite|(?<!Eagle )Classic[_ ](?:Joy|Pro)'
  device: 'smartphone'
  models:
    - regex: '(GSmart[ _][a-z0-9 ]+)(?: Build|[);])'
      model: '$1'
    - regex: 'Gigabyte-([a-z0-9]+)'
      model: '$1'
    - regex: '(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite)'
      model: '$1'
    - regex: 'Simba SX1'
      model: 'GSmart Simba SX1'

# Gigaset
Gigaset:
  regex: 'Gigaset|(?: GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Gigaset QV(1030|830)'
      model: 'Gigaset QV$1'
      device: 'tablet'

    - regex: 'G(S[23]70)[_ ]Plus(?:[);/ ]|$)'
      model: 'G$1 Plus'
    - regex: 'GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)'
      model: 'GS$1'
    - regex: 'GS57-6'
      model: 'ME Pro'
    - regex: 'GS55-6'
      model: 'ME'
    - regex: 'GS53-6'
      model: 'ME Pure'

    - regex: 'Gigaset ([^;/]+) Build'
      model: '$1'
    - regex: 'Gigaset ([^;/)]+)(?:[);/]|$)'
      model: '$1'

# Ginzzu
Ginzzu:
  regex: 'GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|(?<!Wave Pro )S5021|S5230|S50[45]0|S5120|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)'
      model: '$1'
    - regex: 'GINZZU[_ ]?(GT-(?:1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853))'
      model: '$1'
      device: 'tablet'
    - regex: '(RS6[12]D) ULTIMATE'
      model: '$1 Ultimate'
    - regex: '(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[4-7])D)|S50[45]0|S5002|S5021|S5230|S5120|S40[23]0|RS850[12]|RS9602|RS94D)(?:[);/ ]|$)'
      model: '$1'

# Gionee
Gionee:
  regex: '(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\))|P5 mini Build|P7 Max Build|(M7 Power|F106L|F100A|F103S|F103 Pro)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'GN810(?:[);/ ]|$)'
      model: 'GN810'
      device: 'phablet'
    - regex: 'GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)'
      model: 'GN$1'
    - regex: '(F106L|F100A|V188S|V188|F103S)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'M7 Power(?:[);/ ]|$)'
      model: 'M7 Power'
    - regex: 'P5 mini Build'
      model: 'P5 mini'
    - regex: 'P7 Max Build'
      model: 'P7 Max'
    - regex: '(S11) Lite(?:[);/ ]|$)'
      model: '$1 Lite'
    - regex: 'F103( Pro)?( BUILD|\))'
      model: 'F103$1'
    - regex: '(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)'
      model: 'Dream D1'
    - regex: '(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android'
      model: '$1'
    - regex: 'Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)'
      model: '$1'
    - regex: '(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)'
      model: '$1'
      device: 'feature phone'

# Grape
Grape:
  regex: '(?:Grape[ _])?GTM-5([^;/]+) Build'
  device: 'smartphone'
  model: 'GTM-5$1'

# Vizio
Vizio:
  regex: 'Vizio|VAP430|VTAB1008'
  device: 'tv'
  models:
    - regex: 'VAP430'
      model: 'VAP430'
    - regex: 'VTAB1008'
      device: 'tablet'
      model: 'VTAB1008'

# GOCLEVER
GOCLEVER:
  regex: 'GOCLEVER|QUANTUM_[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97'
  device: 'smartphone'
  models:
    - regex: 'QUANTUM_(1010N|1010M|900)'
      model: 'QUANTUM $1'
      device: 'tablet'
    - regex: 'INSIGNIA_(785_PRO|1010M|800M)'
      model: 'INSIGNIA $1'
      device: 'tablet'
    - regex: '(ORION|ARIES|ELIPSO)[_ ](71|101|102)'
      model: '$1 $2'
      device: 'tablet'
    - regex: 'TQ700N'
      model: 'QUANTUM 700N'
      device: 'tablet'
    - regex: 'Quantum2 500'
      model: 'Quantum 2 500'
    - regex: '((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\))'
      model: '$1'
    - regex: 'GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build'
      model: 'TAB $1'
      device: 'tablet'
    - regex: 'GOCLEVER[ _-]?([^;/]+) Build'
      model: '$1'
    - regex: 'TAB ([^;/)]+) Build/GOCLEVER'
      model: 'TAB $1'
      device: 'tablet'
    - regex: '([^;/)]+) Build/GOCLEVER'
      model: '$1'
    - regex: 'GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)'
      model: 'TAB $1'
      device: 'tablet'
    - regex: 'GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)'
      model: '$1'
    - regex: 'LIBRA[ _]97'
      model: 'Libra 97'
      device: 'tablet'

# GoMobile
GoMobile:
  regex: 'GO Onyx|GO[0-9]{3,4}'
  device: 'smartphone'
  models:
    - regex: 'GO Onyx'
      model: 'Go Onyx'
    - regex: 'GO([0-9]{3,4})'
      model: 'Go$1'

# Gol Mobile (gol-mobile.com)
Gol Mobile:
  regex: 'F10_PRIME'
  device: 'smartphone'
  models:
    - regex: 'F10_PRIME'
      model: 'F10 Prime'

# Goly
Goly:
  regex: 'Goly[ _-]'
  device: 'smartphone'
  models:
    - regex: 'Goly[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'Goly[ _-]([^;/)]+)(?:[;/)]|$)'
      model: '$1'

# Google
Google:
  regex: 'Nexus|GoogleTV|Glass(?<!Browser)|CrKey[^a-z0-9]|Pixel(?: Build|\))|Pixel (?:XL|C|[2-5]|[2-4] XL)|Google 2XL|G011A'
  device: 'smartphone'
  models:
    - regex: 'Glass'
      model: 'Glass'
    - regex: 'Galaxy Nexus'
      model: 'Galaxy Nexus'
    - regex: '(Nexus (?:S|4|5X?|One))'
      model: '$1'
    - regex: '(Nexus (?:6P?))'
      device: 'phablet'
      model: '$1'
    - regex: '(Nexus (?:7|9|10))'
      device: 'tablet'
      model: '$1'
    - regex: 'CrKey[^a-z0-9]'
      model: 'Chromecast'
      device: 'tv'
    - regex: 'GoogleTV'
      device: 'tv'
      model: 'GoogleTV'
    - regex: 'Pixel(?: Build|\))'
      model: 'Pixel'
    - regex: 'Pixel XL'
      model: 'Pixel XL'
    - regex: 'Pixel 3 XL'
      model: 'Pixel 3 XL'
    - regex: 'Pixel 2 XL'
      model: 'Pixel 2 XL'
    - regex: 'Pixel 3a XL'
      model: 'Pixel 3a XL'
    - regex: 'Pixel 3a'
      model: 'Pixel 3a'
    - regex: 'Pixel 4 XL'
      model: 'Pixel 4 XL'
    - regex: 'Pixel 4a \(5G\)'
      model: 'Pixel 4a (5G)'
    - regex: 'pixel 4a'
      model: 'Pixel 4a'
    - regex: 'G011A'
      model: 'Pixel 2'
    - regex: 'Google 2XL'
      model: 'Pixel 2 XL'
    - regex: 'pixel ([2-5])'
      model: 'Pixel $1'
    - regex: 'Pixel C'
      device: 'tablet'
      model: 'Pixel C'

# Gradiente
Gradiente:
  regex: 'GRADIENTE'
  device: 'feature phone'
  models:
    - regex: 'GRADIENTE-([a-z0-9]+)'
      model: '$1'
    - regex: 'GRADIENTE ([a-z0-9\-]+)'
      model: '$1'

# Grundig
Grundig:
  regex: 'GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\.0 G|AFTEU(?:011|014|FF014)'
  device: 'tv'
  models:
    - regex: '(GR?-TB[0-9]+[a-z]*)'
      device: 'tablet'
      model: '$1'
    - regex: 'GRUNDIG ([a-z0-9]+)'
      model: '$1'
    - regex: 'portalmmm/2\.0 G([a-z0-9]+)'
      model: 'G$1'
    - regex: 'AFTEU014'
      model: 'Vision 7 4K (2019)'
    - regex: 'AFTEUFF014'
      model: 'OLED 4K (2019)'
    - regex: 'AFTEU011'
      model: 'Vision 6 HD (2019)'

# Hafury
Hafury:
  regex: 'HAFURY'
  device: 'smartphone'
  models:
    - regex: '(MIX|UMAX)'
      model: '$1'

# Haier
Haier:
  regex: 'Haier|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|860|970)(?:[);/ ]|$)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-N501-FL|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC'
  device: 'smartphone'
  models:
    - regex: 'A2_Lite_NFC'
      model: 'Alpha A2 Lite NFC'
    - regex: 'HM-N505-FL'
      model: 'I8'
    - regex: 'S5 Silk'
      model: 'S5 Silk'
    - regex: 'HM-N700-FL'
      model: 'L7'
    - regex: 'HM-N501-FL'
      model: 'L56'
    - regex: '(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))'
      model: '$1'
    - regex: '(Titan[_ ]T[135]|I6_Infinity)'
      model: '$1'
    - regex: '(?:HW-)?W(71[67]|757|860|970)(?:[);/ ]|$)'
      model: 'W$1'
    - regex: 'PAD[ -_](D71|G781|d85)'
      device: 'tablet'
      model: '$1'
    - regex: 'Haier[ _\-](H[WT]-[^/;]+) Build'
      model: '$1'
    - regex: 'Haier[ _\-](H[WT]-[a-z0-9_\-]+)'
      model: '$1'
    - regex: 'Haier[ _\-](sy[0-9]+)'
      model: '$1'
    - regex: 'Haier[ _\-]([a-z0-9\-]+)'
      model: '$1'
      device: 'feature phone'

# HannSpree
HannSpree:
  regex: '(HSG[0-9]{4})|SN97T41W|SN1AT71W\(B\)|SN70T51A|SN70T31?|T7-QC'
  device: 'tablet'
  models:
    - regex: '(HSG[0-9]{4})'
      model: '$1'
    - regex: 'SN1AT71W\(B\)'
      model: 'SN1AT71W(B)'
    - regex: 'SN70T31'
      model: 'SN70T31'
    - regex: 'SN70T3'
      model: 'SN70T3'
    - regex: 'SN70T51A'
      model: 'SN70T51A'
    - regex: 'SN97T41W'
      model: 'SN97T41W'
    - regex: 'T7-QC'
      model: 'SNAT71BUE'

# Hasee
Hasee:
  regex: 'Hasee'
  device: 'smartphone'
  models:
    - regex: 'Hasee ([^;/]+) Build'
      model: '$1'
    - regex: 'Hasee ([^;/)]+)(?:[);/ ]|$)'
      model: '$1'

# Hisense
Hisense:
  regex: '(?:HS-)?Hisense ([^;/]+) Build|Hisense [^);/]+|HISENSE; |HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*|E270BSA|HWCD100E|HITV300C|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HLTE([237]00T|200M|203T|202N|21[023567]T|22[67]T|22[13]E|230E|310[TM]|31[16]T|500T|501N|510[TM]|7[23]0T)'
  device: 'smartphone'
  models:
    # explicit tablet models
    - regex: 'E270BSA'
      device: 'tablet'
      model: 'Sero 7'
    - regex: 'M470BS[AE]'
      device: 'tablet'
      model: 'Sero 7 Pro'
    - regex: 'E2281'
      device: 'tablet'
      model: 'Sero 8'
    - regex: 'HLTE202N'
      model: 'A5'
    - regex: 'HLTE203T'
      model: 'A5 Pro CC'
    - regex: 'HLTE700T'
      model: 'A6'
    - regex: 'HLTE730T'
      model: 'A6L'
    - regex: 'HLTE221E'
      model: 'E Max'
    - regex: 'HLTE501N'
      model: 'V Plus'
    - regex: 'HLTE223E'
      model: 'H30'
    - regex: 'I46D1G'
      model: 'Smartfren Andromax R'
    - regex: 'EG680'
      model: 'Smartfren Andromax Z'
    - regex: 'EG98'
      model: 'Smartfren Andromax U2'
    - regex: 'HLTE200T(?:[);/ ]|$)'
      model: 'F26'
    - regex: 'HLTE210T(?:[);/ ]|$)'
      model: 'F28'
    - regex: 'HLTE215T(?:[);/ ]|$)'
      model: 'F29'
    - regex: 'HLTE213T(?:[);/ ]|$)'
      model: 'King Kong 4'
    - regex: 'HLTE311T(?:[);/ ]|$)'
      model: 'King Kong 4 Pro'
    - regex: 'HLTE216T(?:[);/ ]|$)'
      model: 'King Kong 5'
    - regex: 'HLTE316T(?:[);/ ]|$)'
      model: 'King Kong 5 Pro'
    - regex: 'HLTE226T(?:[);/ ]|$)'
      model: 'King Kong 6'
    - regex: 'HLTE217T(?:[);/ ]|$)'
      model: 'F30S'
    - regex: 'HLTE227T(?:[);/ ]|$)'
      model: 'F40'
    - regex: 'HLTE310[TM](?:[);/ ]|$)'
      model: 'H18'
    - regex: 'HLTE510[TM](?:[);/ ]|$)'
      model: 'H20'
    - regex: 'HLTE500T(?:[);/ ]|$)'
      model: 'H11'
    - regex: 'HLTE230E(?:[);/ ]|$)'
      model: 'H40 Lite'
    - regex: 'HLTE720T(?:[);/ ]|$)'
      model: 'U30'
      device: 'phablet'
    - regex: 'HWCD100E(?:[);/ ]|$)'
      model: 'U40 Lite'
    - regex: '(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'HITV300C(?:[);/ ]|$)'
      model: 'E9'
    - regex: 'E260T\+(?:[);/ ]|$)'
      model: 'Nana'
    - regex: '(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9\-]*)'
      model: '$1'

    - regex: '(HAT4KDTV)(?:[);/ ]|$)'
      device: 'tv'
      model: '$1'

    - regex: '(?:HS-)?Hisense ([^;/]+) Build'
      model: '$1'
    - regex: 'Hisense ([^);/]+)'
      model: '$1'

# Hi-Level
Hi-Level:
  regex: 'HLV-T([a-z0-9]+)'
  device: 'tablet'
  model: 'HLV-T$1'

# Hoffmann
Hoffmann:
  regex: '(HOFFMANN|Neo[_ ]A[1379]00)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Neo[_ ](A[1379]00)'
      model: 'Neo $1'
    - regex: 'HOFFMANN[ _]X[-_ ](Prime|Twist|Max)'
      model: 'X $1'


# Homtom
Homtom:
  regex: 'Homtom|(?:HT[0-9]{1,2})(?: ?Pro)?(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(?:Homtom[_ ])?HT ?([0-9]{1,2}(?: ?Pro)?)(?:[);/ ]|$)'
      model: 'HT$1'
    - regex: 'Homtom ([^;/]+) Build'
      model: '$1'
# Hosin
Hosin:
  regex: 'HOSIN[ _-]'
  device: 'smartphone'
  models:
    - regex: 'HOSIN[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'HOSIN[ _-]([^;/]+)(?:[;/)]|$)'
      model: '$1'

# Hoozo
Hoozo:
  regex: '(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|HZ0010)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)(?:[);/ ]|$)'
      model: '$1'
    - regex: '(HZ0010)(?:[);/ ]|$)'
      model: '$1'

# Minix (minix.us)
Minix:
  regex: 'NEO-(?:X8-H|U9-H|X[57]-mini|X8H-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64)(?:[);/ ]|$)'
  device: 'tv'
  models:
    - regex: 'NEO-X8-H(?:[);/ ]|$)'
      model: 'NEO X8H'
    - regex: 'NEO-X([57])-mini(?:[);/ ]|$)'
      model: 'NEO X$1 Mini'
    - regex: 'NEO-X8H-PLUS(?:[);/ ]|$)'
      model: 'NEO X8H Plus'
    - regex: 'NEO-X88-?I(?:[);/ ]|$)'
      model: 'NEO X88i'
    - regex: 'NEO-X7-216A(?:[);/ ]|$)'
      model: 'NEO X7'
    - regex: 'NEO-X5-116A(?:[);/ ]|$)'
      model: 'NEO X5'
    - regex: 'NEO-X([68])(?:[);/ ]|$)'
      model: 'NEO X$1'
    - regex: 'NEO-U1(?:[);/ ]|$)'
      model: 'NEO U1'
    - regex: 'NEO-Z64(?:[);/ ]|$)'
      model: 'NEO Z64'
    - regex: 'NEO-U9-H(?:[);/ ]|$)'
      model: 'NEO U9H'

# Huawei
Huawei:
  regex: '(HW-)?(?:Huawei|MediaPad T1|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[23]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CM]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|ELE|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21[Lw]|A23L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|AL10)|OXF-AN[01]0|TAS-(A[LN]00|L29|TL00)|WLZ-(AL10|AN00)|NIC-LX1A|MRX-(AL09|W09)|CDY-(?:[AT]N00|AN90|NX9A)|GLK-(?:[AT]L00|LX1U)|JER-[AT]N10|ELS-(?:[AT]N[10]0|NX9|N39|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-AN[12]0|AQM-([AT]L[01]0|LX1)|MOA-(AL[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]|L29N?|L28)|MED-(?:[AT]L00|LX9N?)|EBG-(?:AN[01]0|TN00)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN00|MXW-AN00|JKM-AL00[ab]|TAH-(?:N29|AN00)m|C8817D|T1-821W|d-01[JK]|d-02[HK]|KRJ-W09|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN00)|TNNH-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2-[LW]09|AGS3-[WL]09|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-[LW]09|PPA-LX[12]|ANG-AN00|NOP-AN00'
  device: 'smartphone'
  models:
    - regex: 'POT-[TA]L00a(?:[);/ ]|$)'
      model: '9S'
    - regex: 'U9500(?:[);/ ]|$)'
      model: 'Ascend D1'
    - regex: 'Z100-UL00(?:[);/ ]|$)'
      model: 'Ascend D3'
    - regex: 'Y320-(?:U10|T00|U05)(?:[);/ ]|$)'
      model: 'Ascend Y320'
    - regex: 'Y330-U05(?:[);/ ]|$)'
      model: 'Ascend Y330'
    - regex: 'Y541-U02(?:[);/ ]|$)'
      model: 'Ascend Y5C'
    - regex: 'U8818(?:[);/ ]|$)'
      model: 'Ascend G300'
    - regex: 'G527-U081(?:[);/ ]|$)'
      model: 'Ascend G527'
    - regex: '(G620S-L0[13]|C8817D)(?:[);/ ]|$)'
      model: 'Ascend G620S'
    - regex: 'G630-U251(?:[);/ ]|$)'
      model: 'Ascend G630'
    - regex: 'G7-(?:L01|TL00)(?:[);/ ]|$)'
      model: 'Ascend G7'
    - regex: 'P7-L10(?:[);/ ]|$)'
      model: 'Ascend P7'
    - regex: 'G730-C00(?:[);/ ]|$)'
      model: 'Ascend G730'
    - regex: 'U9200(?:[);/ ]|$)'
      model: 'Ascend P1'
    - regex: 'H1711(?:[);/ ]|$)'
      model: 'Ascend XT2'
    - regex: 'Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)'
      model: 'Ascend Y221'
    - regex: 'Y550-L03(?:[);/ ]|$)'
      model: 'Ascend Y550'
    - regex: 'ART-[AT]L00[xm](?:[);/ ]|$)'
      model: 'Enjoy 10'
    - regex: 'STK-[AT]L00(?:[);/ ]|$)'
      model: 'Enjoy 10 Plus'
    - regex: 'MED-[AT]L00(?:[);/ ]|$)'
      model: 'Enjoy 10E'
    - regex: 'AQM-[AT]L00(?:[);/ ]|$)'
      model: 'Enjoy 10S'
    - regex: 'TAG-[ACT]L00(?:[);/ ]|$)'
      model: 'Enjoy 5S'
    - regex: 'NCE-(AL[10]0|TL10)(?:[);/ ]|$)'
      model: 'Enjoy 6'
    - regex: 'DIG-(?:TL10|AL00)(?:[);/ ]|$)'
      model: 'Enjoy 6S'
    - regex: 'SLA-(?:AL00|TL10)(?:[);/ ]|$)'
      model: 'Enjoy 7'
    - regex: 'FIG-(?:[AT]L[10]0)(?:[);/ ]|$)'
      model: 'Enjoy 7S'
    - regex: '(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)'
      model: 'Enjoy 7 Plus'
    - regex: 'LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)'
      model: 'Enjoy 8'
    - regex: 'FLA-AL10(?:[);/ ]|$)'
      model: 'Enjoy 8 Plus'
    - regex: 'ATU-[AT]L10(?:[);/ ]|$)'
      model: 'Enjoy 8e'
    - regex: 'MRD-[TA]L00(?:[);/ ]|$)'
      model: 'Enjoy 9e'
    - regex: 'DVC-TN20(?:[);/ ]|$)'
      model: 'Enjoy 20 Pro'
    - regex: 'U8665(?:[);/ ]|$)'
      model: 'Fusion 2'
    - regex: 'MED-LX9N?(?:[);/ ]|$)'
      model: 'Y6p'
    - regex: 'G735-L(?:03|12|23)(?:[);/ ]|$)'
      model: 'G Play'
    - regex: 'CHC-U(?:0[13]|23)(?:[);/ ]|$)'
      model: 'G Play Mini'
    - regex: '(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)'
      model: 'G621'
    - regex: 'DIG-L2[12](?:[);/ ]|$)'
      model: 'GR3 (2017)'
    - regex: 'KII-L21(?:[);/ ]|$)'
      model: 'GR5'
    - regex: 'BLL-L2[12](?:[);/ ]|$)'
      model: 'GR5 (2017)'
    - regex: 'RIO-L03(?:[);/ ]|$)'
      model: 'GX8'
    - regex: 'U8860(?:[);/ ]|$)'
      model: 'Honor'
    - regex: 'COL-(?:AL[01]0|TL[01]0|L29)(?:[);/ ]|$)'
      model: 'Honor 10'
    - regex: 'HRY-(?:[AT]L00[A]?|LX[12]|LX1MEB)(?:[);/ ]|$)'
      model: 'Honor 10 Lite'
    - regex: 'HRY-LX1T(?:[);/ ]|$)'
      model: 'Honor 10I'
    - regex: 'U9508(?:[);/ ]|$)'
      model: 'Honor 2'
    - regex: 'YAL-(?:L21|[AT]L00)(?:[);/ ]|$)'
      model: 'Honor 20'
    - regex: 'LRA-AL00(?:[);/ ]|$)'
      model: 'Honor 20 Lite'
    - regex: '(HRY-AL00T[a]?)(?:[);/ ]|$)'
      model: 'Honor 20I'
    - regex: 'YAL-(L41|AL10)(?:[);/ ]|$)'
      model: 'Honor 20 Pro'
    - regex: '(MAR-LX1H|YAL-AL50)(?:[);/ ]|$)'
      model: 'Honor 20S'
    - regex: '(?:BMH-AN[12]0|MXW-AN00)(?:[);/ ]|$)'
      model: 'Honor 30'
    - regex: 'EBG-[AT]N00(?:[);/ ]|$)'
      model: 'Honor 30 Pro'
    - regex: 'EBG-AN10(?:[);/ ]|$)'
      model: 'Honor 30 Pro Plus'
    - regex: 'CDY-(?:AN90|NX9A)(?:[);/ ]|$)'
      model: 'Honor 30S'
    - regex: 'LRA-LX1(?:[);/ ]|$)'
      model: 'Honor 30I'
    - regex: '(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)'
      model: 'Honor 3C'
    - regex: 'Hol-U19(?:[);/ ]|$)'
      model: 'Honor 3C Lite'
    - regex: 'G750-T01(?:[);/ ]|$)'
      model: 'Honor 3X'
    - regex: '(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)'
      model: 'Honor 4A'
    - regex: '(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)'
      model: 'Honor 4C'
    - regex: 'Honor 4c Pro(?:[);/ ]|$)'
      model: 'Honor 4C Pro'
    - regex: 'AQM-AL10(?:[);/ ]|$)'
      model: 'Honor 4T Pro'
    - regex: '(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)'
      model: 'Honor 4X'
    - regex: '(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)'
      model: 'Honor 5 Play'
    - regex: '(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)'
      model: 'Honor 5A'
    - regex: '(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)'
      model: 'Honor 5C'
    - regex: '(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)'
      model: 'Honor 5C Dual SIM'
    - regex: '(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)'
      model: 'Honor 5X'
    - regex: '((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1)(?:[);/ ]|$)'
      model: 'Honor 6'
    - regex: 'MYA-TL10(?:[);/ ]|$)'
      model: 'Honor 6 Play'
    - regex: 'PE-(UL00|TL[12]0|TL00M)(?:[);/ ]|$)'
      model: 'Honor 6 Plus'
    - regex: '(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)'
      model: 'Honor 6A'
    - regex: 'DIG-L21HN(?:[);/ ]|$)'
      model: 'Honor 6C'
    - regex: 'JMM-L22(?:[);/ ]|$)'
      model: 'Honor 6C Pro'
    - regex: '(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1234]0|TL[01]0(?:[);/ ]|$))'
      model: 'Honor 6X'
    - regex: '(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)'
      model: 'Honor 7'
    - regex: '(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)'
      model: 'Honor 7 Lite'
    - regex: 'AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)'
      model: 'Honor 7A'
    - regex: 'AUM-L29(?:[);/ ]|$)'
      model: 'Honor 7A Pro'
    - regex: '(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL40)|AUM-L41)(?:[);/ ]|$)'
      model: 'Honor 7C'
    - regex: 'ATH-(?:[CAU]L00|TL00H)(?:[);/ ]|$)'
      model: 'Honor 7i'
    - regex: '(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)'
      model: 'Honor 7S'
    - regex: '(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)'
      model: 'Honor 7X'
    - regex: '(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)'
      model: 'Honor 8'
    - regex: 'PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)'
      model: 'Honor 8 Lite'
    - regex: 'DUK-(?:L09|TL30)(?:[);/ ]|$)'
      model: 'Honor 8 Pro'
    - regex: 'VEN-L22(?:[);/ ]|$)'
      model: 'Honor 8 Smart'
    - regex: 'JAT-L(29|X[13])(?:[);/ ]|$)'
      model: 'Honor 8A'
    - regex: 'JAT-L41(?:[);/ ]|$)'
      model: 'Honor 8A Pro'
    - regex: 'BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)'
      model: 'Honor 8C'
    - regex: 'KSA-(LX[239]|AL00)(?:[);/ ]|$)'
      model: 'Honor 8S'
    - regex: 'JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)'
      model: 'Honor 8X'
    - regex: 'ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)'
      model: 'Honor 8X Max'
    - regex: 'STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)'
      model: 'Honor 9'
    - regex: 'MOA-LX9N(?:[);/ ]|$)'
      model: 'Honor 9A'
    - regex: 'AKA-L29(?:[);/ ]|$)'
      model: 'Honor 9C'
    - regex: 'LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)'
      model: 'Honor 9 Lite'
    - regex: 'LLD-AL[23]0(?:[);/ ]|$)'
      model: 'Honor 9i'
    - regex: 'DUA-LX9(?:[);/ ]|$)'
      model: 'Honor 9S'
    - regex: 'HLK-AL00a?(?:[);/ ]|$)'
      model: 'Honor 9X'
    - regex: 'HLK-(?:AL10|L4[12])(?:[);/ ]|$)'
      model: 'Honor 9X Pro'
    - regex: 'CAM-UL00(?:[);/ ]|$)'
      model: 'Honor Holly 3'
    - regex: 'NTS-AL00(?:[);/ ]|$)'
      model: 'Honor Magic'
    - regex: 'TNY-[AT]L00(?:[);/ ]|$)'
      model: 'Honor Magic 2'
    - regex: 'RVL-AL09(?:[);/ ]|$)'
      model: 'Honor Note 10'
    - regex: 'EDI-AL10(?:[);/ ]|$)'
      model: 'Honor Note 8'
    - regex: 'VKY-TL00(?:[);/ ]|$)'
      model: 'Honor P10 Plus'
    - regex: 'VOG-AL00(?:[);/ ]|$)'
      model: 'Honor P30 Pro'
    - regex: 'ANA-(?:[AT]N00|NX9)(?:[);/ ]|$)'
      model: 'Honor P40'
    - regex: 'COR-(?:AL[01]0|L29|TL10)(?:[);/ ]|$)'
      model: 'Honor Play'
    - regex: 'ASK-AL00x(?:[);/ ]|$)'
      model: 'Honor Play 3'
    - regex: 'KSA-AL10(?:[);/ ]|$)'
      model: 'Honor Play 3E'
    - regex: 'TNNH-AN00(?:[);/ ]|$)'
      model: 'Honor Play 4'
    - regex: 'CHM-[CUT]L00[HM]?(?:[);/ ]|$)'
      model: 'Honor Play 4C'
    - regex: 'AKA-AL10(?:[);/ ]|$)'
      model: 'Honor Play 4T'
    - regex: 'DUA-[TA]L00(?:[);/ ]|$)'
      model: 'Honor Play 7'
    - regex: 'JAT-[AT]L00(?:[);/ ]|$)'
      model: 'Honor Play 8A'
    - regex: 'MOA-AL[02]0(?:[);/ ]|$)'
      model: 'Honor Play 9A'
    - regex: 'BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)'
      model: 'Honor V10'
    - regex: 'PCT-[TA]L10(?:[);/ ]|$)'
      model: 'Honor V20'
    - regex: 'KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)'
      model: 'Honor V8'
    - regex: 'DUK-AL20(?:[);/ ]|$)'
      model: 'Honor V9'
    - regex: 'JMM-[AT]L[01]0(?:[);/ ]|$)'
      model: 'Honor V9 Play'
    - regex: 'BKL-L04(?:[);/ ]|$)'
      model: 'Honor View 10'
    - regex: 'PCT-L29(?:[);/ ]|$)'
      model: 'Honor View 20'
    - regex: 'OXF-AN00(?:[);/ ]|$)'
      model: 'Honor View 30'
    - regex: 'OXF-AN10(?:[);/ ]|$)'
      model: 'Honor View 30 Pro'
    - regex: '(?:Honor_|HW-)?SCL-L(01|32)(?:_TD)?(?:[);/ ]|$)'
      model: 'Honor Y6'
    - regex: '(?:Honor_|HW-)?LYO-L21(?:[);/ ]|$)'
      model: 'Honor Y6 II Compact'
    - regex: 'TEL-(?:AN(?:00a?|10)|TN00)(?:[);/ ]|$)'
      model: 'Honor X10'
    - regex: 'KKG-AN00(?:[);/ ]|$)'
      model: 'Honor X10 Max'
    - regex: 'DNN-LX9(?:[);/ ]|$)'
      model: 'Honor X10 Lite'
    - regex: 'U8500(?:[);/ ]|$)'
      model: 'Ideos X2'
    - regex: 'U8510(?:[);/ ]|$)'
      model: 'Ideos X3'
    - regex: 'U8800(?:[);/ ]|$)'
      model: 'Ideos X5'
    - regex: 'MLA-AL10(?:[);/ ]|$)'
      model: 'Maimang 5'
    - regex: 'POT-AL10(?:[);/ ]|$)'
      model: 'Maimang 8'
    - regex: 'TAH-(?:N29|AN00)m(?:[);/ ]|$)'
      model: 'Mate XS'
    - regex: 'ALP-(?:[TA]L00|L[02]9)(?:[);/ ]|$)'
      model: 'Mate 10'
    - regex: 'RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)'
      model: 'Mate 10 Lite'
    - regex: 'BLA-(?:A09|L[02]9|[TA]L00)(?:[);/ ]|$)'
      model: 'Mate 10 Pro'
    - regex: 'HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)'
      model: 'Mate 20'
    - regex: 'SNE-(?:AL00|LX[0-3])(?:[);/ ]|$)'
      model: 'Mate 20 Lite'
    - regex: 'LYA-(?:AL[01]0|L[02]9|L0C|TL00)(?:[);/ ]|$)'
      model: 'Mate 20 Pro'
    - regex: 'LYA-AL00P(?:[);/ ]|$)'
      model: 'Mate 20 RS'
    - regex: 'EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)'
      model: 'Mate 20 X'
    - regex: 'TAS-([AT]L00|L29)(?:[);/ ]|$)'
      model: 'Mate 30'
    - regex: 'TAS-AN00(?:[);/ ]|$)'
      model: 'Mate 30 5G'
    - regex: 'SPN-AL00(?:[);/ ]|$)'
      model: 'Mate 30 Lite'
    - regex: 'LIO-(?:[TA]L00|L29|AN00)(?:[);/ ]|$)'
      model: 'Mate 30 Pro'
    - regex: 'LIO-N29(?:[);/ ]|$)'
      model: 'Mate 30 Pro 5G'
    - regex: 'NOH-(?:NX9|AN00)(?:[);/ ]|$)'
      model: 'Mate 40 Pro'
    - regex: 'NOP-AN00(?:[);/ ]|$)'
      model: 'Mate 40 Pro+'
    - regex: 'NXT-(?:AL10|L29)(?:[);/ ]|$)'
      model: 'Mate 8'
    - regex: 'MHA-(?:L[02]9|[AT]L00)(?:[);/ ]|$)'
      model: 'Mate 9'
    - regex: 'BLL-L23(?:[);/ ]|$)'
      model: 'Mate 9 Lite'
    - regex: 'LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)'
      model: 'Mate 9 Pro'
    - regex: 'NEO-AL00(?:[);/ ]|$)'
      model: 'Mate RS'
    - regex: 'NEO-L29(?:[);/ ]|$)'
      model: 'Mate RS Porsche Design'
    - regex: 'CRR-(?:L09|UL00)(?:[);/ ]|$)'
      model: 'Mate S'
    - regex: 'BND-L34(?:[);/ ]|$)'
      model: 'Mate SE'
    - regex: '(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)'
      model: 'Nova'
    - regex: '608HW(?:[);/ ]|$)'
      model: 'Nova Lite'
    - regex: '(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)'
      model: 'Nova 2'
    - regex: '704HW(?:[);/ ]|$)'
      model: 'Nova 2 Lite'
    - regex: 'BAC-(?:L01|TL00)(?:[);/ ]|$)'
      model: 'Nova 2 Plus'
    - regex: 'BAC-(?:AL00|L2[12])(?:[);/ ]|$)'
      model: 'Nova 2 Plus Dual SIM'
    - regex: 'RNE-L[02]2(?:[);/ ]|$)'
      model: 'Nova 2I'
    - regex: 'HWI-[AT]L00(?:[);/ ]|$)'
      model: 'Nova 2S'
    - regex: 'PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)'
      model: 'Nova 3'
    - regex: 'ANE-AL00(?:[);/ ]|$)'
      model: 'Nova 3e'
    - regex: 'INE-(?:AL00|LX[12]r|LX[12]|TL00)(?:[);/ ]|$)'
      model: 'Nova 3i'
    - regex: 'VCE-(L22|[AT]L00)(?:[);/ ]|$)'
      model: 'Nova 4'
    - regex: 'MAR-AL00(?:[);/ ]|$)'
      model: 'Nova 4e'
    - regex: 'SEA-AL00(?:[);/ ]|$)'
      model: 'Nova 5'
    - regex: 'SEA-AL10(?:[);/ ]|$)'
      model: 'Nova 5 Pro'
    - regex: 'GLK-(?:[AT]L00|LX1U)(?:[);/ ]|$)'
      model: 'Nova 5i'
    - regex: 'SPN-TL00(?:[);/ ]|$)'
      model: 'Nova 5i Pro'
    - regex: 'WLZ-AL10(?:[);/ ]|$)'
      model: 'Nova 6'
    - regex: 'WLZ-AN00(?:[);/ ]|$)'
      model: 'Nova 6 5G'
    - regex: 'JNY-AL10(?:[);/ ]|$)'
      model: 'Nova 6 SE'
    - regex: 'JEF-(?:[AT]N00|AN20|NX9)(?:[);/ ]|$)'
      model: 'Nova 7 5G'
    - regex: 'JER-[AT]N10(?:[);/ ]|$)'
      model: 'Nova 7 Pro 5G'
    - regex: 'CDY-(?:[AT]N00|NX9B)(?:[);/ ]|$)'
      model: 'Nova 7 SE 5G'
    - regex: 'JNY-LX2(?:[);/ ]|$)'
      model: 'Nova 7i'
    - regex: 'ANG-AN00(?:[);/ ]|$)'
      model: 'Nova 8 5G'
    - regex: 'DIG-L01(?:[);/ ]|$)'
      model: 'Nova Smart'
    - regex: 'WAS-AL00(?:[);/ ]|$)'
      model: 'Nova Youth'
    - regex: 'FIG-L(?:A1|X[123])(?:[);/ ]|$)'
      model: 'P smart'
    - regex: 'POT-(?:LX(?:[13]|1T|2J|1AF)|AL00)(?:[);/ ]|$)'
      model: 'P smart (2019)'
    - regex: 'POT-LX1A(?:[);/ ]|$)'
      model: 'P smart (2020)'
    - regex: 'PPA-LX[12](?:[);/ ]|$)'
      model: 'P smart (2021)'
    - regex: 'STK-LX1(?:[);/ ]|$)'
      model: 'P smart Z'
    - regex: 'VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)'
      model: 'P10'
    - regex: 'WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)'
      model: 'P10 Lite'
    - regex: 'VKY-(?:AL00|L09|L29)(?:[);/ ]|$)'
      model: 'P10 Plus'
    - regex: 'BAC-L[02]3(?:[);/ ]|$)'
      model: 'P10 Selfie'
    - regex: 'EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)'
      model: 'P20'
    - regex: '(?:ANE-(?:LX[123]|LX2J|TL00)|HWV32)(?:[);/ ]|$)'
      model: 'P20 Lite'
    - regex: '(?:CLT-(?:AL0[01]|TL0[01]|L(?:04|[02]9))|HW-01K)(?:[);/ ]|$)'
      model: 'P20 Pro'
    - regex: '(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)'
      model: 'P30'
    - regex: '(?:MAR-(?:LX(?:1[BM]|2J?|3BM)|TL00)|NIC-LX1A|HWV33)(?:[);/ ]|$)'
      model: 'P30 Lite'
    - regex: 'MAR-LX[13]Am?(?:[);/ ]|$)'
      model: 'P30 Lite Dual SIM'
    - regex: '(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)'
      model: 'P30 Pro'
    - regex: 'ANA-LX4(?:[);/ ]|$)'
      model: 'P40'
    - regex: 'JNY-LX1(?:[);/ ]|$)'
      model: 'P40 Lite'
    - regex: 'ART-L29(?:[);/ ]|$)'
      model: 'P40 Lite E'
    - regex: 'ART-L29N(?:[);/ ]|$)'
      model: 'P40 Lite E NFC'
    - regex: '(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)'
      model: 'P40 Pro'
    - regex: 'ELS-(?:AN10|N39)(?:[);/ ]|$)'
      model: 'P40 Pro Plus'
    - regex: 'GRA-(?:L09|UL00)(?:[);/ ]|$)'
      model: 'P8'
    - regex: '(?:ALE-L(?:02|21|23)|ALE-UL00|ALE-TL00|503HW)(?:[);/ ]|$)'
      model: 'P8 Lite (2015)'
    - regex: '(?:PRA-L(?:A1|X2|X1|X3)|hi6210sft)(?:[);/ ]|$)'
      model: 'P8 Lite (2017)'
    - regex: 'EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)'
      model: 'P9'
    - regex: 'VNS-L(?:[23]1|[26]2)(?:[);/ ]|$)'
      model: 'P9 Lite'
    - regex: 'SLA-L(?:02|03|22|23)(?:[);/ ]|$)'
      model: 'P9 Lite Mini'
    - regex: 'DIG-L(?:03|23)(?:[);/ ]|$)'
      model: 'P9 Lite Smart'
    - regex: 'VIE-(?:AL10|L[02]9)(?:[);/ ]|$)'
      model: 'P9 Plus'
    - regex: 'ATH-UL0[16](?:[);/ ]|$)'
      model: 'ShotX'
    - regex: 'U(8230|8661|8667)(?:[);/ ]|$)'
      model: 'U$1'
    - regex: 'ARS-([AT]L00|L22)(?:[);/ ]|$)'
      model: 'Y Max'
    - regex: 'CRO-(?:L[02]2|U00)(?:[);/ ]|$)'
      model: 'Y3 (2017)'
    - regex: 'CAG-L[02]2(?:[);/ ]|$)'
      model: 'Y3 (2018)'
    - regex: 'LUA-(U22|L2[12]|U03)(?:[);/ ]|$)'
      model: 'Y3II'
    - regex: 'MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)'
      model: 'Y5 (2017)'
    - regex: 'DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)'
      model: 'Y5 (2018)'
    - regex: 'AMN-LX[1239](?:[);/ ]|$)'
      model: 'Y5 (2019)'
    - regex: 'DRA-LX5(?:[);/ ]|$)'
      model: 'Y5 lite'
    - regex: 'DRA-LX9(?:[);/ ]|$)'
      model: 'Y5p'
    - regex: 'CRO-L[02]3(?:[);/ ]|$)'
      model: 'Y5 Lite (2017)'
    - regex: 'CAG-L[02]3(?:[);/ ]|$)'
      model: 'Y5 Lite (2018)'
    - regex: 'DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)'
      model: 'Y5 Prime (2018)'
    - regex: 'MYA-L13(?:[);/ ]|$)'
      model: 'Y5 Pro (2017)'
    - regex: 'CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)'
      model: 'Y5II'
    - regex: '(?:SCC-U21|SCL-U31)(?:[);/ ]|$)'
      model: 'Y6'
    - regex: 'MYA-L11(?:[);/ ]|$)'
      model: 'Y6 (2016)'
    - regex: 'MYA-(L41|AL10)(?:[);/ ]|$)'
      model: 'Y6 (2017)'
    - regex: 'ATU-L(?:11|21|22|X3)(?:[);/ ]|$)'
      model: 'Y6 (2018)'
    - regex: 'MRD-L(?:X1[NF]?|X3)(?:[);/ ]|$)'
      model: 'Y6 (2019)'
    - regex: 'ATU-L(?:31|42)(?:[);/ ]|$)'
      model: 'Y6 Prime (2018)'
    - regex: 'TIT-(?:AL00|L01|U02)(?:[);/ ]|$)'
      model: 'Y6 Pro'
    - regex: 'MRD-LX2(?:[);/ ]|$)'
      model: 'Y6 Pro (2019)'
    - regex: 'Y625-U03(?:[);/ ]|$)'
      model: 'Y625'
    - regex: 'Y635-L0[123](?:[);/ ]|$)'
      model: 'Y635'
    - regex: 'Y635-L21(?:[);/ ]|$)'
      model: 'Y635 Dual SIM'
    - regex: 'CAM-L(?:03|21|23|32)(?:[);/ ]|$)'
      model: 'Y6II'
    - regex: 'TRT-LX[123](?:[);/ ]|$)'
      model: 'Y7 (2017)'
    - regex: 'LDN-L(?:01|X3)(?:[);/ ]|$)'
      model: 'Y7 (2018)'
    - regex: '(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)'
      model: 'Y7 (2019)'
    - regex: '(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)'
      model: 'Y7 Prime'
    - regex: '(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)'
      model: 'Y7 Prime (2018)'
    - regex: 'DUB-(?:LX2|AL00)(?:[);/ ]|$)'
      model: 'Y7 Pro (2019)'
    - regex: 'DUB-AL00a(?:[);/ ]|$)'
      model: 'Enjoy 9'
    - regex: 'DUB-AL20(?:[);/ ]|$)'
      model: 'Y7 Pro (2019)'
    - regex: 'PPA-LX3(?:[);/ ]|$)'
      model: 'Y7a'
    - regex: 'ART-L28(?:[);/ ]|$)'
      model: 'Y7p'
    - regex: 'AQM-LX1(?:[);/ ]|$)'
      model: 'Y8p'
    - regex: 'FLA-(LX[123]|AL20|TL10)(?:[);/ ]|$)'
      model: 'Y9 (2018)'
    - regex: 'JKM-(?:[TA]L00[ab]?|LX[123])(?:[);/ ]|$)'
      model: 'Y9 (2019)'
    - regex: 'STK-(L2[12]|LX3)(?:[);/ ]|$)'
      model: 'Y9 Prime (2019)'
    - regex: 'FRL-L2[23](?:[);/ ]|$)'
      model: 'Y9a'

    - regex: 'HWT31(?:[);/ ]|$)'
      model: 'Qua Tab 02 10.1"'
      device: 'tablet'
    - regex: 'HDN-[LW]09(?:[);/ ]|$)'
      model: 'Honor Water Play 10.1'
      device: 'tablet'
    - regex: 'BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)'
      model: 'MatePad 10.4"'
      device: 'tablet'
    - regex: 'BAH3-W59(?:[);/ ]|$)'
      model: 'MatePad 10.4" WiFi'
      device: 'tablet'
    - regex: 'AGS3-[WL]09(?:[);/ ]|$)'
      model: 'MatePad T10s'
      device: 'tablet'
    - regex: 'HDL-(?:W09|AL09)(?:[);/ ]|$)'
      model: 'Honor Water Play 8.0'
      device: 'tablet'
    - regex: 'JDN-(?:AL00|W09)(?:[);/ ]|$)'
      model: 'Honor Pad 2'
      device: 'tablet'
    - regex: 'KRJ-W09(?:[);/ ]|$)'
      model: 'Honor Pad V6'
      device: 'tablet'
    - regex: 'MON-(W|AL)19(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MatePad C5 8'
    - regex: 'BZA-W00(?:[);/ ]|$)'
      device: 'tablet'
      model: 'C3 9.6'
    - regex: 'M2-801L(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M2 8.0"'
    - regex: 'MRX-(AL09|W09)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MatePad Pro'
    - regex: 'CMR-(?:AL[01]9|W09)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M5 10.8'
    - regex: 'CMR-W19(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M5 Pro 10.8'
    - regex: 'SCM-AL09(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M5 Pro'
    - regex: 'GEM-70[1-3]L(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad X2'
    - regex: '(?:JDN2-(:?[WL]09|AL[50]0)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M5 Lite'  #8.4
    - regex: 'SHT-(?:AL|W)09(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M5 8.4'
    - regex: 'VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M6 8.4'
    - regex: 'SCM-W09(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M6 10'
    - regex: 'BTV-W09(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M3 8'
    - regex: '(BAH-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M3 Lite'
    - regex: 'BAH-(?:L09|AL00)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad M3 Lite 10'
    - regex: 'BTV-DL09'
      device: 'tablet'
      model: 'MediaPad M3'
    - regex: '(AGS2-AL00|JDN2-W09)HN(?:[);/ ]|$)'
      device: 'tablet'
      model: 'Honor Tab 5'
    - regex: 'AGS2-(?:[LW]09|W19|L03)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T5 10'
    - regex: 'KOB2-[LW]09(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T 8.0"'
    - regex: 'AGR-[LW]09(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T 10'
    - regex: 'AGS-(?:L0[39]|W09)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T3 10'
    - regex: '(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T3 8'
    - regex: 'BG2-(?:U0[13]|W09)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T3 7'
    - regex: 'BGO-L03(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T2 7.0'
    - regex: '(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T2 7.0 Pro'
    - regex: 'JDN-L01(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T2 8.0 Pro'
    - regex: '(?:FDR-(A01[LW]|A03L)|605HW)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T2 10.0" Pro'
    - regex: 'T1-(?:A21[LW]|A23L)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T1 10'
    - regex: 'T1-701u(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T1 7'
    - regex: '(?:T1-82(?:3L|1W)|MediaPad T1 8.0)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad T1 8'
    - regex: 'AGS2-AL00(?:[);/ ]|$)'
      device: 'tablet'
      model: 'Enjoy Tablet 10.1'
    - regex: 'BZT-(W09|AL[01]0)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'MediaPad C5 10.1'
    - regex: '(?:d-01J|d-02[HK])(?:[);/ ]|$)'
      device: 'tablet'
      model: 'D Tab Compact'
    - regex: '(d-01K)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'dtab d-01K'


      # smart watch regex
    - regex: 'LEO-BX9(?:[);/ ]|$)'
      device: 'wearable'
      model: 'Smart Watch 2'

      # common regex
    - regex: '(MediaPad[^/;]*) Build'
      device: 'tablet'
      model: '$1'
    - regex: 'Ideos([^;/]*) Build'
      model: 'Ideos$1'
    - regex: '(?:HUAWEI )?MT([0-9]+)'
      device: 'phablet'
      model: 'Ascend Mate $1'
    - regex: 'Huawei[ _\-]?([^/;]*) Build'
      model: '$1'
    - regex: '(?:HW-)?Huawei(?!Browser)(?:/1\.0/0?(?:Huawei))?[_\- /]?([a-z0-9\-_]+)'
      model: '$1'
    - regex: 'Huawei; ([a-z0-9 \-]+)'
      model: '$1'

# Hyundai
Hyundai:
  regex: 'Hyundai|Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|G(24027|2552[34])K|W25042L|HP554O|Seoul S8|L503F Plus|HT0701L16|HT0704K08|HT1004L16|HT1004LI16|Koral_8W2|Eternity[_ ]G25'
  device: 'smartphone'
  models:
    - regex: 'Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)'
      model: 'Ultra $1'
    - regex: 'Seoul S8'
      model: 'Seoul S8'
    - regex: 'G25523K'
      model: 'Eternity G23'
    - regex: 'Eternity[_ ]G25'
      model: 'Eternity G25'
    - regex: 'G25524K'
      model: 'Eternity G24'
    - regex: 'G24027K'
      model: 'Eternity G27'
    - regex: 'W25042L'
      model: 'Eternity W42'
    - regex: 'HP554O'
      model: 'HP554O'
    - regex: 'L503F Plus'
      model: 'L503F Plus'
    - regex: 'L503F Plus'
      model: 'L503F Plus'
    - regex: '(?:Hyundai_)?(Eternity_G57L)'
      model: '$1'

    # explicit tables models
    - regex: 'HT0701L16'
      model: 'Koral 7XL'
      device: 'tablet'
    - regex: 'HT1004LI16'
      model: 'Koral 10XL'
      device: 'tablet'
    - regex: 'Koral_8W2'
      model: 'Koral 8W2'
      device: 'tablet'
    - regex: 'HT1004L16'
      model: 'Koral 10XL'
      device: 'tablet'
    - regex: 'HT0704K08'
      model: 'Koral 7M4'
      device: 'tablet'
    - regex: 'Hyundai ([^;/]+) Build'
      model: '$1'
      device: 'tablet'
    - regex: 'Hyundai[ _\-]?([a-z0-9_-]+)'
      model: '$1'
      device: 'tablet'

#i-Joy
'i-Joy':
  regex: 'i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: 'Elektra M(?:[);/ ]|$)'
      model: 'Elektra M'
    - regex: 'Elektra L(?:[);/ ]|$)'
      model: 'Elektra L'
    - regex: 'Elektra XL(?:[);/ ]|$)'
      model: 'Elektra XL'
    - regex: 'Elektra XXL(?:[);/ ]|$)'
      model: 'Elektra XXL'
      device: 'phablet'

    # explicit tablet models
    - regex: 'Neon([79])(?:[);/ ]|$)'
      model: 'Neon $1'
      device: 'tablet'
    - regex: 'Sygnus(?:[);/ ]|$)'
      model: 'Sygnus'
      device: 'tablet'
    - regex: 'Deox(?:[);/ ]|$)'
      model: 'Deox'
      device: 'tablet'

    - regex: 'i-Call ([^;/]+) Build'
      model: 'i-Call $1'
    - regex: 'i-Joy ([^;/]+) Build'
      model: '$1'

# iBall (iball.co.in)
iBall:
  regex: 'iBall[ _]([^;/)]+)[ _]Build|iBall_Slide|(?:Snap[_ ]4G2|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'Andi Wink 4G'
      device: 'smartphone'
      model: 'Andi Wink 4G'
    - regex: 'Andi 5G Blink 4G'
      device: 'smartphone'
      model: 'Andi 5G Blink 4G'
    - regex: '(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2)(?:[);/ ]|$)'
      model: '$1'
    - regex: '6351-Q400i(?:[);/ ]|$)'
      model: 'Slide'
    - regex: 'iT-KSA0003(?:[);/ ]|$)'
      model: 'iTAB BizniZ'
    - regex: 'iT-KSA0066(?:[);/ ]|$)'
      model: 'iTAB BizniZ Mini'
    - regex: 'iT-KSA0012(?:[);/ ]|$)'
      model: 'iTAB Moviez Pro'
    - regex: 'iBall[ _]([^;/)]+)(?:[ _]Build|\))'
      model: '$1'

# iRola
iRola:
  regex: 'iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build'
  device: 'tablet'
  models:
    - regex: 'DX758[ _]?Pro'
      model: 'DX758 Pro'
    - regex: '(DX758|DX752)'
      model: '$1'
    - regex: 'iRola ([^/;]+) Build'
      model: '$1'

# iRulu
iRulu:
  regex: 'iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'iRULU[ _](U2)(?:[);/ ]|$)'
      device: 'smartphone'
      model: '$1'

# Irbis
Irbis:
  regex: 'IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|49|55|72|22|7(?:1[124679]|2[021567]|37|4[257]|5[23457]|6[12]|72|7[17]|8[1]|9[147])|8(?:[34]1|5[3-8]|6[45]|7[2478]|8[1-5]|9[0127])|96[0-9])|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571))(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: '(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)'
      model: '$1'
    - regex: '(SP[0-9]+)(?:[);/ ]|$)'
      device: 'smartphone'
      model: '$1'

iBerry:
  regex: 'AUXUS ([^/;]+) Build'
  device: 'smartphone'
  models:
    - regex: 'AUXUS (Core[^/;]+) Build'
      device: 'tablet'
      model: '$1'
    - regex: 'AUXUS ([^/;]+) Build'
      model: '$1'

# iHunt
iHunt:
  regex: 'iHunt|One_ Love_|TITAN_P11000_PRO|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S60_Discovery_2019|AlienXLite2020|Alien X Lite|Alien_X|S20 Ultra ApeX 2021'
  device: 'smartphone'
  models:
    - regex: 'iHunt_Like'
      model: 'Like'
    - regex: 'S10_Tank_2019'
      model: 'S10 Tank (2019)'
    - regex: 'One_ Love_'
      model: 'One Love'
    - regex: 'TITAN_P11000_PRO'
      model: 'Titan P11000 Pro'
    - regex: 'Like_3_Pro'
      model: 'Like 3 Pro'
    - regex: 'Like_3'
      model: 'Like 3'
    - regex: 'Like_4U'
      model: 'Like 4U'
    - regex: 'X300 Elite'
      model: 'X300 Elite'
    - regex: 'S60_Discovery_2019'
      model: 'S60 Discovery (2019)'
    - regex: 'AlienXLite2020'
      model: 'Alien X Lite (2020)'
    - regex: 'Alien X Lite PRO'
      model: 'Alien X Lite Pro'
    - regex: 'Alien X Lite'
      model: 'Alien X Lite'
    - regex: 'Alien_X_ApeX'
      model: 'Alien X ApeX'
    - regex: 'Alien_X'
      model: 'Alien X'
    - regex: 'S20 Ultra ApeX 2021'
      model: 'S20 Ultra ApeX (2021)'

# IconBIT
IconBIT:
  regex: 'IconBIT|NT-(3506M|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad'
  device: 'tablet'
  models:
    - regex: 'NT-3506M'
      device: 'smartphone'
      model: 'NetTAB Mercury Quad FHD'
    - regex: 'NT-0704S'
      model: 'NetTAB Sky LE'
    - regex: 'NT-0909T'
      model: 'NetTAB Thor IZ'
    - regex: 'NT-1009T'
      model: 'NetTAB Thor quad II'
    - regex: 'NT-10[01]1T'
      model: 'NetTAB Thor LE'
    - regex: 'NT-1017T'
      model: 'NetTAB Thor 3G quad'
    - regex: 'NT-3601P/3602P'
      model: 'NetTAB Pocket 3G'
    - regex: 'NT-3603P'
      model: 'NetTAB Pocket 3G Slim'
    - regex: 'NT-3702S'
      model: 'NetTAB Sky HD 3G'
    - regex: 'NT-3805C'
      model: 'NetTAB Skat 3G quad'
    - regex: 'NT-3701S'
      model: 'NetTAB Sky 3G duo'
    - regex: 'NT-3905T'
      model: 'NetTAB Thor ZX 3G'
    - regex: 'NT-0701S'
      model: 'NetTAB Sky net'
    - regex: 'NT-0805C'
      model: 'NetTAB Skat MX'
    - regex: 'NT-0902S'
      model: 'NetTAB Space quad RX'
    - regex: 'NT-3702M'
      model: 'NetTAB Matrix 3G duo'
    - regex: 'NT-3703M'
      model: 'NetTAB Matrix 3GT'

    - regex: '(?:iconBIT )?(Movie Smart 4K|Movie IPTV Quad|Movie Ultra HD 4K|XDS[789]4K|Omnicast UHD)'
      model: '$1'
      device: 'tv'

# LYF
LYF:
  regex: '(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/'
  device: 'smartphone'
  models:
    - regex: 'LS-4004'
      model: 'Flame 2'
    - regex: 'LS-5501'
      model: 'Earth 1'
    - regex: 'LS-5021'
      model: 'Earth 2'
    - regex: 'LS-5505'
      model: 'Water F1'
    - regex: 'LS-4503'
      model: 'Flame LS-4503'
    - regex: 'LS-4001'
      model: 'Flame 3'
    - regex: 'LS-4003'
      model: 'Flame 4'
    - regex: 'LS-4002'
      model: 'Flame 5'
    - regex: 'LS-4005'
      model: 'Flame 6'
    - regex: '(LYF[ _])?LS-4006'
      model: 'Flame 7'
    - regex: 'LS-4008'
      model: 'Flame 7S'
    - regex: 'LS-450[58]'
      model: 'Flame 8'
    - regex: 'LS-5002'
      model: 'Water 1'
    - regex: 'LS-5005'
      model: 'Water 4'
    - regex: 'LS-5006'
      model: 'Water 6'
    - regex: 'LS-5008'
      model: 'Water 2'
    - regex: 'LS-5009'
      model: 'Wind 6'
    - regex: 'LS-5013'
      model: 'Wind 5'
    - regex: 'LS-5014'
      model: 'Wind 4'
    - regex: 'LS-5010'
      model: 'Wind 1'
    - regex: 'LS-5015'
      model: 'Water 8'
    - regex: 'LS-5016'
      model: 'Wind 7'
    - regex: 'LS-5504'
      model: 'Water 7'
    - regex: 'LS-5507'
      model: 'Water 7S'
    - regex: 'LS-5017'
      model: 'Water 11'
    - regex: 'LS-5018'
      model: 'Wind 4S'
    - regex: 'LS-5020'
      model: 'Water 10'
    - regex: 'LS-5201'
      model: 'Water F1S'
    - regex: 'LS-5502'
      model: 'Wind 3'
    - regex: 'LS-5503'
      model: 'Water 3'
    - regex: 'LS-5506'
      model: 'Water 9'
    - regex: 'LS-6001'
      model: 'Wind 2'

    - regex: 'LYF/([^/]+)/'
      model: '$1'

# Lumus
Lumus:
  regex: 'LUMUS Shell|(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: 'NEO(SR620|SC600)(?:[);/ ]|$)'
      model: 'Neo $1'
    - regex: 'INNO(SR545)(?:[);/ ]|$)'
      model: 'INNO $1'
    - regex: 'Lumus[_ ]Ion(?:[);/ ]|$)'
      model: 'Ion'
    # shell m-board
    - regex: 'LUMUS Shell [0-9A-Z]+'
      device: 'tv'
      model: ''

# M4tel
M4tel:
  regex: 'M4 SS[0-9]{4}(?:-R)?|M4_B[23]'
  device: 'smartphone'
  models:
    - regex: 'SS1050'
      model: 'Joy'
    - regex: 'SS1060'
      model: 'Live'
    - regex: 'SS1070'
      model: 'Sense'
    - regex: 'SS1080'
      model: 'Max One'
    - regex: 'SS1090'
      model: 'Max Ultra'
    - regex: 'SS4020'
      model: 'Play'
    - regex: 'SS4040'
      model: 'In Touch'
    - regex: 'SS4045'
      model: 'Style'
    - regex: 'SS4345'
      model: 'Soul Mini'
    - regex: 'SS4350'
      model: 'Soul'
    - regex: 'SS4445'
      model: 'Style Access'
    - regex: 'SS4450'
      model: 'Share'
    - regex: 'SS4451'
      model: 'Believe'
    - regex: 'SS4452'
      model: 'Dream'
    - regex: 'SS4453'
      model: 'Inspiration'
    - regex: 'SS4455'
      model: 'Excite'
    - regex: 'SS4456'
      model: 'Evolution'
    - regex: 'SS4457-R'
      model: 'Ever'
    - regex: 'SS4457'
      model: 'Elegance'
    - regex: 'SS4458-R'
      model: 'Feel Plus'
    - regex: 'SS4458'
      model: 'Attitude'
    - regex: 'M4_B([23])'
      model: 'B$1'

# IMO Mobile or In My Opinion Mobile
IMO Mobile:
  regex: 'IMO[ _]\w'
  device: 'smartphone'
  models:
    - regex: 'IMO[ _]Q([23]) Plus(?:[);/ ]|$)'
      model: 'Q$1 Plus'
    - regex: 'IMO[ _]Q2(?:[);/ ]|$)'
      model: 'Q2'
    - regex: 'IMO[ _]S2(?:[);/ ]|$)'
      model: 'S2'
    - regex: 'IMO[ _]FEEL A2(?:[);/ ]|$)'
      model: 'Feel A2'
    - regex: 'IMO[ _]S50(?:[);/ ]|$)'
      model: 'S50 Light'
    - regex: 'IMO[ _]S80(?:[);/ ]|$)'
      model: 'S80 Hero'
    - regex: 'IMO[ _]S89(?:[);/ ]|$)'
      model: 'S89 Miracle'
    - regex: 'IMO[ _]S88(?:[);/ ]|$)'
      model: 'S88 Discovery'
    - regex: 'IMO[ _]S99(?:[);/ ]|$)'
      model: 'S99 Ocean'
    - regex: 'IMO[ _]S98(?:[);/ ]|$)'
      model: 'S98 Champion'
    - regex: 'IMO[ _]S87(?:[);/ ]|$)'
      model: 'S87 Raptor'
    - regex: 'IMO[ _]S67(?:[);/ ]|$)'
      model: 'S67 Blast'
    - regex: 'IMO[ _]S78(?:[);/ ]|$)'
      model: 'S78 Glory'
    - regex: 'IMO[ _]Q8(?:[);/ ]|$)'
      model: 'Q8 Clarity'
    - regex: 'IMO[ _]Discovery II(?:[);/ ]|$)'
      model: 'Discovery II'
    - regex: 'IMO[ _]Q(?:[);/ ]|$)'
      model: 'Q'

    - regex: 'IMO[ _](Y5|Z[67])(?:[);/ ]|$)'
      model: 'Tab $1'
      device: 'tablet'
    - regex: 'IMO TAB X9(?:[);/ ]|$)'
      model: 'Tab X9'
      device: 'tablet'

# iLA or ILA Mobile
iLA:
  regex: 'iLA[-_ ](Silk|X)(?:[);/ ]|$)'
  device: 'smartphone'
  model: '$1'

# iNew
iNew:
  regex: 'iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'V3C(?:[);/ ]|$)'
      model: 'V3C'
    - regex: 'V3-?E(?:[);/ ]|$)'
      model: 'V3-E'
    - regex: 'V3 Plus(?:[);/ ]|$)'
      model: 'V3 Plus'
    - regex: 'V7A(?:[);/ ]|$)'
      model: 'V7A'
    - regex: 'FIRE_Tab_6(?:[);/ ]|$)'
      device: 'tablet'
      model: 'Fire Tab 6'

    - regex: 'iNew[ -_]([^;/]+) Build'
      model: '$1'

# iPro
iPro:
  regex: '(?:Kylin[ _]5.[05]S?|KYLIN40|Jade[78]s|Amber[67]S?|Amber5S_Pro|Phonenix50S|Zafiro)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Kylin_5.0S'
      model: 'Kylin 5.0S'
    - regex: 'Kylin (5.[05])'
      model: 'Kylin $1'
    - regex: 'KYLIN40'
      model: 'Kylin 40'
    - regex: 'Jade([78])s'
      model: 'Jade $1s'
    - regex: 'Amber7S'
      model: 'Amber 7S'
    - regex: 'Amber5S_Pro'
      model: 'Amber 5S Pro'
    - regex: 'Amber6'
      model: 'Amber 6'
    - regex: 'Phonenix50S'
      model: 'Phonenix 50S'
    - regex: 'Zafiro'
      model: 'Zafiro'

# Infinix
Infinix:
  regex: 'Infinix'
  device: 'smartphone'
  models:
    - regex: 'Infinix[ _-]X260'
      model: 'Buzz'
    - regex: 'Infinix[ _-]X502'
      model: 'Alpha Marvel'
    - regex: 'Infinix[ _-]X570'
      model: 'Alpha'

    - regex: 'Infinix[ _-]X350'
      model: 'Surf Smart'
    - regex: 'Infinix[ _-]X351'
      model: 'Surf Smart 3G'
    - regex: 'Infinix[ _-]X352'
      model: 'Surf Smart 2'
    - regex: 'Infinix[ _-]X403'
      model: 'Surf Spice'
    - regex: 'Infinix[ _-]X503'
      model: 'Surf Bravo'
    - regex: 'Infinix[ _-]X511'
      model: 'Surf Noir'

    - regex: 'Infinix[ _-]X400'
      model: 'Race'
    - regex: 'Infinix[ _-]X401'
      model: 'Race Lite'
    - regex: 'Infinix[ _-]X450'
      model: 'Race Bolt'
    - regex: 'Infinix[ _-]X451'
      model: 'Race Bolt Q'
    - regex: 'Infinix[ _-]X454'
      model: 'Race Bolt 2'
    - regex: 'Infinix[ _-]X500'
      model: 'Race Eagle'
    - regex: 'Infinix[ _-]X501'
      model: 'Race Jet'

    - regex: 'Infinix[ _-]X506'
      model: 'Zero'
    - regex: 'Infinix[ _-]X509'
      model: 'Zero 2'
    - regex: 'Infinix[ _-]X552'
      model: 'Zero 3'
    - regex: 'Infinix[ _-]X555'
      model: 'Zero 4'
    - regex: 'Infinix[ _-]X(?:574|602)'
      model: 'Zero 4 Plus'
    - regex: 'Infinix[ _-]X603'
      model: 'Zero 5'
    - regex: 'Infinix[ _-]X603B'
      model: 'Zero 5 Pro'
    - regex: 'Infinix[ _-]X620'
      model: 'Zero 6'

    - regex: 'Infinix[ _-]X507'
      model: 'Hot'
    - regex: 'Infinix[ _-]X510'
      model: 'Hot 2'
    - regex: 'Infinix[ _-]X55[34]'
      model: 'Hot 3'
    - regex: 'Infinix[ _-]X521'
      model: 'Hot S'
    - regex: 'Infinix[ _-]X522'
      model: 'Hot S2'
    - regex: 'Infinix[ _-]X557'
      model: 'Hot 4'
    - regex: 'Infinix[ _-]X556'
      model: 'Hot 4 Pro'
    - regex: 'Infinix[ _-]X559c'
      model: 'Hot 5'
    - regex: 'Infinix[ _-]X559'
      model: 'Hot 5 Lite'
    - regex: 'Infinix[ _-]X606[BC]?'
      model: 'Hot 6'
    - regex: 'Infinix[ _-]X608'
      model: 'Hot 6 Pro'
    - regex: 'Infinix[ _-]X624'
      model: 'Hot 7'
    - regex: 'Infinix[ _-]X650'
      model: 'Hot 8'
    - regex: 'Infinix[ _-]X680'
      model: 'Hot 9 Play'
    - regex: 'Infinix[ _-]X573B?'
      model: 'Hot S3'

    - regex: 'Infinix[ _-]X5010'
      model: 'Smart'
    - regex: 'Infinix[ _-]X5515F'
      model: 'Smart 2'
    - regex: 'Infinix[ _-]X5514D'
      model: 'Smart 2 Pro'
    - regex: 'Infinix[ _-]X653'
      model: 'Smart 4'

    - regex: 'Infinix[ _-]X626'
      model: 'S4'
    - regex: 'Infinix[ _-]X652'
      model: 'S5'
    - regex: 'Infinix[ _-]X660'
      model: 'S5 Pro'

    - regex: 'Infinix[ _-]X551'
      model: 'Hot Note'
      device: 'phablet'
    - regex: 'Infinix[ _-]X600'
      model: 'Note 2'
      device: 'phablet'
    - regex: 'Infinix[ _-]X601'
      model: 'Note 3'
      device: 'phablet'
    - regex: 'Infinix[ _-]X572'
      model: 'Note 4'
      device: 'phablet'
    - regex: 'Infinix[ _-]X571'
      model: 'Note 4 Pro'
      device: 'phablet'
    - regex: 'Infinix[ _-]X604'
      model: 'Note 5'
      device: 'phablet'
    - regex: 'Infinix[ _-]X610'
      model: 'Note 6'
      device: 'phablet'
    - regex: 'Infinix[ _-]X690'
      model: 'Note 7'
      device: 'phablet'
    - regex: 'Infinix[ _-]X656'
      model: 'Note 7 Lite'
      device: 'phablet'

    - regex: 'Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?'
      model: 'Hot $1$2'
    - regex: 'Infinix[ _-](X[78]00)'
      device: 'tablet'
      model: '$1'
    - regex: 'Infinix[ _-](X\d+)'
      model: '$1'
    - regex: 'Infinix[ _-]([a-z0-9_\-]+)'
      model: '$1'

# InFocus
InFocus:
  regex: 'IF(900[1237]|902[19]|903[15])(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'IF9001'
      model: 'Turbo 5'
    - regex: 'IF9007'
      model: 'A3'
    - regex: 'IF9021'
      model: 'Turbo 5 Plus'
    - regex: 'IF9035'
      model: 'A2'
    - regex: 'IF9002'
      model: 'M5s'
    - regex: 'IF9003'
      model: 'M6s'
    - regex: 'IF9031'
      model: 'Vision 3'
    - regex: 'IF9029'
      model: 'Vision 3 Pro'

# InnJoo
InnJoo:
  regex: 'InnJoo|(?:Halo Plus|Halo X|Halo[ _]4(?:[ _]mini[ _]LTE)?|Halo2 3G|Fire2 Plus LTE)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'InnJoo[ _]X3(?:[);/ ]|$)'
      model: 'X3'
    - regex: 'Halo[ _]X[ _]LTE(?:[);/ ]|$)'
      model: 'Halo X LTE'
    - regex: 'InnJoo[ _]X(?:[);/ ]|$)'
      model: 'X'
    - regex: 'Halo Plus(?:[);/ ]|$)'
      model: 'Halo Plus'
    - regex: 'Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)'
      model: 'Halo 4 Mini LTE'
    - regex: 'Halo 4(?:[);/ ]|$)'
      model: 'Halo 4'
    - regex: 'Halo2 3G(?:[);/ ]|$)'
      model: 'Halo 2 3G'
    - regex: 'InnJoo[ _]Pro2(?:[);/ ]|$)'
      model: 'Pro 2'
    - regex: 'Innjoo ONE 3G(?:[);/ ]|$)'
      model: 'One 3G'
    - regex: 'Innjoo[ _]2[ _]LTE(?:[);/ ]|$)'
      model: '2 LTE'
    - regex: 'InnJoo[ _]([2-4])'
      model: '$1'
    - regex: 'Fire2 Plus LTE'
      model: 'Fire 2 Plus LTE'

# Inkti
Inkti:
  regex: 'intki[ _]([^/;]*)[ _]Build'
  device: 'smartphone'
  model: '$1'

# Innos
Innos:
  regex: 'Innos_?(D6000)(?:[);/ ]|$)'
  device: 'smartphone'
  model: '$1'


# Innostream
Innostream:
  regex: 'INNO([a-z0-9]+)'
  device: 'feature phone'
  model: 'INNO$1'

# Insignia
Insignia:
  regex: 'NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12'
  device: 'tablet'
  models:
    - regex: 'NS-P11A8100'
      model: '11.6"'
    - regex: 'NS-(P10A6100|P16AT10)'
      model: 'Flex 10.1"'
    - regex: 'NS-P16AT08'
      model: 'Flex 8"'
    - regex: 'NS-P08A7100'
      model: '8"'
    - regex: 'NS-(P10A8100|P10A7100)'
      model: '10.1"'
    - regex: 'NS-P16AT785HD'
      model: 'Flex Elite 7.85"'
    - regex: 'AFTEAMR311'
      model: 'HD (2018)'
      device: 'tv'
    - regex: 'AFTJMST12'
      model: '4K (2018)'
      device: 'tv'

# Inq
INQ:
  regex: 'INQ[/ ]'
  device: 'feature phone'
  models:
    - regex: 'INQ/([a-z0-9\-]+)'
      model: '$1'
    - regex: 'INQ ([^;/]+) Build'
      model: '$1'
      device: 'smartphone'

# Intex
Intex:
  regex: 'Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|IM0318ND(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'IM0318ND'
      model: 'Aqua Lions 3'
    - regex: 'Intex[ _]([^/;]*)[ _]Build'
      model: '$1'
    - regex: '(Cloud (?:Fame|Glory) 4G)'
      model: '$1'
    - regex: '(Aqua|Cloud)[ _\.]([^/;\)]+)(?:[ _]Build|(?<!Build)/|\))'
      model: '$1 $2'
    - regex: 'Intex[ _]([a-z0-9_+\-]+)'
      model: '$1'

# i-mate
i-mate:
  regex: 'i-mate ([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# i-mobile
i-mobile:
  regex: 'i-mobile ?[a-z0-9]+|i-Style|IQ ?(9\.1|5\.5|5\.6A?)'
  device: 'feature phone'
  models:
    - regex: 'i-mobile (i-note[^/;]*) Build'
      model: '$1'
      device: 'tablet'
    - regex: 'i-Style ?([^;/]+) Build'
      model: 'i-Style $1'
      device: 'smartphone'
    - regex: 'IQ ?(9\.1|5\.5|5\.6A?)'
      model: 'IQ $1'
      device: 'smartphone'
    - regex: 'i-mobile (IQ[^/;]*) Build'
      model: '$1'
      device: 'smartphone'
    - regex: 'i-mobile(?: )?([a-z0-9\- ]+) Build'
      model: '$1'
    - regex: 'i-mobile(?: )?([a-z0-9]+)'
      model: '$1'

# ikomo
iKoMo:
  regex: 'iKoMo ([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# iOcean
iOcean:
  regex: 'iOCEAN|M6752|W180|X7[ _]?S|X8 mini'
  device: 'smartphone'
  models:
    - regex: 'X7S-T'
      model: 'X7S-T'
    - regex: 'X8 mini pro'
      model: 'X8 Mini Pro'
    - regex: 'X8 mini'
      model: 'X8 Mini'
    - regex: 'X7[ _]?S'
      model: 'X7S Elite'
    - regex: '(M6752|W180) Build'
      model: '$1'
    - regex: 'iOCEAN[ _\-]?([^/;]+) Build'
      model: '$1'
    - regex: 'iOCEAN[ _\-]?([^);/ ]+)'
      model: '$1'

# iView (iviewus.com)
iView:
  regex: '(733TPC|730TPC|769TPCII|930TPC)(?:[);/ ]|$)'
  device: 'tablet'
  model: '$1'

# Impression
Impression:
  regex: '(?:Impression[ _\-]?([^/;]+)|A502|I10\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: '(A502)'
      model: '$1'
      device: 'smartphone'
    - regex: 'ImSmart[ _]?([^/;)]+)(?: Build|\))'
      model: 'ImSmart $1'
      device: 'smartphone'
    - regex: 'ImPad[ _]?([^/;)]+)(?: Build|\))'
      model: 'ImPad $1'
    - regex: '(I10\-LE)'
      model: '$1'
      device: 'smartphone'
    - regex: 'Impression[ _\-]?([^/;)]+)(?: Build|\))'
      model: '$1'

#iLife or i-life (lifedigital.com)
iLife:
  regex: '(ITELL[_ ](?:K3300|K3500N?|K4700))(?:[);/ ]|$)'
  device: 'tablet'
  model: '$1'

# iTel
iTel:
  regex: 'itel|iNote|GP10X2019(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'W6502'
      device: 'phablet'
      model: 'S16'
    - regex: 'W5505'
      model: 'A36'
    - regex: 'W6002E?'
      model: 'S15'
    - regex: 'L5502'
      model: 'A44 Air'
    - regex: 'L5505'
      model: 'A47'
    - regex: 'L6006'
      model: 'A48'
    - regex: 'L6003P'
      model: 'A55 LTE'
    - regex: 'L6002P'
      model: 'S15 Pro'
    - regex: 'L5002'
      model: 'A22'
    - regex: 'L5503'
      model: 'A46'
    - regex: 'L6004'
      model: 'A56 LTE'
    - regex: 'W6004P'
      model: 'A56 Pro'
    - regex: 'W6001'
      model: 'P33 Plus'
    - regex: 'W6003'
      model: 'A55'
    - regex: 'L6005'
      model: 'Vision 1'
    - regex: 'L6501'
      model: 'Vision 1 Plus'
    - regex: 'L6502'
      model: 'Vision 1 Pro'
    - regex: 'GP10X2019'
      model: 'GP10X2019'
    - regex: 'iNote ([^/;]*)Build'
      model: 'iNote $1'
    - regex: 'iNote_([a-z0-9\-_]+)'
      model: 'iNote $1'
    - regex: 'itel-it(1410|1512|1520)(?:[);/ ]|$)'
      model: 'it$1'
    - regex: 'itel-it1553(?:[);/ ]|$)'
      model: 'Power Pro'
    - regex: 'itel[- ](A14|A16 Plus|A44 Power|A23S|A52 Lite)'
      model: '$1'

    - regex: 'itel it1701'
      device: 'tablet'
      model: 'iNote Prime'
    - regex: 'itel it170([23])'
      device: 'tablet'
      model: 'iNote Prime $1'

    - regex: 'iTel ([^/;]*)Build'
      model: '$1'
    - regex: 'iTel[_ ]([a-z0-9\-_]*)'
      model: '$1'

# iZotron
iZotron:
  regex: '(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)'
      model: 'MI7 Hero Beta'
    - regex: 'Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)'
      model: 'MI7 Hero Tab'

# JAY-Tech
JAY-Tech:
  regex: 'TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+'
  device: 'tablet'
  models:
    - regex: 'TPC-([A-Z0-9]+)'
      model: 'Tablet PC $1'
    - regex: '(TPCY-TX[TE][^);/ ]+)'
      model: '$1'

# Jiayu
Jiayu:
  regex: 'JIAYU[ _-]|(?:JY-G4[\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(?:JIAYU G4_G5|JY-G4[\\_]G5)(?:[);/ ]|$)'
      model: 'G4/G5'
    - regex: 'JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)'
      model: '$1'
    - regex: 'JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)'
      model: 'JY-$1'

# Jolla
Jolla:
  regex: 'Jolla'
  device: 'smartphone'
  model: ''

# Just5 (www.just5.com)
Just5:
  regex: 'JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C100|M303|X1)|Freedom'
  device: 'smartphone'
  models:
    - regex: 'COSMO[_ ](L707|L808)'
      model: 'Cosmo $1'
    - regex: 'FREEDOM[ _](C100|M303|X1)'
      model: 'Freedom $1'
    - regex: 'Freedom'
      model: 'Freedom'
    - regex: 'JUST5(-)?SPACER2s'
      model: 'Spacer 2S'
    - regex: 'JUST5(-)?SPACER2'
      model: 'Spacer 2'
    - regex: 'JUST5SPACER'
      model: 'Spacer'
    - regex: 'BLASTER 2'
      model: 'Blaster 2'
    - regex: 'BLASTER'
      model: 'Blaster'

# Kalley (www.kalley.com.co)
Kalley:
  regex: 'KALLEY|(?:ELEMENT (?:MAX|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G))(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'ELEMENT MAX'
      model: 'Element Max'
    - regex: 'ELEMENT Q'
      model: 'Element Q'
    - regex: 'ELEMENT_PRO_2'
      model: 'Element Pro 2'
    - regex: 'K-BOOK(8MG|73G)'
      device: 'tablet'
      model: 'K-BOOK$1'
    - regex: 'KALLEY,(55D1240)'
      device: 'tv'
      model: '$1'

# Kaan
Kaan:
  regex: 'KAAN[ _](N[12]|A1)(?:[);/ ]|$)'
  device: 'smartphone'
  model: '$1'

# Kazam
Kazam:
  regex: 'Kazam|Trooper_X[0-9][0-9](?:[);/ ]|$)|Tornado 348|TROOPER 4\.0'
  device: 'smartphone'
  models:
    - regex: 'Tornado 348'
      model: 'Tornado 348'
    - regex: 'Thunder 450W'
      model: 'Thunder 450W'
    - regex: 'TROOPER 4\.0'
      model: 'Trooper X4.0'
    - regex: 'Trooper_X([0-9])([0-9])(?:[);/ ]|$)'
      model: 'Trooper X$1.$2'
    - regex: 'Kazam[; _]([^;/)]+)(?: Build|\))'
      model: '$1'

# Keneksi
Keneksi:
  regex: 'KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: '(Hemera|Teta Dual|Helios)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'KENEKSI[ _-]liberty'
      model: 'Liberty'
    - regex: 'KENEKSI[ _-]FLASH'
      model: 'Flash'
    - regex: 'KENEKSI[ _-]SUN'
      model: 'Sun'
    - regex: 'KENEKSI[ _-]ZETA'
      model: 'Zeta'
    - regex: 'KENEKSI[ _-]SIGMA'
      model: 'Sigma'
    - regex: 'KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)'
      model: '$1'

# Kempler & Strauss
'Kempler & Strauss':
  regex: 'Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P1|TV|X|8_PLUS)'
  device: 'smartphone'
  models:
    - regex: 'Alumini ?2'
      model: 'Alumini 2'
    - regex: 'Alumini_?3_?Plus'
      model: 'Alumini 3 Plus'
    - regex: 'Alumini3'
      model: 'Alumini 3'
    - regex: 'KEMPLER_P1'
      model: 'P1'
    - regex: 'KEMPLER_TV'
      model: 'TV'
    - regex: 'KEMPLER_X'
      model: 'X'
    - regex: 'KEMPLER_8_PLUS'
      model: '8 Plus'

# Kiano
Kiano:
  regex: 'Kiano|Elegance_[45]_[015](?:_PRO)?|Elegance 6|CORE 10.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\d+(?:[_ ]3GR?)?(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'Slim ?Tab ?(\d+)(?:[_ ]3GR?)?'
      model: 'Slim Tab $1'
      device: 'tablet'
    - regex: 'CORE 10.1 DUAL 3G'
      model: 'CORE 10.1 DUAL 3G'
      device: 'tablet'
    - regex: 'Elegance_(5)_([51])_Pro'
      model: 'Elegance $1.$2" Pro'
    - regex: 'Elegance_([45])_([015])'
      model: 'Elegance $1.$2"'
    - regex: 'Elegance 6'
      model: 'Elegance 6 5.85"'
    - regex: '(Kiano)?(Intelect|Elegance) ?(7|8|10)?'
      model: '$2 $3'
      device: 'tablet'
    - regex: 'Kiano[ _]([^;/]+) Build'
      model: '$1'

# Kingsun
Kingsun:
  regex: 'Kingsun[ _-]'
  device: 'smartphone'
  models:
    - regex: 'Kingsun[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'Kingsun[ -]((?!Build)[a-z0-9_-]+)'
      model: '$1'

# Kocaso
Kocaso:
  regex: 'Kocaso|M(?:729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780)(?:[);/ ]|$)'
  device: 'tablet'
  models:
    - regex: 'M729(?:[);/ ]|$)'
      model: 'M729'
    - regex: 'M(7[357][026])[hw]?(?:[);/ ]|$)'
      model: 'M$1'
    - regex: 'M(76[01236])[bw]?(?:[);/ ]|$)'
      model: 'M$1'
    - regex: 'MX780(?:[);/ ]|$)'
      model: 'MX780'
    - regex: 'M(83[016])(?:[);/ ]|$)'
      model: 'M$1'
    - regex: 'M(8[567]0)(?:[);/ ]|$)'
      model: 'M$1'
    - regex: 'M851(?:[);/ ]|$)'
      model: 'M851'
    - regex: 'M1050S(?:[);/ ]|$)'
      model: 'M1050s'
    - regex: 'M(106[012368])W?(?:[);/ ]|$)'
      model: 'M$1'
    - regex: 'M1070(?:[);/ ]|$)'
      model: 'M1070'
    - regex: 'MX736(?:-kit)?(?:[);/ ]|$)'
      model: 'MX736'
    - regex: 'MX780(?:[);/ ]|$)'
      model: 'MX780'
    - regex: 'Kocaso[ _\-]?([^;/]+) Build'
      model: '$1'
    - regex: 'Kocaso[ _\-]?([a-z0-9_-]+)'
      model: '$1'

# Kogan
Kogan:
  regex: 'Kogan'
  device: 'smartphone'
  models:
    - regex: 'Kogan[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'Kogan[ _-]([a-z0-9_-]+)'
      model: '$1'

# Komu
Komu:
  regex: 'Komu[ -]'
  device: 'smartphone'
  models:
    - regex: 'Komu[ -]([^;/]+) Build'
      model: '$1'
    - regex: 'Komu[ -]([a-z0-9_-]+)'
      model: '$1'

# Koobee
Koobee:
  regex: 'Koobee'
  device: 'smartphone'
  models:
    - regex: 'Koobee[ _\-]?([^;/]+) Build'
      model: '$1'
    - regex: 'Koobee[ _\-]?([a-z0-9_-]+)'
      model: '$1'

# Kumai
Kumai:
  regex: '(?:KM-)?Kumai'
  device: 'smartphone'
  models:
    - regex: '(?:KM-)?Kumai[ _\-]?([^;/]+) Build'
      model: '$1'
    - regex: '(?:KM-)?Kumai[ _\-]?([a-z0-9_-]+)'
      model: '$1'

# KT-Tech
KT-Tech:
  regex: '(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)'
  device: 'smartphone'
  model: '$1'

# kddi
KDDI:
  regex: 'kddi-([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Kodak
Kodak:
  regex: 'KODAK|(?:IM5|Ektra|Smartway_T1)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'IM5'
      model: 'IM5'
    - regex: 'Ektra(?:[);/ ]|$)'
      model: 'Ektra'
    - regex: '(?:KODAK[_ ])?SMARTWAY[_ ]([MTX]1)'
      model: 'Smartway $1'
    - regex: 'Tablet (7|10)'
      device: 'tablet'
      model: 'Tablet $1'

# KOPO
KOPO:
  regex: 'KOPO[ _-]'
  device: 'smartphone'
  models:
    - regex: 'KOPO[ _\-]?([^/;]+) Build'
      model: '$1'
    - regex: 'KOPO[ _\-]?([^);/ ]+)'
      model: '$1'

# Koridy
Koridy:
  regex: 'KORIDY[ _-]([^/;]+) Build'
  device: 'smartphone'
  model: '$1'

# KRONO
KRONO:
  regex: 'NET1100|NET_(?:TITAN|VOLT)'
  device: 'smartphone'
  models:
    - regex: 'NET1100'
      model: 'NET 1100'
    - regex: 'NET_(TITAN|VOLT)'
      model: 'NET $1'

#k-touch
K-Touch:
  regex: 'K-?Touch[ _][a-z0-9]+'
  device: 'smartphone'
  models:
    - regex: 'K-?Touch[ _]([^/;]*)[ _]Build'
      model: '$1'
    - regex: 'K-?Touch[ _]([a-z0-9]+)'
      model: '$1'

# Diva
Diva:
  regex: '(QC-(?:703GN|704GA|803GN|1013G|7BHD))(?:[);/ ]|$)'
  device: 'tablet'
  model: '$1'

# kyocera (kyocera.co.jp, kyocera.com)
Kyocera:
  regex: 'Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[13-9]|KYT3[123]|KYF3[123579]|KYF40|KYX31|KYG01|KYY2[1-4]|S2151|KC-S701|S[468]-KC|KYV40U?|KYV4[1-8]|KYV4[47]|KC-S301AE|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|[47]04KC|A001KC|WX10K|URBANO PROGRESSO|E7110)(?:[-_]u2?)?(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: 'C5120(?:[);/ ]|$)'
      model: 'Milano'
    - regex: 'S4-KC(?:[);/ ]|$)'
      model: 'One S4'
    - regex: 'S6-KC(?:[);/ ]|$)'
      model: 'One S6'
    - regex: 'S8-KC(?:[);/ ]|$)'
      model: 'One S8'
    - regex: 'C5155(?:[);/ ]|$)'
      model: 'Rise'
    - regex: '602KC(?:[);/ ]|$)'
      model: 'Digno G'
    - regex: '503KC(?:[);/ ]|$)'
      model: 'Digno E'
    - regex: '404KC(?:[);/ ]|$)'
      model: 'Digno C'
    - regex: '704KC(?:[);/ ]|$)'
      model: 'Digno J'
    - regex: '302KC(?:[);/ ]|$)'
      model: 'Digno T'
    - regex: 'NP501KC(?:[);/ ]|$)'
      model: 'Digno'
    - regex: 'WX10K(?:[);/ ]|$)'
      model: 'Digno Dual 2'
    - regex: 'KYV36(?:[);/ ]|$)'
      model: 'Digno Rafre'
    - regex: '901KC(?:[);/ ]|$)'
      model: 'Digno BX'
    - regex: 'KYV39(?:[);/ ]|$)'
      model: 'Miraie F'
    - regex: 'KYX31(?:[);/ ]|$)'
      model: 'Infobar XV'
    - regex: 'C5170(?:[);/ ]|$)'
      model: 'Hydro'
    - regex: 'C5215(?:[);/ ]|$)'
      model: 'Hydro EDGE'
    - regex: 'C6522N?'
      model: 'Hydro XTRM'
    - regex: 'C6730'
      model: 'Hydro ICON'
    - regex: 'C6750'
      model: 'Hydro ELITE'
    - regex: 'C6530N'
      model: 'Hydro LIFE'
    - regex: 'C6740(N)?'
      model: 'Hydro WAVE'
    - regex: 'C6743'
      model: 'Hydro Reach'
    - regex: 'E6560[CT]'
      model: 'DuraForce'
    - regex: 'E6810'
      model: 'DuraForce Pro'
    - regex: 'E6910'
      model: 'DuraForce Pro 2'
    - regex: 'E7110'
      model: 'DuraForce Ultra 5G'
    - regex: 'KC-S701'
      model: 'Torque'
    - regex: 'KYG01'
      model: 'Torque 5G'
    - regex: 'KYL21(?:[);/ ]|$)'
      model: 'Digno S'
    - regex: 'KYL23(?:[);/ ]|$)'
      model: 'Miraie'
    - regex: 'KYY24(?:[);/ ]|$)'
      model: 'Torque G01'
    - regex: 'KYF32(?:[);/ ]|$)'
      model: 'Easy Mobile Phone'
    - regex: 'KYF35(?:[);/ ]|$)'
      model: 'Marvera'
    - regex: 'KYF40(?:[);/ ]|$)'
      model: 'Mamorino 5'
    - regex: 'KYF3[179](?:[);/ ]|$)'
      model: 'Gratina 4G'
    - regex: 'KYV48(?:[);/ ]|$)'
      model: 'Gratina KYV48'
    - regex: 'KYF33(?:[);/ ]|$)'
      model: 'Torque X01'
    - regex: 'KYV35(?:[);/ ]|$)'
      model: 'Torque G02'
    - regex: 'KYV41(?:[);/ ]|$)'
      model: 'Torque G03'
    - regex: 'KYV46(?:[);/ ]|$)'
      model: 'Torque G04'
    - regex: 'KYV47(?:-u)?(?:[);/ ]|$)'
      model: 'Basio 4'
    - regex: 'KYV43(?:[);/ ]|$)'
      model: 'Basio 3'
    - regex: '705KC(?:[);/ ]|$)'
      model: 'Kantan Sumaho'
    - regex: 'KYV37(?:[);/ ]|$)'
      model: 'Qua Phone'
    - regex: 'KYV42(?:_u)?(?:[);/ ]|$)'
      model: 'Qua Phone QX'
    - regex: 'KYV44(?:_u2?)?(?:[);/ ]|$)'
      model: 'Qua Phone QZ'
    - regex: 'KYT33(?:[);/ ]|$)'
      model: 'Qua Tab QZ10'
      device: 'tablet'
    - regex: 'KYT32(?:[);/ ]|$)'
      model: 'Qua Tab QZ8'
      device: 'tablet'
    - regex: 'KYT31(?:[);/ ]|$)'
      model: 'Qua Tab 01'
      device: 'tablet'
    - regex: 'KYV40U?(?:[);/ ]|$)'
      model: 'Rafre'
    - regex: 'KYV33(?:[);/ ]|$)'
      model: 'Infobar A03'
    - regex: 'KYY21(?:[);/ ]|$)'
      model: 'Urbano L01'
    - regex: 'KYY22(?:[);/ ]|$)'
      model: 'Urbano L02'
    - regex: 'KYY23(?:[);/ ]|$)'
      model: 'Urbano L03'
    - regex: 'KYV31(?:[);/ ]|$)'
      model: 'Urbano V01'
    - regex: 'KYV34(?:[);/ ]|$)'
      model: 'Urbano V02'
    - regex: 'KYV(?:45|38)(?:[);/ ]|$)'
      model: 'Urbano V03'
    - regex: '(?:Kyocera-)?E6790(?:TM)?'
      model: 'DuraForce XD'
    - regex: 'X3-KC(?:[);/ ]|$)'
      model: 'One X3'
    - regex: 'E6782(?:[);/ ]|$)'
      model: 'Brigadier'
    - regex: 'E6782L(?:[);/ ]|$)'
      model: 'DuraScout'
    - regex: '(KC-S301AE)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'A001KC(?:[);/ ]|$)'
      model: 'Katan Sumaho 2'
    - regex: 'URBANO PROGRESSO(?:[);/ ]|$)'
      model: 'Urbano Progresso'

    # explicit feature phone models
    - regex: 'S2151'
      model: 'Coast'
      device: 'feature phone'

    - regex: 'Kyocera-KZ-([a-z0-9]+)'
      model: 'KZ $1'
    - regex: 'Kyocera(?:[\-/])?([a-z0-9]+)'
      model: '$1'
    - regex: '(KWC|QC)-?([a-z0-9]+)'
      model: '$1-$2'

# Krüger&Matz (Kruger&Matz)
Krüger&Matz:
  regex: 'Kruger[ _&]Matz|KrugerMatz[ _]|FLOW ?5PLUS|FLOW_5|FLOW7|FLOW6(?:S|Lite)|DRIVE[_ ]6S?|MOVE8mini|MOVE_|LIVE_6plus|LIVE 5 PLUS|LIVE4_KM043[89]|LIVE 7S|KM(?:106[67]|1065G|0701_1|0702|0805_1)'
  device: 'smartphone'
  models:
    - regex: 'MOVE8mini'
      model: 'MOVE 8 Mini'
    - regex: 'MOVE_6_mini'
      model: 'MOVE 6 Mini'
    - regex: 'MOVE[_ ]([78]|6S)'
      model: 'MOVE $1'
    - regex: 'DRIVE 4 mini LTE'
      model: 'DRIVE 4 mini LTE'
    - regex: 'DRIVE[ _]([456][S]?)(?:[);/ ]|$)'
      model: 'DRIVE $1'
    - regex: 'FLOW ?5PLUS(?:[);/ ]|$)'
      model: 'FLOW 5 Plus'
    - regex: 'FLOW6Lite(?:[);/ ]|$)'
      model: 'FLOW 6 Lite'
    - regex: 'FLOW[ _]?([4-7][S]?)(?:[);/ ]|$)'
      model: 'FLOW $1'
    - regex: 'LIVE4_(KM043[89])(?:[);/ ]|$)'
      model: 'LIVE 4 $1'
    - regex: 'KrugerMatz_LIVE4(?:[);/ ]|$)'
      model: 'LIVE 4'
    - regex: '_LIVE5_(KM0450)(?:[);/ ]|$)'
      model: 'LIVE 5 $1'
    - regex: 'LIVE 5 PLUS(?:[);/ ]|$)'
      model: 'LIVE 5 Plus'
    - regex: 'LIVE_6plus(?:[);/ ]|$)'
      model: 'LIVE 6 Plus' # KM0454
    - regex: 'LIVE 7S(?:[);/ ]|$)'
      model: 'LIVE 7S'

    - regex: 'KM(106[67])(?:[);/ ]|$)'
      device: 'tablet'
      model: 'EAGLE $1 10.1"'
    - regex: 'KM(1065G)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'EAGLE $1 10.1"'
    - regex: 'KM0(701)_1(?:[);/ ]|$)'
      device: 'tablet'
      model: 'EAGLE $1 7.1"'
    - regex: 'KM0(805)_1(?:[);/ ]|$)'
      device: 'tablet'
      model: 'EAGLE $1 8.0"'
    - regex: 'KM0(702)(?:[);/ ]|$)'
      device: 'tablet'
      model: 'EAGLE $1 7.0"'

# LAIQ
LAIQ:
  regex: 'LAIQ'
  device: 'smartphone'
  models:
    - regex: '(Glam|New York|Dubai)(?:[);/ ]|$)'
      model: '$1'

# AIS
AIS:
  regex: 'iris708|Kingcomm C500'
  device: 'smartphone'
  models:
    - regex: 'iris708'
      model: 'LAVA PRO 4.5'
    - regex: 'Kingcomm C500'
      model: 'Super Smart Plus X3'

# Lava (Lavamobiles.com)
Lava:
  regex: 'Lava[ _]|LAVAA1|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;]+)(?:\)| Build)|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|(?:Flair Z1|PixelV1|Pixel V2|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: 'Flair Z1(?:[);/ ]|$)'
      model: 'Flair Z1'
    - regex: 'A97 IPS(?:[);/ ]|$)'
      model: 'A97 IPS'
    - regex: 'A97 2GB PLUS(?:[);/ ]|$)'
      model: 'A97 2GB Plus'
    - regex: 'A76Plus(?:[);/ ]|$)'
      model: 'A76 Plus'
    - regex: 'Pixel ?V([12])(?:[);/ ]|$)'
      model: 'Pixel V$1'
    - regex: 'X1 Selfie(?:[);/ ]|$)'
      model: 'Iris X1 Selfie'
    - regex: 'X41 Plus(?:[);/ ]|$)'
      model: 'X41 Plus'
    - regex: '(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)'
      model: 'A$1'
    - regex: 'LAVA_R1'
      model: 'R1'
    - regex: 'Z61_2GB(?:[);/ ]|$)'
      model: 'Z61'
    - regex: 'LE9920[ _]P(?:[);/ ]|$)'
      model: 'V7'
    - regex: 'LE9920(?:[);/ ]|$)'
      model: 'Z53'
    - regex: 'LH9910(?:[);/ ]|$)'
      model: 'Z52'
    - regex: 'LH9810(?:[);/ ]|$)'
      model: 'Iris 52'
    - regex: 'LN9910(?:[);/ ]|$)'
      model: 'Z41'
    - regex: 'LE9910(?:[);/ ]|$)'
      model: 'V8'
    - regex: 'LH9920(?:[);/ ]|$)'
      model: 'V+6'
    # explicit feature phone models
    - regex: 'DISCOVER136'
      device: 'feature phone'
      model: 'Discover 136'
    - regex: 'KKT QUADRA'
      device: 'feature phone'
      model: 'KKT Quadra'
    - regex: 'KKT40[ ]?Power[P\+]'
      device: 'feature phone'
      model: 'KKT40 Power Plus'
    # explicit tablet models
    - regex: 'Ivory(S1|S4G)?(?:[);/ ]|$)'
      device: 'tablet'
      model: 'Ivory $1'
    # explicit general
    - regex: 'iris[ _]?([^/;]+)(?:\)| Build)'
      model: 'Iris $1'
    - regex: 'Lava[ _]?([^/;]+)(?:/| Build)'
      model: '$1'

# SKG (skgmobile.net | skgmobile.com)
SKG:
  regex: '(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)'
  device: 'smartphone'
  model: '$1'

# Landvo
Landvo:
  regex: 'XM[123]00|(?<!Blade )S6 Build'
  device: 'smartphone'
  models:
    - regex: 'S6 Build'
      model: 'S6'
    - regex: 'XM([123])00([^/;]*) Build'
      model: 'XM$100$2'

# Land Rover
Land Rover:
  regex: 'Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3'
  device: 'smartphone'
  models:
    - regex: 'Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'Polar3'
      model: 'Ioutdoor Polar 3'

# lanix (lanix.com)
Lanix:
  regex: 'LANIX-([a-z0-9]+)|Ilium[ _]|IliumPad|X120C|Alpha 950'
  device: 'smartphone'
  models:
    - regex: 'ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])'
      model: 'Ilium Pad $1'
      device: 'tablet'
    - regex: 'X120C'
      model: 'Ilium X120C'
    - regex: 'Ilium[ _](Alpha [15]s|Alpha [379]|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|5[12]0|500B|710)|M[579]s)(?:[);/ ]|$)'
      model: 'Ilium $1'
    - regex: 'ILIUM[ _]([^;/]+) Build'
      model: 'Ilium $1'
    - regex: 'Alpha 950'
      model: 'Ilium Alpha 950'
    - regex: 'LANIX-([a-z0-9]+)'
      device: 'feature phone'
      model: '$1'

# Lark
Lark:
  regex: '(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi'
  device: 'tablet'
  models:
    - regex: 'Cumulus[ _](5\.5|[56])[ _]HD'
      model: 'Cumulus $1 HD'
      device: 'smartphone'
    - regex: 'FreeMe X2 ([79]) (?:ver|v)?\.([23])'
      model: 'FreeMe X2 $1 Version $2'
    - regex: 'FreeMe X4 7 3G HD'
      model: 'FreeMe X4 7HD 3G'
    - regex: 'FreeMe[ _]X2[ _]([7-9])'
      model: 'FreeMe X2 $1'
    - regex: 'FreeMe X4[ _]7[_ ]HD'
      model: 'FreeMe X4 7HD'
    - regex: 'FreeMe X4[ _]9'
      model: 'FreeMe X4 9'
    - regex: 'FreeBird 5WiFi'
      model: 'FreeBird 5 WiFi'
    - regex: '(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\.1|10|X4[_ ]7[ _]IPS)'
      model: 'Evolution $1'
    - regex: 'Ul(?:ti|it)mate (X4 10\.1 3G IPS|X4 8s 3G|7i)'
      model: 'Ultimate $1'
    - regex: 'PHABLET 7'
      model: 'Phablet 7'
    - regex: 'Phablet 6\.0'
      model: 'Phablet 6.0'
      device: 'smartphone'
    - regex: 'Bjorn[_ ]SP-500'
      model: 'Bjorn SP-500'
      device: 'smartphone'
    - regex: 'Cirrus[ _](4\.5|[45])'
      model: 'Cirrus $1'
      device: 'smartphone'
    - regex: 'Lark[ _](Stratus[_ ]5)'
      model: '$1'
      device: 'smartphone'

# lct
LCT:
  regex: 'LCT_([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Le Pan
'Le Pan':
  regex: 'Le ?Pan|TC970 ([^;/]+)Build'
  device: 'tablet'
  models:
    - regex: 'TC802A'
      model: 'Le Pan Mini'
    - regex: 'TC970 ([^;/]+)Build'
      model: 'TC970 $1'
    - regex: 'Le ?Pan ?(II|S)(?:[);/ ]|$)'
      model: 'Le Pan $1'
    - regex: 'Le ?Pan ?([^;/]+) Build'
      model: '$1'

# Leagoo
Leagoo:
  regex: '(?:MY)?LEAGOO[ _-]?|(?:M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s)|Elite [15]|Venture 1|Z10-E)(?:[);/ ]|$)'
  device: 'smartphone'
  models:
    - regex: 'LEAGOO[- _]M8[_-]?Pro(?:[);/ ]|$)'
      model: 'M8 Pro'
    - regex: 'LEAGOO[- _](Z[156]|M[58]|T1)(?:[);/ ]|$)'
      model: '$1'
    - regex: 'M5 EDGE'
      model: 'M5 Edge'
    - regex: 'LEAGOO[_ ]Lead([57])'
      model: 'Lead $1'
    - regex: 'KIICAA POWER'
      model: 'KICCAA Power'
    - regex: 'KIICAA MIX'
      model: 'KICCAA Mix'
    - regex: 'Elite ([15])(?:[);/ ]|$)'
      model: 'Elite $1'
    - regex: 'Venture 1(?:[);/ ]|$)'
      model: 'Venture 1'
    - regex: '(?:LEAGOO[- _])?(Z10-E|M6)(?:[);/ ]|$)'
      model: '$1'
    - regex: '(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)'
      model: '$1'

    - regex: '(?:Leapad[ _])(7s|10|X)'
      mode